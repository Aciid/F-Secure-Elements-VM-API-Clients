{
  "swagger": "2.0",
  "info": {
    "title": "Radar 3.0 API integration",
    "version": "integration"
  },
  "paths": {
    "/api/integration/assetmonitoring/{id}": {
      "delete": {
        "tags": [
          "Assets monitoring"
        ],
        "summary": "Delete discovery scan asset monitoring",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/integration/assetmonitoring/custom": {
      "post": {
        "tags": [
          "Assets monitoring"
        ],
        "summary": "Create new custom asset monitoring",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AssetMonitoringBaseViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/assetmonitoring/custom/{id}": {
      "get": {
        "tags": [
          "Assets monitoring"
        ],
        "summary": "Get custom asset monitoring details",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssetMonitoringBaseViewModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Assets monitoring"
        ],
        "summary": "Update custom asset monitoring",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AssetMonitoringBaseViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/assetmonitoring/custom/{id}/assets": {
      "post": {
        "tags": [
          "Assets monitoring"
        ],
        "summary": "Pass custom assets for asset monitoring mechanism (for example external hosts etc.)",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "description": "",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscoveredAssetViewModel"
              }
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/assetmonitoring/discoveryscan": {
      "post": {
        "tags": [
          "Assets monitoring"
        ],
        "summary": "Create new discovery scan asset monitoring",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DiscoveryScanAssetMonitoringViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/assetmonitoring/discoveryscan/{id}": {
      "get": {
        "tags": [
          "Assets monitoring"
        ],
        "summary": "Get discovery scan asset monitoring details",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DiscoveryScanAssetMonitoringViewModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Assets monitoring"
        ],
        "summary": "Update discovery scan asset monitoring",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DiscoveryScanAssetMonitoringViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/assetmonitoring/internetdiscovery": {
      "post": {
        "tags": [
          "Assets monitoring"
        ],
        "summary": "Create new internet discovery asset monitoring",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "View model representing information about a new internet discovery asset monitoring.",
            "schema": {
              "$ref": "#/definitions/InternetDiscoveryAssetMonitoringViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/assetmonitoring/internetdiscovery/{id}": {
      "get": {
        "tags": [
          "Assets monitoring"
        ],
        "summary": "Get internet discovery asset monitoring details",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Asset monitoring unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InternetDiscoveryAssetMonitoringViewModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Assets monitoring"
        ],
        "summary": "Update internet discovery asset monitoring",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "View model representing information about updated internet discovery asset monitoring.",
            "schema": {
              "$ref": "#/definitions/InternetDiscoveryAssetMonitoringViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/assetmonitoring/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Assets monitoring"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/AssetMonitoringFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[AssetMonitoringListViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans": {
      "put": {
        "tags": [
          "Network scans"
        ],
        "summary": "Update System Scan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to update the existing scan.",
            "schema": {
              "$ref": "#/definitions/UpdateSystemScanViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Updated System Scan data",
            "schema": {
              "$ref": "#/definitions/ScanViewModel"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get the specific System Scan definition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "System Scan definition",
            "schema": {
              "$ref": "#/definitions/ScanViewModel"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/notifications": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get a list of notifications for a System Scan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of notifications",
            "schema": {
              "$ref": "#/definitions/Collection[MessageNotificationViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/ports": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get scan ports",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "onlyOpenPorts",
            "description": "A flag indicates that only open ports are requested",
            "type": "boolean"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Collection[ScanPortSimpleViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/tags": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Gets available scan tags",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Collection[TagViewModel]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Network scans"
        ],
        "summary": "Add existing or create a new tag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Information about a new tag.",
            "schema": {
              "$ref": "#/definitions/NewTagViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagViewModel"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/tags/{technicalName}": {
      "delete": {
        "tags": [
          "Network scans"
        ],
        "summary": "Removes tag",
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "technicalName",
            "description": "Tag technical name to remove",
            "required": true,
            "type": "string"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/systemscans/allowediprange": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get allowed IP range for scanning",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Allowed IP range",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/{scanId}/configuration/xml": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Download scan configuration",
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A scan configuration xml"
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/{scanId}/detailed/assetid": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get the scan information",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Returns vulnerability ScanViewModel item",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/{scanId}/info": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get the scan information",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Returns vulnerability ScanViewModel item",
            "schema": {
              "$ref": "#/definitions/ScanViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/{scanId}/log": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get a scan log",
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "newerThan",
            "description": "Optional parameter, show only newer logs than the specified date. (relevant when asking for refreshed logs)",
            "type": "string",
            "format": "date-time"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Scan log view model"
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/{scanId}/log/refresh": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Refresh scan log",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/{scanId}/start": {
      "put": {
        "tags": [
          "Network scans"
        ],
        "summary": "Start the vulnerability scan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Returns the started vulnerablity ScanViewModel item",
            "schema": {
              "$ref": "#/definitions/VulnerabilityScansListViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/{scanId}/stop": {
      "put": {
        "tags": [
          "Network scans"
        ],
        "summary": "Stop vulnerability scan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Returns stopped vulnerability ScanViewModel item",
            "schema": {
              "$ref": "#/definitions/VulnerabilityScansListViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/add/batch": {
      "post": {
        "tags": [
          "Network scans"
        ],
        "summary": "Adds many System Scans at once",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "description": "Operation parameters",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AddSystemScansViewModel"
              }
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Object with a list of added scan unique identifiers",
            "schema": {
              "$ref": "#/definitions/AddSystemScansResultViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/any": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get information if there are any scans defined within the current organization",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "ScansAndScanGroupsViewModel",
            "schema": {
              "$ref": "#/definitions/ScansAndScanGroupsViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/configuration/xml": {
      "put": {
        "tags": [
          "Network scans"
        ],
        "summary": "Upload scans configuration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateScanConfigurationViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated scans",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Download scan configurations",
        "parameters": [
          {
            "in": "query",
            "name": "ScanGroupIds",
            "description": "A list of the scan group's unique identifiers to change the state for all its scans",
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ScanIds",
            "description": "A list of unique identifiers for Scans where the state is changed",
            "required": true,
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "StartPage",
            "description": "A start page",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "PageSize",
            "description": "A page size",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.NextRunDays",
            "description": "A next run days",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.Protocol",
            "description": "A protocol type"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.ScheduleId",
            "description": "A unique identifier for a schedule",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.ScanTemplateId",
            "description": "A unique identifier for a scan template",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.AllScanRunStates",
            "description": "A flag that indicates whether results can contain vulnerability scans with all run states. The default value is 'true'",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.ScanRunStates",
            "description": "An array with scan run states that are taken into account during filtering",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ScanRunStateType"
            }
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.NewFindingsOnly",
            "description": "A flag that indicates whether only new findings are returned",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.AutomationAssetsOnly",
            "description": "A flag that indicates whether only automation assets are returned",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.SystemScan",
            "description": "A flag that indicates whether only System Scans are returned. The default value is 'true'",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.WebScan",
            "description": "A flag that indicates whether only Web Scans are returned. The default value is 'true'",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.NameOperator",
            "description": "A logic operator that is used to filter results by scan name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.Name",
            "description": "Filters results by vulnerability scan name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.HostName",
            "description": "Filters results by host name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.HostNameOperator",
            "description": "A logical operator that is used to filter results by a host name. The default value is 'Is'",
            "type": "string"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.Responsible",
            "description": "A unique identifier for a responsible user",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.IPaddressOperator",
            "description": "A logical operator that is used to filter results by a host name. The default value is 'Is'",
            "type": "string"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.IPaddress",
            "description": "Filters results by an IP address",
            "type": "string"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.OperatingSystem",
            "description": "Filters results by operating system",
            "type": "string"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.Scanned",
            "description": "A time-based scan type (before, after, never, any). The default value is 'any'"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.ScannedNumber",
            "description": "A number of units used when checking the time of scan. The default value is 1",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.ScannedWhenUnit",
            "description": "Type of units that are used when checking the type of scan. The default value is 'Hours'"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.ScanGroup",
            "description": "Filters results by a list of scan groups",
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameIdItem[Guid]"
            }
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.TagsOneOf",
            "description": "Tags included in the scan. The value is 'True' if at least one tag is present",
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameValueItem[String]"
            }
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.TagsAllOf",
            "description": "Tags included in the scan. The value is 'True' if all tags are present",
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameValueItem[String]"
            }
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.Severity",
            "description": "A severity level. The default value is 'All'",
            "type": "string"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.ExcludeHigherSeverity",
            "description": "A flag that indicates whether the result should exclude vulnerabilities with high severity",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.SkipNotScannedTargets",
            "description": "A flag that indicates whether targets that are not scanned should be skipped in results",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.HideEmptyScanGroups",
            "description": "A flag that indicates whether empty scan groups should be hidden",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.IsUpcomingScan",
            "description": "A flag that indicates an upcoming scan",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.DefaultFilter",
            "description": "... a default filter",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.SortPrimary",
            "description": "A string that is the primary field for the sorting order (ascending)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.SortPrimaryByDesc",
            "description": "A string that is the primary field for the sorting order (descending)",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.SortSecondary",
            "description": "A string that is the secondary field for the sorting order (ascending)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "VulnerabilityScansFilterModel.SortSecondaryByDesc",
            "description": "A string that is the secondary field for the sorting order (descending)",
            "type": "boolean"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A compressed file with scan configurations"
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/csv": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get vulnerability scans in csv format for the given filter",
        "parameters": [
          {
            "in": "query",
            "name": "NextRunDays",
            "description": "A next run days",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "Protocol",
            "description": "A protocol type"
          },
          {
            "in": "query",
            "name": "ScheduleId",
            "description": "A unique identifier for a schedule",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "ScanTemplateId",
            "description": "A unique identifier for a scan template",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "AllScanRunStates",
            "description": "A flag that indicates whether results can contain vulnerability scans with all run states. The default value is 'true'",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "ScanRunStates",
            "description": "An array with scan run states that are taken into account during filtering",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ScanRunStateType"
            }
          },
          {
            "in": "query",
            "name": "NewFindingsOnly",
            "description": "A flag that indicates whether only new findings are returned",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "AutomationAssetsOnly",
            "description": "A flag that indicates whether only automation assets are returned",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SystemScan",
            "description": "A flag that indicates whether only System Scans are returned. The default value is 'true'",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "WebScan",
            "description": "A flag that indicates whether only Web Scans are returned. The default value is 'true'",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "NameOperator",
            "description": "A logic operator that is used to filter results by scan name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Name",
            "description": "Filters results by vulnerability scan name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "HostName",
            "description": "Filters results by host name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "HostNameOperator",
            "description": "A logical operator that is used to filter results by a host name. The default value is 'Is'",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Responsible",
            "description": "A unique identifier for a responsible user",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "IPaddressOperator",
            "description": "A logical operator that is used to filter results by a host name. The default value is 'Is'",
            "type": "string"
          },
          {
            "in": "query",
            "name": "IPaddress",
            "description": "Filters results by an IP address",
            "type": "string"
          },
          {
            "in": "query",
            "name": "OperatingSystem",
            "description": "Filters results by operating system",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Scanned",
            "description": "A time-based scan type (before, after, never, any). The default value is 'any'"
          },
          {
            "in": "query",
            "name": "ScannedNumber",
            "description": "A number of units used when checking the time of scan. The default value is 1",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "ScannedWhenUnit",
            "description": "Type of units that are used when checking the type of scan. The default value is 'Hours'"
          },
          {
            "in": "query",
            "name": "ScanGroup",
            "description": "Filters results by a list of scan groups",
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameIdItem[Guid]"
            }
          },
          {
            "in": "query",
            "name": "TagsOneOf",
            "description": "Tags included in the scan. The value is 'True' if at least one tag is present",
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameValueItem[String]"
            }
          },
          {
            "in": "query",
            "name": "TagsAllOf",
            "description": "Tags included in the scan. The value is 'True' if all tags are present",
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameValueItem[String]"
            }
          },
          {
            "in": "query",
            "name": "Severity",
            "description": "A severity level. The default value is 'All'",
            "type": "string"
          },
          {
            "in": "query",
            "name": "ExcludeHigherSeverity",
            "description": "A flag that indicates whether the result should exclude vulnerabilities with high severity",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SkipNotScannedTargets",
            "description": "A flag that indicates whether targets that are not scanned should be skipped in results",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "HideEmptyScanGroups",
            "description": "A flag that indicates whether empty scan groups should be hidden",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "IsUpcomingScan",
            "description": "A flag that indicates an upcoming scan",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "DefaultFilter",
            "description": "... a default filter",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SortPrimary",
            "description": "A string that is the primary field for the sorting order (ascending)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SortPrimaryByDesc",
            "description": "A string that is the primary field for the sorting order (descending)",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SortSecondary",
            "description": "A string that is the secondary field for the sorting order (ascending)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SortSecondaryByDesc",
            "description": "A string that is the secondary field for the sorting order (descending)",
            "type": "boolean"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Vulnerability scans in cvs format"
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/delete/batch": {
      "post": {
        "tags": [
          "Network scans"
        ],
        "summary": "Delete scans",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A BatchScanViewModel",
            "schema": {
              "$ref": "#/definitions/BatchScanViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of unique identifiers for deleted scans",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/grouped": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get summary information about vulnerability scans",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Summary information",
            "schema": {
              "$ref": "#/definitions/VulnerabilityScansSummaryViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/grouped/scans/count": {
      "put": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get the number of scans that are grouped by a scan type for a given filter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter parameters.",
            "schema": {
              "$ref": "#/definitions/VulnerabilityScansFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Number of scans",
            "schema": {
              "$ref": "#/definitions/NumberOfScansViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/grouped/scans/operating/system/count": {
      "put": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get a list of scans that are grouped based on operating system for a given filter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter parameters.",
            "schema": {
              "$ref": "#/definitions/VulnerabilityScansFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of scans that are grouped based on operating system",
            "schema": {
              "$ref": "#/definitions/Collection[NameValueItem[Int32]]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/grouped/scans/statuses/count": {
      "put": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get the number of scans that are grouped based on scanning progress for a given filter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter parameters.",
            "schema": {
              "$ref": "#/definitions/VulnerabilityScansFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A number of scans",
            "schema": {
              "$ref": "#/definitions/Collection[ScanningProgressViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/grouped/severity/count": {
      "put": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get the number of vulnerabilities that are grouped based on the severity for a given filter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Filter parameters.",
            "schema": {
              "$ref": "#/definitions/VulnerabilityScansFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A number of vulnerabilities",
            "schema": {
              "$ref": "#/definitions/NumberOfVulnerabiltiesViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/move/batch": {
      "post": {
        "tags": [
          "Network scans"
        ],
        "summary": "Move scans to another scan group",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "schema": {
              "$ref": "#/definitions/BatchMoveScanViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of moved scans",
            "schema": {
              "$ref": "#/definitions/Collection[ScanViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/schedule/update/batch": {
      "put": {
        "tags": [
          "Network scans"
        ],
        "summary": "Update scan schedules",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateScanScheduleViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated scans",
            "schema": {
              "$ref": "#/definitions/Collection[ScanViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/start/batch": {
      "put": {
        "tags": [
          "Network scans"
        ],
        "summary": "Start the vulnerability scans that are single scans or belong to scan groups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A view model containing scan IDs or scan group IDs.",
            "schema": {
              "$ref": "#/definitions/BatchScanViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Returns updated entries to the list",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/stop/batch": {
      "put": {
        "tags": [
          "Network scans"
        ],
        "summary": "Stop vulnerability scans that are single scans or belong to scan groups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A view model that contains scan or scan group unique identifiers.",
            "schema": {
              "$ref": "#/definitions/BatchScanViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Returns updated entries to the list",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/tags/batch": {
      "put": {
        "tags": [
          "Network scans"
        ],
        "summary": "Update scan tags",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchAddTagsToScansViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated scans",
            "schema": {
              "$ref": "#/definitions/Collection[ScanViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilityscans/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get a paged list of vulnerability scans",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/VulnerabilityScansFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[VulnerabilityScansListViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/webscans": {
      "post": {
        "tags": [
          "Network scans"
        ],
        "summary": "Create Web Scan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters for creating a new web scan.",
            "schema": {
              "$ref": "#/definitions/CreateWebScanViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Data for a newly created Web Scan",
            "schema": {
              "$ref": "#/definitions/WebScanViewModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Network scans"
        ],
        "summary": "Update Web Scan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to update the existing Web Scan.",
            "schema": {
              "$ref": "#/definitions/UpdateWebScanViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Updated Web Scan data",
            "schema": {
              "$ref": "#/definitions/WebScanViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{id}": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get Web Scan definition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "A unique identifier for a Web Scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Data on a definition for a Web Scan",
            "schema": {
              "$ref": "#/definitions/WebScanViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{id}/recordings/{recordingsId}": {
      "delete": {
        "tags": [
          "Network scans"
        ],
        "summary": "Delete Web Scan recordings",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "A unique identifier for a Web Scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "recordingsId",
            "description": "A unique identifier for recordings",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/notifications": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get a list of notifications for a Web Scan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of notifications for Web Scan",
            "schema": {
              "$ref": "#/definitions/Collection[MessageNotificationViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/recordings/{recordingId}": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get details of an uploaded recording file",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "recordingId",
            "description": "A recording unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A Web Scan recording",
            "schema": {
              "$ref": "#/definitions/WebScanRecordingViewModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Network scans"
        ],
        "summary": "Update Web Scan recording",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "recordingId",
            "description": "A recording unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters for updating the recording.",
            "schema": {
              "description": "Parameters for updating the recording.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdateWebScanRecordingItemViewModel"
              }
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/recordings/{recordingId}/xml": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get recordings as an XML file",
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "recordingId",
            "description": "A recording unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "The recordings XML file"
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/tags": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get scan tags",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Collection[TagViewModel]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Network scans"
        ],
        "summary": "Add existing or create a new tag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Information about a new tag.",
            "schema": {
              "$ref": "#/definitions/NewTagViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/tags/{technicalName}": {
      "delete": {
        "tags": [
          "Network scans"
        ],
        "summary": "Remove tags",
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "technicalName",
            "description": "Tag technical name to remove",
            "required": true,
            "type": "string"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/webscans/default": {
      "get": {
        "tags": [
          "Network scans"
        ],
        "summary": "Get default Web Scan configuration",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Default Web Scan configuration",
            "schema": {
              "$ref": "#/definitions/WebScanViewModel"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans": {
      "put": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Update the existing discovery scan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters for updating an existing discovery scan.",
            "schema": {
              "$ref": "#/definitions/UpdateDiscoveryScanDefinitionViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Updated discovery scan unique identifier",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Add discovery scans",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters for adding discovery scans.",
            "schema": {
              "$ref": "#/definitions/CreateDiscoveryScanDefinitionViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of unique identifiers for discovery scans that were added",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/{discoveryId}/reports/{reportId}/hosts/grouped": {
      "get": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Get latest discovery scan report group information",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discoveryId",
            "description": "A discovery scan unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HostsGroupViewModel"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/{discoveryId}/reports/{reportId}/hosts/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "discoveryId",
            "description": "A discovery scan unique identifier",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/HostsFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[DiscoveryHostViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/{discoveryId}/reports/latest/hosts/grouped": {
      "get": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Get latest discovery scan report group information",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discoveryId",
            "description": "A discovery scan unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HostsGroupViewModel"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/{discoveryId}/reports/latest/hosts/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "discoveryId",
            "description": "A discovery scan unique identifier",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/HostsFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[DiscoveryHostViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/{discoveryScanId}": {
      "get": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Get discovery scan details",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discoveryScanId",
            "description": "A discovery scan unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Discovery scan details",
            "schema": {
              "$ref": "#/definitions/DiscoveryScanViewModel"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/{discoveryScanId}/log": {
      "get": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Gets the last discovery scan log",
        "parameters": [
          {
            "in": "path",
            "name": "discoveryScanId",
            "description": "A discovery scan unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "newerThan",
            "description": "Optional parameter, show only newer logs than the specified date. (relevant when asking for refreshed logs)",
            "type": "string",
            "format": "date-time"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/discoveryscans/{discoveryScanId}/log/refresh": {
      "get": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Refresh scan log",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discoveryScanId",
            "description": "A discovery scan unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/{discoveryScanId}/notifications": {
      "get": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Get a list of notifications for a discovery scan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discoveryScanId",
            "description": "A discovery scan unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of message notifications",
            "schema": {
              "$ref": "#/definitions/Collection[MessageNotificationViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/{discoveryScansId}/simple": {
      "get": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Get basic information about the discovery scan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discoveryScansId",
            "description": "The unique identifier for a discovery scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Information about the discovery scan including run state",
            "schema": {
              "$ref": "#/definitions/DiscoveryScanSimpleViewModel"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/{scanId}/start": {
      "put": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Start discovery scan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Information about the started discovery scan",
            "schema": {
              "$ref": "#/definitions/DiscoveryScansListViewModel"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/{scanId}/stop": {
      "put": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Stop discovery scan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Information about the discovery scans that were stopped",
            "schema": {
              "$ref": "#/definitions/DiscoveryScansListViewModel"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/any": {
      "get": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Get information about any discovery scans that are defined within the current organization",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "True if there are scans defined",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/default": {
      "get": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Get definition details of the default discovery scan",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Definition details for a default discovery scan",
            "schema": {
              "$ref": "#/definitions/DiscoveryScanViewModel"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/delete/batch": {
      "post": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Delete discovery scans",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A BatchScanViewModel.",
            "schema": {
              "$ref": "#/definitions/BatchNetworkScanViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of unique identifiers for deleted scans",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/grouped": {
      "get": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Get summary information about discovery scans",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Summary information",
            "schema": {
              "$ref": "#/definitions/DiscoveryScansListSummaryViewModel"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/schedule/update/batch": {
      "put": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Update schedule for discovery scans",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters such as scans and the new schedule unique identifier.",
            "schema": {
              "$ref": "#/definitions/BatchUpdateScheduleNetworkScanViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated discovery scans",
            "schema": {
              "$ref": "#/definitions/Collection[DiscoveryScansListViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/simple": {
      "get": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Get simple list of discovery scans",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A simple list of discovery scans",
            "schema": {
              "$ref": "#/definitions/Collection[NameIdItem[Guid]]"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/start/batch": {
      "put": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Start discovery scan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A unique identifier for scans to be started",
            "schema": {
              "$ref": "#/definitions/BatchNetworkScanViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "List of started scans",
            "schema": {
              "$ref": "#/definitions/Collection[DiscoveryScansListViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/stop/batch": {
      "put": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Stop discovery scans",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A unique identifier for scans to be started",
            "schema": {
              "$ref": "#/definitions/BatchNetworkScanViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of stopped scans",
            "schema": {
              "$ref": "#/definitions/Collection[DiscoveryScansListViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/template/update/batch": {
      "put": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Updates the template for multiple scans",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "View the model with the scans and the new template ID.",
            "schema": {
              "$ref": "#/definitions/BatchUpdateTemplateNetworkScanViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Updated rows",
            "schema": {
              "$ref": "#/definitions/Collection[DiscoveryScansListViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/validate/iprangelimit/{limit}": {
      "post": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Validate discovery scan ip range limit",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DiscoveryScanDefinitionScanTargetViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/validate/iprangelimit/hostdiscovery": {
      "post": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Validate port discovery scan ip range limit",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "description": "",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscoveryScanDefinitionScanTargetViewModel"
              }
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/discoveryscans/validate/iprangelimit/portscan": {
      "post": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Validate host discovery scan ip range limit",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "description": "",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscoveryScanDefinitionScanTargetViewModel"
              }
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/discoveryscans/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Discovery scans"
        ],
        "summary": "Get a paged list of discovery scans",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/NetworkFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[DiscoveryScansListViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/assets": {
      "post": {
        "tags": [
          "Assets"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AssetViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/assets/{assetId}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssetDetailsViewModel"
            }
          }
        }
      }
    },
    "/api/integration/assets/{assetId}/details": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Get asset details",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "An asset unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssetViewModel"
            }
          }
        }
      }
    },
    "/api/integration/assets/{assetId}/logs": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Get asset's managed scan logs",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "An asset unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "newerThan",
            "description": "Optional parameter, only shows newer logs than the specified date",
            "type": "string",
            "format": "date-time"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/assets/{assetId}/note": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Update asset note",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "An asset unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Asset note.",
            "schema": {
              "$ref": "#/definitions/AssetNoteViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/assets/{assetId}/tags": {
      "get": {
        "tags": [
          "Assets"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Collection[TagViewModel]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Add an existing tag or create a new one for a asset",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "A asset unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Information about a new tag.",
            "schema": {
              "$ref": "#/definitions/NewTagViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagViewModel"
            }
          }
        }
      }
    },
    "/api/integration/assets/{assetId}/tags/{technicalName}": {
      "delete": {
        "tags": [
          "Assets"
        ],
        "summary": "Remove tags from a assetId",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "A asset unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "technicalName",
            "description": "Tag technical name to remove",
            "required": true,
            "type": "string"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/assets/{ccrId}/detailed/assetid": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Get the asset information",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ccrId",
            "description": "An endpoint agent unique identifier installed on device",
            "required": true,
            "type": "string"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Returns asset unique identifier",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/assets/any": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Get information if any assets are found",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "True if there are any assets found",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/integration/assets/businessowner/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets business owner",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsBusinessOwnerViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/businessownerresponsibilities/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets business owner responsibilities",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsBusinessOwnerResponsibilitiesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/contacts/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets contacts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsContactsViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/contractinvoicing/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets contract and invoicing",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsContractAndInvoicingViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/country/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets country",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsCountryViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/criticality/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets criticality",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsCriticalityViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/customerpersonaldatacategory/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets customer personal data category",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsCustomerPersonalDataCategoryViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/customerpersonaldatastored/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets customer personal data stored",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsCustomerPersonalDataStoredViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/customerpersonaldatavolume/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets customer personal data volume",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsCustomerPersonalDataVolumeViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/delete/batch": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Batch disable and delete assets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchDeleteAssets"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteAssetModelEnum"
            }
          }
        }
      }
    },
    "/api/integration/assets/department/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets department",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsDepartmentViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/employeepersonaldatacategory/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets employee personal data category",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsEmployeePersonalDataCategoryViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/employeepersonaldatastored/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets employee personal data stored",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsEmployeePersonalDataStoredViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/employeepersonaldatavolume/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets employee personal data volume",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsEmployeePersonalDataVolumeViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/intellectualpropertyrights/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets intellectual property rights",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsIntellectualPropertyRightsViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/internetexposure/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets internet exposure",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsInternetExposureViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/manufacturer/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets manufacturer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsManufacturerViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/name/{assetId}": {
      "delete": {
        "tags": [
          "Assets"
        ],
        "summary": "Remove asset name",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "An asset unique identifer",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssetViewModel"
            }
          }
        }
      }
    },
    "/api/integration/assets/networkenvironment/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets network environment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsNetworkEnvironmentViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/note/{assetId}": {
      "delete": {
        "tags": [
          "Assets"
        ],
        "summary": "Remove asset note",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "description": "An asset unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssetViewModel"
            }
          }
        }
      }
    },
    "/api/integration/assets/notes/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets notes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsNotes"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/purposeofapplication/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets purpose of application",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsPurposeOfApplicationViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/serverhostedin/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets server hosted in",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsServerHostedInViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/serviceowner/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets service owner",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsServiceOwnerViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/serviceownerresponsibilities/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets service owner responsibilities",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsServiceOwnerResponsibilitiesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/tags/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets tags",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchAddTagsToAssetsViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/assets/technicaldocumentation/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets technical documentation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsTechnicalDocumentationViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/undefinedresponsibilities/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets undefined responsibilities",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsUndefinedResponsibilitiesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/vendor/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets vendor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsVendorViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/vendorresponsibilities/update/batch": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update assets vendor responsibilities",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Operation parameters",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAssetsVendorResponsibilitiesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated assets",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/assets/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/AssetFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[AssetsListViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{id}/reports/{reportId}": {
      "delete": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Delete System Scan report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Scan unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get System Scan report as a file in specified format",
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "fileType",
            "description": "File type (docx, xml). The default format is xml",
            "type": "string"
          },
          {
            "in": "query",
            "name": "withAuditorNotes",
            "description": "A flag that indicates whether auditor notes are included in a report. The default value is 'true'",
            "type": "boolean",
            "default": true
          },
          {
            "in": "query",
            "name": "onlyCVEandBUGTRAQ",
            "description": "A flag that indicates whether only CVE and BUGTRAQ are included in a report. The default value is 'true'",
            "type": "boolean",
            "default": true
          },
          {
            "in": "query",
            "name": "localization",
            "description": "An optional localization parameter. The default value is 'en_US'"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "System Scan report file in specified format"
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/log": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get a scan log",
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Scan log view model"
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/ports": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get System Scan report ports info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "System Scan report ports information",
            "schema": {
              "$ref": "#/definitions/Collection[ScanPortViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/ports/simple": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get simple list of ports for System Scan report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of ports for System Scan report",
            "schema": {
              "$ref": "#/definitions/Collection[ScanPortSimpleViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/simple": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get System Scan info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "System Scan information",
            "schema": {
              "$ref": "#/definitions/SystemScanReportViewModel"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/statistics/scanhistory": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get counters for the System Scan history",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "ReportType",
            "description": "A report type",
            "required": true
          },
          {
            "in": "query",
            "name": "StartPeriodDate",
            "description": "A start date for a period displayed on a report. If null, the date is set to -100 years",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "EndPeriodDate",
            "description": "An end date for a period displayed on a report. If null, the date is set to +100 years",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "ResultMessages",
            "description": "A list of messages that are connected to view models produced by API methods",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ISimpleMessage"
            }
          },
          {
            "in": "query",
            "name": "Language",
            "description": "A language in which the text is returned",
            "type": "string"
          },
          {
            "in": "query",
            "name": "MessageLevel",
            "description": "A message level"
          },
          {
            "in": "query",
            "name": "HttpStatusCode",
            "description": "A http status code"
          },
          {
            "in": "query",
            "name": "Public",
            "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "System Scan history counters",
            "schema": {
              "$ref": "#/definitions/Collection[ReportScanHistoryViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/statistics/status": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get System Scan vulnerability statistics by status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A System Scan statistics",
            "schema": {
              "$ref": "#/definitions/ReportStatisticsVulnerabilityByStatusViewModel"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/statistics/vulnerability": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get counters for System Scan vulnerabilities and findings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Counters for System Scan vulnerabilities and findings",
            "schema": {
              "$ref": "#/definitions/ReportStatisticsVulnerabilityCountersViewModel"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/tags": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get vulnerability tags",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Vulnerability tags",
            "schema": {
              "$ref": "#/definitions/Collection[TagViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/tickets/simple": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get simple list of tickets for System Scan report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "onlyOpenTickets",
            "description": "A flag that indicates whether to return only open tickets",
            "type": "boolean"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A simple list of tickets for System Scan report",
            "schema": {
              "$ref": "#/definitions/Collection[SimpleTicketViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/vulnerabilitiesandfindings/{vulnerabilityId}/detailed": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get detailed information on vulnerability and findings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Detailed information on vulnerability and findings",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesAndFindingsDetailedViewModel"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/vulnerabilitiesandfindings/{vulnScanDetailID}/status": {
      "put": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Update status of vulnerabilities and findings",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "vulnScanDetailID",
            "description": "A unique identifier for vulnerability details",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to update status.",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesAndFindingsUpdateStatusViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/vulnerabilitiesandfindings/aggregated/{tagTechnicalName}/detailed": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get aggregated vulnerabilities and findings details",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tagTechnicalName",
            "description": "A tag technical name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Aggregated vulnerabilities and findings details",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesAndFindingsAggregatedDetailedViewModel"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/vulnerabilitiesandfindings/aggregated/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesAndFindingsFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[IVulnerabilitiesAndFindingsBaseViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/vulnerabilitiesandfindings/counters": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get counters for System Scan report vulnerabilities and findings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Counters for System Scan vulnerabilities and findings",
            "schema": {
              "$ref": "#/definitions/Collection[ReportFindingsAndChangeViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/vulnerabilitiesandfindings/grouped": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get System Scan vulnerabilities and findings grouped based on severity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "System Scan vulnerabilities and findings grouped based on severity",
            "schema": {
              "$ref": "#/definitions/VulnerabilityDetailsGroupedViewModel"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/vulnerabilitiesandfindings/manual": {
      "post": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Manually add System Scan vulnerability. Manually means by no plug-in",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to add vulnerability manually.",
            "schema": {
              "$ref": "#/definitions/SystemScanVulnerabilitiesAndFindingsManualViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ManualVulnerabilityViewModel"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/vulnerabilitiesandfindings/status": {
      "put": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Update the status of System Scan report vulnerabilities and findings",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to update status.",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesAndFindingsUpdateStatusViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/vulnerabilitiesandfindings/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesAndFindingsFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[VulnerabilitiesAndFindingsViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/{reportId}/vulnerabilityscandetail/{vulnerabilityscandetailid}/vulnerabilitiesandfindings/manual": {
      "put": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Manually update System Scan vulnerability. Manually means by no plug-in",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "vulnerabilityScanDetailId",
            "description": "A unique identifier for vulnerability scan details",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to update vulnerability manually.",
            "schema": {
              "$ref": "#/definitions/SystemScanVulnerabilitiesAndFindingsManualViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ManualVulnerabilityViewModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Manually delete System Scan vulnerability. Manually means by no plug-in",
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "vulnerabilityScanDetailId",
            "description": "A unique identifier for vulnerability scan details",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/history/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/ScanReportHistoryFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[ScanReportHistoryListViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/latest": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get the latest System Scan report as a file in specified format",
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "fileType",
            "description": "File type (docx, xml). The default format is xml",
            "type": "string"
          },
          {
            "in": "query",
            "name": "withAuditorNotes",
            "description": "A flag that indicates whether auditor notes are included in a report. The default value is 'true'",
            "type": "boolean",
            "default": true
          },
          {
            "in": "query",
            "name": "onlyCVEandBUGTRAQ",
            "description": "A flag that indicates whether only CVE and BUGTRAQ are included in a report. The default value is 'true'",
            "type": "boolean",
            "default": true
          },
          {
            "in": "query",
            "name": "localization",
            "description": "An optional localization parameter. The default value is 'en_US'"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "The latest System Scan report file in specified format"
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/latest/log": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get a scan log",
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Scan log view model"
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/latest/ports": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get System Scan report ports info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "System Scan report ports information",
            "schema": {
              "$ref": "#/definitions/Collection[ScanPortViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/latest/ports/simple": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get a list of latest ports for System Scan report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of latest ports for System Scan report",
            "schema": {
              "$ref": "#/definitions/Collection[ScanPortSimpleViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/latest/simple": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get the latest System Scan report information",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "System Scan information",
            "schema": {
              "$ref": "#/definitions/SystemScanReportViewModel"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/latest/statistics/scanhistory": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get counters for the System Scan history",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "ReportType",
            "description": "A report type",
            "required": true
          },
          {
            "in": "query",
            "name": "StartPeriodDate",
            "description": "A start date for a period displayed on a report. If null, the date is set to -100 years",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "EndPeriodDate",
            "description": "An end date for a period displayed on a report. If null, the date is set to +100 years",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "ResultMessages",
            "description": "A list of messages that are connected to view models produced by API methods",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ISimpleMessage"
            }
          },
          {
            "in": "query",
            "name": "Language",
            "description": "A language in which the text is returned",
            "type": "string"
          },
          {
            "in": "query",
            "name": "MessageLevel",
            "description": "A message level"
          },
          {
            "in": "query",
            "name": "HttpStatusCode",
            "description": "A http status code"
          },
          {
            "in": "query",
            "name": "Public",
            "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
            "type": "boolean"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "System Scan history counters",
            "schema": {
              "$ref": "#/definitions/Collection[ReportScanHistoryViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/latest/statistics/status": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get System Scan vulnerability statistics by status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A System Scan statistics",
            "schema": {
              "$ref": "#/definitions/ReportStatisticsVulnerabilityByStatusViewModel"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/latest/statistics/vulnerability": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get counters for System Scan vulnerabilities and findings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Counters for System Scan vulnerabilities and findings",
            "schema": {
              "$ref": "#/definitions/ReportStatisticsVulnerabilityCountersViewModel"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/latest/tags": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get vulnerability tags",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Vulnerability tags",
            "schema": {
              "$ref": "#/definitions/Collection[TagViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/latest/tickets/simple": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get a list of latest tickets for System Scan report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "onlyOpenTickets",
            "description": "A flag that indicates whether to return only open tickets",
            "type": "boolean"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A simple list of latest tickets for System Scan report",
            "schema": {
              "$ref": "#/definitions/Collection[SimpleTicketViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/latest/vulnerabilitiesandfindings/{vulnerabilityId}/detailed": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get detailed information on vulnerability and findings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Detailed information on vulnerability and findings",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesAndFindingsDetailedViewModel"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/latest/vulnerabilitiesandfindings/{vulnScanDetailID}/status": {
      "put": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Update the status of latest vulnerabilities and findings",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "vulnScanDetailID",
            "description": "A unique identifier for vulnerability details",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to update status.",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesAndFindingsUpdateStatusViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/latest/vulnerabilitiesandfindings/aggregated/{tagTechnicalName}/detailed": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get aggregated vulnerabilities and findings details",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tagTechnicalName",
            "description": "A tag technical name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Aggregated vulnerabilities and findings details",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesAndFindingsAggregatedDetailedViewModel"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/latest/vulnerabilitiesandfindings/aggregated/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesAndFindingsFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[IVulnerabilitiesAndFindingsBaseViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/latest/vulnerabilitiesandfindings/counters": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get counters for System Scan latest report vulnerabilities and findings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Counters for System Scan vulnerabilities and findings",
            "schema": {
              "$ref": "#/definitions/Collection[ReportFindingsAndChangeViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/latest/vulnerabilitiesandfindings/grouped": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get the latest System Scan report on vulnerabilities and findings grouped by severity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "The latest System Scan report on vulnerabilities and findings grouped by severity",
            "schema": {
              "$ref": "#/definitions/VulnerabilityDetailsGroupedViewModel"
            }
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/latest/vulnerabilitiesandfindings/status": {
      "put": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Update the status of latest vulnerabilities and findings",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to update status.",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesAndFindingsUpdateStatusViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/systemscans/{scanId}/reports/latest/vulnerabilitiesandfindings/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesAndFindingsFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[VulnerabilitiesAndFindingsViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/{reportId}": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get Web Scan report as a file in specified format",
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "fileType",
            "description": "File type (docx, xml)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "withAuditorNotes",
            "description": "A flag that indicates whether auditor notes are included in a report. The default value is 'true'",
            "type": "boolean",
            "default": true
          },
          {
            "in": "query",
            "name": "withExternalResources",
            "description": "A flag that indicates whether external resources are included in a report. The default value is 'false'",
            "type": "boolean",
            "default": false
          },
          {
            "in": "query",
            "name": "withPrevReportVulns",
            "description": "A flag that indicates whether vulnerabilities from a previous report are included in a report. The default value is 'true'",
            "type": "boolean",
            "default": true
          },
          {
            "in": "query",
            "name": "localization",
            "description": "An optional localization parameter. The default value is 'en_US'"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Web Scan report file in specified format"
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/{reportId}/discovered/pages": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get discovered pages",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A structure for discovered pages",
            "schema": {
              "$ref": "#/definitions/DiscoveredPagesViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/{reportId}/log": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get a scan log",
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Scan log view model"
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/{reportId}/simple": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get Web Scan report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A Web Scan report",
            "schema": {
              "$ref": "#/definitions/WebScanReportViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/{reportId}/statistics/scanhistory": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get Web Scan history data",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "ReportType",
            "description": "A report type",
            "required": true
          },
          {
            "in": "query",
            "name": "StartPeriodDate",
            "description": "A start date for a period displayed on a report. If null, the date is set to -100 years",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "EndPeriodDate",
            "description": "An end date for a period displayed on a report. If null, the date is set to +100 years",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "ResultMessages",
            "description": "A list of messages that are connected to view models produced by API methods",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ISimpleMessage"
            }
          },
          {
            "in": "query",
            "name": "Language",
            "description": "A language in which the text is returned",
            "type": "string"
          },
          {
            "in": "query",
            "name": "MessageLevel",
            "description": "A message level"
          },
          {
            "in": "query",
            "name": "HttpStatusCode",
            "description": "A http status code"
          },
          {
            "in": "query",
            "name": "Public",
            "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Web Scan history counters",
            "schema": {
              "$ref": "#/definitions/Collection[ReportScanHistoryViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/{reportId}/statistics/status": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get counters for Web Scan vulnerabilities by status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Counters for Web Scan vulnerabilities",
            "schema": {
              "$ref": "#/definitions/ReportStatisticsVulnerabilityByStatusViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/{reportId}/statistics/vulnerabilitiesandfindings": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get Web Scans vulnerabilities and findings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Counters for Web Scan vulnerabilities and findings",
            "schema": {
              "$ref": "#/definitions/Collection[ReportFindingsAndChangeViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/{reportId}/tickets/simple": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get tickets for Web Scan reports",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of ticket parameters: unique identifier, name",
            "schema": {
              "$ref": "#/definitions/Collection[SimpleTicketViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/{reportId}/vulnerabilitiesandfindings/{vulnerabilityId}/detailed": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get vulnerability instance details",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Details of vulnerability instance",
            "schema": {
              "$ref": "#/definitions/WebScanVulnerabilitiesAndFindingsDetailedViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/{reportId}/vulnerabilitiesandfindings/{webscanVulnScanDetailId}/status": {
      "put": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Update vulnerability status",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "webScanVulnScanDetailId",
            "description": "A unique identifier for Web Scan vulnerability scan details",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to update vulnerability",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesAndFindingsUpdateStatusViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Update status",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesAndFindingsUpdateStatusViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/{reportId}/vulnerabilitiesandfindings/categories": {
      "put": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get a list of Web Scans with a counter of contained scans",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to filter Web Scan results.",
            "schema": {
              "$ref": "#/definitions/WebScanReportFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of WebScansListViewModel objects",
            "schema": {
              "$ref": "#/definitions/WebScanReportCategoryListViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/{reportId}/vulnerabilitiesandfindings/filter/categories": {
      "put": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get a list of categories for Web Scan report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of categories",
            "schema": {
              "$ref": "#/definitions/Collection[WebScanReportVulnerabilityCategoryViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/{reportId}/vulnerabilitiesandfindings/grouped": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get Web Scan grouped information",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Web Scan grouped information",
            "schema": {
              "$ref": "#/definitions/WebScanReportGroupedViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/{reportId}/vulnerabilitiesandfindings/manual": {
      "post": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Manaully add Web Scan vulnerability. Manually means by no plug-in",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to add vulnerability manually.",
            "schema": {
              "$ref": "#/definitions/WebScanVulnerabilitiesAndFindingsManualViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ManualVulnerabilityViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/{reportId}/vulnerabilitiesandfindings/status": {
      "put": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Update the Web Scan vulnerability and category status",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to update vulnerability",
            "schema": {
              "$ref": "#/definitions/WebScanReportUpdateStatusesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Update status",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesAndFindingsUpdateStatusViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/{reportId}/vulnerabilitiesandfindings/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/WebScanReportFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[WebScanReportVulnerabilityViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/{reportId}/vulnerabilityscandetail/{vulnerabilityscandetailid}/vulnerabilitiesandfindings/manual": {
      "put": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Manually update Web Scan vulnerability. Manually means by no plug-in",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "vulnerabilityScanDetailId",
            "description": "A unique identifier for vulnerability scan details",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to update vulnerability manually.",
            "schema": {
              "$ref": "#/definitions/WebScanVulnerabilitiesAndFindingsManualViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ManualVulnerabilityViewModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Manually delete Web Scan vulnerability. Manually means by no plug-in",
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "vulnerabilityScanDetailId",
            "description": "A unique identifier for vulnerability scan details",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/history/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/ScanReportHistoryFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[ScanReportHistoryListViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/latest": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get Web Scan report as a file in specified format",
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "fileType",
            "description": "File type (docx, xml)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "withAuditorNotes",
            "description": "A flag that indicates whether auditor notes are included in a report. The default value is 'true'",
            "type": "boolean",
            "default": true
          },
          {
            "in": "query",
            "name": "withExternalResources",
            "description": "A flag that indicates whether external resources are included in a report. The default value is 'false'",
            "type": "boolean",
            "default": false
          },
          {
            "in": "query",
            "name": "withPrevReportVulns",
            "description": "A flag that indicates whether vulnerabilities from a previous report are included in a report. The default value is 'true'",
            "type": "boolean",
            "default": true
          },
          {
            "in": "query",
            "name": "localization",
            "description": "An optional localization parameter. The default value is 'en_US'"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "The latest Web Scan report file in specified format"
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/latest/discovered/pages": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get discovered pages",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A structure for discovered pages",
            "schema": {
              "$ref": "#/definitions/DiscoveredPagesViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/latest/log": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get a scan log",
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Scan log view model"
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/latest/simple": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get Web Scan report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A Web Scan report",
            "schema": {
              "$ref": "#/definitions/WebScanReportViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/latest/statistics/scanhistory": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get Web Scan history data",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "ReportType",
            "description": "A report type",
            "required": true
          },
          {
            "in": "query",
            "name": "StartPeriodDate",
            "description": "A start date for a period displayed on a report. If null, the date is set to -100 years",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "EndPeriodDate",
            "description": "An end date for a period displayed on a report. If null, the date is set to +100 years",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "ResultMessages",
            "description": "A list of messages that are connected to view models produced by API methods",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ISimpleMessage"
            }
          },
          {
            "in": "query",
            "name": "Language",
            "description": "A language in which the text is returned",
            "type": "string"
          },
          {
            "in": "query",
            "name": "MessageLevel",
            "description": "A message level"
          },
          {
            "in": "query",
            "name": "HttpStatusCode",
            "description": "A http status code"
          },
          {
            "in": "query",
            "name": "Public",
            "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
            "type": "boolean"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Web Scan history counters",
            "schema": {
              "$ref": "#/definitions/Collection[ReportScanHistoryViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/latest/statistics/status": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get counters for Web Scan vulnerabilities by status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Counters for Web Scan vulnerabilities",
            "schema": {
              "$ref": "#/definitions/ReportStatisticsVulnerabilityByStatusViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/latest/statistics/vulnerabilitiesandfindings": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get Web Scans vulnerabilities and findings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Counters for Web Scan vulnerabilities and findings",
            "schema": {
              "$ref": "#/definitions/Collection[ReportFindingsAndChangeViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/latest/tickets/simple": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get tickets for Web Scan reports",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of ticket parameters: unique identifier, name",
            "schema": {
              "$ref": "#/definitions/Collection[SimpleTicketViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/latest/vulnerabilitiesandfindings/{vulnerabilityId}/detailed": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get vulnerability instance details",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Details of vulnerability instance",
            "schema": {
              "$ref": "#/definitions/WebScanVulnerabilitiesAndFindingsDetailedViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/latest/vulnerabilitiesandfindings/{webscanVulnScanDetailId}/status": {
      "put": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Update vulnerability status",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "webScanVulnScanDetailId",
            "description": "A unique identifier for Web Scan vulnerability scan details",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to update vulnerability",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesAndFindingsUpdateStatusViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Update status",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesAndFindingsUpdateStatusViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/latest/vulnerabilitiesandfindings/categories": {
      "put": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get a list of Web Scans with a counter of contained scans",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to filter Web Scan results.",
            "schema": {
              "$ref": "#/definitions/WebScanReportFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of WebScansListViewModel objects",
            "schema": {
              "$ref": "#/definitions/WebScanReportCategoryListViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/latest/vulnerabilitiesandfindings/filter/categories": {
      "put": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get a list of categories for Web Scan report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of categories",
            "schema": {
              "$ref": "#/definitions/Collection[WebScanReportVulnerabilityCategoryViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/latest/vulnerabilitiesandfindings/grouped": {
      "get": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get Web Scan grouped information",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Web Scan grouped information",
            "schema": {
              "$ref": "#/definitions/WebScanReportGroupedViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/latest/vulnerabilitiesandfindings/status": {
      "put": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Update the Web Scan vulnerability and category status",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to update vulnerability",
            "schema": {
              "$ref": "#/definitions/WebScanReportUpdateStatusesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Update status",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesAndFindingsUpdateStatusViewModel"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/reports/latest/vulnerabilitiesandfindings/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/WebScanReportFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[WebScanReportVulnerabilityViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/webscans/{scanId}/vulnerabilityscandetail/{vulnerabilityscandetailid}/description/{description}/manual/screenshot": {
      "post": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Add image (screenshot) to a manually added Web Scan vulnerability",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "vulnerabilityScanDetailId",
            "description": "A unique identifier for vulnerability scan details",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "description",
            "description": "An image description",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "file",
            "description": "A file.",
            "type": "string",
            "format": "binary"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/webscans/vulnerabilityscandetail/{vulnerabilityscandetailid}/manual/screenshot": {
      "delete": {
        "tags": [
          "Vulnerability scan reports"
        ],
        "summary": "Delete image (screenshot) from a manually added Web Scan vulnerability",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vulnerabilityScanDetailId",
            "description": "A unique identifier for vulnerability scan details",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to remove image.",
            "schema": {
              "$ref": "#/definitions/WebScansImagesDeleteViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/discoveryscans/{discoveryId}/reports/{reportId}": {
      "get": {
        "tags": [
          "Discovery scan reports"
        ],
        "summary": "Get a discovery scan report as a file in a specified format",
        "parameters": [
          {
            "in": "path",
            "name": "discoveryId",
            "description": "A discovery scan unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "fileType",
            "description": "File format (xml or xslx)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "localization",
            "description": "An optional localization parameter. The default value is 'en_US'"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A discovery scan report file in a specified format"
          }
        }
      }
    },
    "/api/integration/discoveryscans/{discoveryId}/reports/{reportId}/ports": {
      "get": {
        "tags": [
          "Discovery scan reports"
        ],
        "summary": "Get list of ports for a discovery scan report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discoveryId",
            "description": "A discovery scan unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "previousReportId",
            "description": "A unique identifier of a previous discovery scan report",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "Parameter to sort by fields",
            "type": "string"
          },
          {
            "in": "query",
            "name": "direction",
            "description": "Sort direction",
            "type": "string",
            "default": "desc"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Information about the discovery scan ports",
            "schema": {
              "$ref": "#/definitions/DiscoveryScanOverviewViewModel"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/{discoveryId}/reports/{reportId}/simple": {
      "get": {
        "tags": [
          "Discovery scan reports"
        ],
        "summary": "Get discovery scan report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discoveryId",
            "description": "A discovery scan unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "discovery scan report",
            "schema": {
              "$ref": "#/definitions/DiscoveryScanReportViewModel"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/{discoveryId}/reports/latest": {
      "get": {
        "tags": [
          "Discovery scan reports"
        ],
        "summary": "Get a discovery scan report as a file in a specified format",
        "parameters": [
          {
            "in": "path",
            "name": "discoveryId",
            "description": "A discovery scan unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "fileType",
            "description": "File format (xml or xslx)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "localization",
            "description": "An optional localization parameter. The default value is 'en_US'"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A discovery scan report file in a specified format"
          }
        }
      }
    },
    "/api/integration/discoveryscans/{discoveryId}/reports/latest/ports": {
      "get": {
        "tags": [
          "Discovery scan reports"
        ],
        "summary": "Get list of ports for a discovery scan report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discoveryId",
            "description": "A discovery scan unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "previousReportId",
            "description": "A unique identifier of a previous discovery scan report",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "Parameter to sort by fields",
            "type": "string"
          },
          {
            "in": "query",
            "name": "direction",
            "description": "Sort direction",
            "type": "string",
            "default": "desc"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Information about the discovery scan ports",
            "schema": {
              "$ref": "#/definitions/DiscoveryScanOverviewViewModel"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/{discoveryId}/reports/latest/simple": {
      "get": {
        "tags": [
          "Discovery scan reports"
        ],
        "summary": "Get discovery scan report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "discoveryId",
            "description": "A discovery scan unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "discovery scan report",
            "schema": {
              "$ref": "#/definitions/DiscoveryScanReportViewModel"
            }
          }
        }
      }
    },
    "/api/integration/discoveryscans/{discoveryScanId}/reports/{reportId}/log": {
      "get": {
        "tags": [
          "Discovery scan reports"
        ],
        "summary": "Get the most recent discovery scan log",
        "parameters": [
          {
            "in": "path",
            "name": "discoveryScanId",
            "description": "A discovery scan unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/discoveryscans/{discoveryScanId}/reports/latest/log": {
      "get": {
        "tags": [
          "Discovery scan reports"
        ],
        "summary": "Get the most recent discovery scan log",
        "parameters": [
          {
            "in": "path",
            "name": "discoveryScanId",
            "description": "A discovery scan unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/reports/summaryreports": {
      "post": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Add summary report",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Summary report data.",
            "schema": {
              "$ref": "#/definitions/SummaryReportCreateViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SummaryReportViewModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Update summary report",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Summary report data.",
            "schema": {
              "$ref": "#/definitions/SummaryReportUpdateViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SummaryReportViewModel"
            }
          }
        }
      }
    },
    "/api/integration/reports/summaryreports/{reportId}": {
      "get": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Get summary report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SummaryReportUpdateViewModel"
            }
          }
        }
      }
    },
    "/api/integration/reports/summaryreports/{reportId}/detailed": {
      "get": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Get the summary report details",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SummaryReportViewModel"
            }
          }
        }
      }
    },
    "/api/integration/reports/summaryreports/{reportId}/template": {
      "get": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Get the summary report template",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SummaryReportUpdateViewModel"
            }
          }
        }
      }
    },
    "/api/integration/reports/summaryreports/any": {
      "get": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Get information if there are any reports defined within the current organization",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/integration/reports/summaryreports/createbasedonexisting": {
      "post": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Add report based on existing report",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A summary report regeneration data",
            "schema": {
              "$ref": "#/definitions/SummaryReportRegenerateViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SummaryReportsListViewModel"
            }
          }
        }
      }
    },
    "/api/integration/reports/summaryreports/default": {
      "get": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Get default summary report filter",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SummaryReportFilter"
            }
          }
        }
      }
    },
    "/api/integration/reports/summaryreports/delete/batch": {
      "post": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Delete summary reports. This method allows removal of one or more summary reports",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Delete summary reports parameters view model.",
            "schema": {
              "description": "Delete summary reports parameters view model.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/SummaryReportsListViewModel"
              }
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/reports/summaryreports/refresh/{reportId}": {
      "post": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Refresh report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SummaryReportsListViewModel"
            }
          }
        }
      }
    },
    "/api/integration/reports/summaryreports/refresh/batch": {
      "post": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Refresh report",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of report unique identifiers.",
            "schema": {
              "description": "List of report unique identifiers.",
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SummaryReportsListViewModel"
              }
            }
          }
        }
      }
    },
    "/api/integration/reports/summaryreports/requests": {
      "put": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Request summary report download",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Download request parameters view model.",
            "schema": {
              "$ref": "#/definitions/SubmitSummaryReportRequestViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SummaryReportRequestViewModel"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Poll specific summary report download request",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "RequestId",
            "description": "Id of summary report request",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "ReportIds",
            "description": "List of a report unique identifiers to be generated",
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SummaryReportRequestViewModel"
            }
          }
        }
      }
    },
    "/api/integration/reports/summaryreports/requests/{requestId}/file": {
      "get": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Download summary report based on the specific download reqeust",
        "parameters": [
          {
            "in": "path",
            "name": "requestId",
            "description": "A request unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A summary report file in specified format"
          },
          "404": {
            "description": "Not found status if the report is not generated yet"
          }
        }
      }
    },
    "/api/integration/reports/summaryreports/scans/count": {
      "get": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Gets a scans count based on provided tags",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "groupIds",
            "description": "Scan groups that scans belongs to",
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tags",
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tagOperator",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "filterAssets",
            "type": "boolean",
            "default": false
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FilteredScansCountViewModel"
            }
          }
        }
      }
    },
    "/api/integration/reports/summaryreports/templates/short": {
      "get": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Get a simplified list of a summary report for the current organization",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Collection[SummaryReportUpdateViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/reports/summaryreports/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Get a paged list of summary reports",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/SummaryReportsFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[SummaryReportsListViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/reports/summaryreporttemplates/delete/batch": {
      "post": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Deletes summary report",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SummaryReportsListViewModel"
              }
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/reports/summaryreporttemplates/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Summary reports"
        ],
        "summary": "Get a paged list of summary report templates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/SummaryReportsFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[SummaryReportTemplatesListViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/any": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get information if any vulnerabilities are found within the current organization",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "True if there are any vulnerabilities found within current organization",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/grouped": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get summary information about discovery scans",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Summary information about discovery scans",
            "schema": {
              "$ref": "#/definitions/VulnerabilityListSummaryViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/grouped/{periodType}/changes/count": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get number of vulnerabilities changes grouped by severity for given filter",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "periodType",
            "description": "A period type",
            "required": true
          },
          {
            "in": "query",
            "name": "scanGroupIds",
            "description": "A list of Scan Group unique identifiers",
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "withAverageSeverity",
            "type": "boolean",
            "default": false
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Number of changes to vulnerabilities, grouped by severity for a given filter",
            "schema": {
              "$ref": "#/definitions/VulnerabiltiesChangesViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/grouped/severity/count": {
      "put": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get the number of vulnerabilities that are grouped based on the severity for a given filter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A filter for the results",
            "schema": {
              "$ref": "#/definitions/VulnerabilityFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Number of vulnerabilities grouped by severity for the given filter",
            "schema": {
              "$ref": "#/definitions/NumberOfVulnerabilityDefinitionsViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/grouped/statuses/count": {
      "put": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get number of vulnerabilities grouped by status for the given filter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A filter for the results",
            "schema": {
              "$ref": "#/definitions/VulnerabilityFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Number of vulnerabilities grouped by status for the given filter",
            "schema": {
              "$ref": "#/definitions/Collection[NameValueItem[Int32]]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/grouped/systemscan/categories/count": {
      "put": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get number of System Scan vulnerabilities grouped by category for the given filter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A filter for the results",
            "schema": {
              "$ref": "#/definitions/VulnerabilityFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Number of System Scan vulnerabilities grouped by category for the given filter",
            "schema": {
              "$ref": "#/definitions/Collection[NumberOfVulnerabilityByCategoryViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/grouped/webscan/categories/count": {
      "put": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get number of Web Scan vulnerabilities grouped by category for the given filter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A filter for the results",
            "schema": {
              "$ref": "#/definitions/VulnerabilityFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A number of Web Scan vulnerabilities grouped by category for the given filter",
            "schema": {
              "$ref": "#/definitions/Collection[NumberOfVulnerabilityByCategoryViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/reference/types": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get dictionary of possible vulnerability reference types",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Dictionary of vulnerability reference types",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/status": {
      "put": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Update status, auditor note, and potential fields of System Scan and Web Scan vulnerability instances",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters for updating the status of scan instances",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesListUpdateStatusesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "List of updated scan instances",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesListUpdatedViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/statuses": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get a list of vulnerability statuses",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "List of vulnerability statuses",
            "schema": {
              "$ref": "#/definitions/Collection[VulnerabilityStatuses]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/systemscan/{id}/detailed": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get details of System Scan vulnerability",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "A vulnerability unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "System Scan vulnerability details",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesListSystemScanDetailsViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/systemscan/{vulnerabilityId}/affectedtargets/csv": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get affected hosts as csv file",
        "parameters": [
          {
            "in": "query",
            "name": "VulnerabilityId",
            "description": "Vulnerability unique identifier",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "ScanGroupIds",
            "description": "IDs of scan groups to search for affected hosts",
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameIdItem[Guid]"
            }
          },
          {
            "in": "query",
            "name": "VulnerabilityStatusIds",
            "description": "Vulnerability status IDs",
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ExcludePotential",
            "description": "Exclude potential vulnerabilities",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "ScanTagsOneOf",
            "description": "Tags included in scan. True if at least one tag is present",
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameValueItem[String]"
            }
          },
          {
            "in": "query",
            "name": "ScanTagsAllOf",
            "description": "Tags included in scan. True if all tags are present",
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameValueItem[String]"
            }
          },
          {
            "in": "query",
            "name": "TargetRelatedBasicFields",
            "description": "Basic target fields to search",
            "type": "array",
            "items": {
              "$ref": "#/definitions/FilterBasicField[TargetRelatedBasicFieldEnum]"
            }
          },
          {
            "in": "query",
            "name": "DefaultFilter",
            "description": "... a default filter",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SortPrimary",
            "description": "A string that is the primary field for the sorting order (ascending)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SortPrimaryByDesc",
            "description": "A string that is the primary field for the sorting order (descending)",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SortSecondary",
            "description": "A string that is the secondary field for the sorting order (ascending)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SortSecondaryByDesc",
            "description": "A string that is the secondary field for the sorting order (descending)",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "An affected host csv file"
          }
        }
      }
    },
    "/api/integration/vulnerabilities/systemscan/{vulnerabilityId}/affectedtargets/grouped/csv": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get grouped System Scan vulnerabilities as csv file",
        "parameters": [
          {
            "in": "query",
            "name": "VulnerabilityId",
            "description": "Vulnerability unique identifier",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "ScanGroupIds",
            "description": "IDs of scan groups to search for affected hosts",
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameIdItem[Guid]"
            }
          },
          {
            "in": "query",
            "name": "VulnerabilityStatusIds",
            "description": "Vulnerability status IDs",
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ExcludePotential",
            "description": "Exclude potential vulnerabilities",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "ScanTagsOneOf",
            "description": "Tags included in scan. True if at least one tag is present",
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameValueItem[String]"
            }
          },
          {
            "in": "query",
            "name": "ScanTagsAllOf",
            "description": "Tags included in scan. True if all tags are present",
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameValueItem[String]"
            }
          },
          {
            "in": "query",
            "name": "TargetRelatedBasicFields",
            "description": "Basic target fields to search",
            "type": "array",
            "items": {
              "$ref": "#/definitions/FilterBasicField[TargetRelatedBasicFieldEnum]"
            }
          },
          {
            "in": "query",
            "name": "DefaultFilter",
            "description": "... a default filter",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SortPrimary",
            "description": "A string that is the primary field for the sorting order (ascending)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SortPrimaryByDesc",
            "description": "A string that is the primary field for the sorting order (descending)",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SortSecondary",
            "description": "A string that is the secondary field for the sorting order (ascending)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SortSecondaryByDesc",
            "description": "A string that is the secondary field for the sorting order (descending)",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A csv file with grouped vulnerabilities"
          }
        }
      }
    },
    "/api/integration/vulnerabilities/systemscan/{vulnerabilityId}/affectedtargets/grouped/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/AffectedHostsFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[VulnerabilityAffectedHostsGroupedViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/systemscan/{vulnerabilityId}/affectedtargets/status": {
      "put": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Update status of vulnerabilities",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update parameters.",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesDetailsListUpdateStatusesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list with updated vulnerabilities",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesListUpdatedViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/systemscan/{vulnerabilityId}/affectedtargets/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/AffectedHostsFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[VulnerabilityAffectedHostsViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/systemscan/families": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get a list of System Scan families",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of System Scan families",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/webscan/{vulnerabilityCategoryIdOrManualId}/{pluginId}/detailed": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get details for Web Scan vulnerability",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vulnerabilityCategoryIdOrManualId",
            "description": "A vulnerability category unique identifier or manual finding unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "pluginId",
            "description": "Web Scan vulnerability plugin identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Details for Web Scan vulnerability",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesListWebScanDetailsViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/webscan/{vulnerabilityCategoryIdOrManualId}/detailed": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get details for Web Scan vulnerability",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vulnerabilityCategoryIdOrManualId",
            "description": "A vulnerability category unique identifier or manual finding unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Details for Web Scan vulnerability",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesListWebScanDetailsViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/webscan/{vulnerabilityId}/{pluginId}/affectedtargets/csv": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get grouped Web Scan vulnerabilities as csv file",
        "parameters": [
          {
            "in": "query",
            "name": "VulnerabilityCategoryId",
            "description": "Vulnerability category unique identifier",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "WsPluginId",
            "description": "ID of Web Scan plug-in which reported the vulnerability instance",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "ScanGroupIds",
            "description": "Scan group unique identifiers to search affected hosts",
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameIdItem[Guid]"
            }
          },
          {
            "in": "query",
            "name": "VulnerabilityCategoryIds",
            "description": "Web Scan categories unique identifiers",
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "VulnerabilityStatusIds",
            "description": "Vulnerability status unique identifiers",
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "TargetRelatedBasicFields",
            "description": "Basic target fields to search",
            "type": "array",
            "items": {
              "$ref": "#/definitions/FilterBasicField[AffectedSiteBasicFieldEnum]"
            }
          },
          {
            "in": "query",
            "name": "DefaultFilter",
            "description": "... a default filter",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SortPrimary",
            "description": "A string that is the primary field for the sorting order (ascending)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SortPrimaryByDesc",
            "description": "A string that is the primary field for the sorting order (descending)",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SortSecondary",
            "description": "A string that is the secondary field for the sorting order (ascending)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SortSecondaryByDesc",
            "description": "A string that is the secondary field for the sorting order (descending)",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pluginId",
            "required": true,
            "type": "string"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A csv file with grouped Web Scan vulnerabilities"
          }
        }
      }
    },
    "/api/integration/vulnerabilities/webscan/{vulnerabilityId}/{pluginId}/affectedtargets/grouped/csv": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "A grouped cvs file of Web Scan vulnerabilities",
        "parameters": [
          {
            "in": "query",
            "name": "VulnerabilityCategoryId",
            "description": "Vulnerability category unique identifier",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "WsPluginId",
            "description": "ID of Web Scan plug-in which reported the vulnerability instance",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "ScanGroupIds",
            "description": "Scan group unique identifiers to search affected hosts",
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameIdItem[Guid]"
            }
          },
          {
            "in": "query",
            "name": "VulnerabilityCategoryIds",
            "description": "Web Scan categories unique identifiers",
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "VulnerabilityStatusIds",
            "description": "Vulnerability status unique identifiers",
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "TargetRelatedBasicFields",
            "description": "Basic target fields to search",
            "type": "array",
            "items": {
              "$ref": "#/definitions/FilterBasicField[AffectedSiteBasicFieldEnum]"
            }
          },
          {
            "in": "query",
            "name": "DefaultFilter",
            "description": "... a default filter",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SortPrimary",
            "description": "A string that is the primary field for the sorting order (ascending)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SortPrimaryByDesc",
            "description": "A string that is the primary field for the sorting order (descending)",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SortSecondary",
            "description": "A string that is the secondary field for the sorting order (ascending)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SortSecondaryByDesc",
            "description": "A string that is the secondary field for the sorting order (descending)",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pluginId",
            "required": true,
            "type": "string"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A csv file with grouped vulnerabilities"
          }
        }
      }
    },
    "/api/integration/vulnerabilities/webscan/{vulnerabilityId}/{pluginId}/affectedtargets/grouped/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pluginId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/AffectedSitesFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[VulnerabilityAffectedSitesGroupedViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/webscan/{vulnerabilityId}/{pluginId}/affectedtargets/status": {
      "put": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Update status of vulnerabilities",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pluginId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update parameters.",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesDetailsListUpdateStatusesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list with updated vulnerability instances",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesListUpdatedViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/webscan/{vulnerabilityId}/{pluginId}/affectedtargets/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "pluginId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/AffectedSitesFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[VulnerabilityAffectedSitesViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/webscan/{vulnerabilityId}/affectedtargets/csv": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get grouped Web Scan vulnerabilities as csv file",
        "parameters": [
          {
            "in": "query",
            "name": "VulnerabilityCategoryId",
            "description": "Vulnerability category unique identifier",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "WsPluginId",
            "description": "ID of Web Scan plug-in which reported the vulnerability instance",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "ScanGroupIds",
            "description": "Scan group unique identifiers to search affected hosts",
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameIdItem[Guid]"
            }
          },
          {
            "in": "query",
            "name": "VulnerabilityCategoryIds",
            "description": "Web Scan categories unique identifiers",
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "VulnerabilityStatusIds",
            "description": "Vulnerability status unique identifiers",
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "TargetRelatedBasicFields",
            "description": "Basic target fields to search",
            "type": "array",
            "items": {
              "$ref": "#/definitions/FilterBasicField[AffectedSiteBasicFieldEnum]"
            }
          },
          {
            "in": "query",
            "name": "DefaultFilter",
            "description": "... a default filter",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SortPrimary",
            "description": "A string that is the primary field for the sorting order (ascending)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SortPrimaryByDesc",
            "description": "A string that is the primary field for the sorting order (descending)",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SortSecondary",
            "description": "A string that is the secondary field for the sorting order (ascending)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SortSecondaryByDesc",
            "description": "A string that is the secondary field for the sorting order (descending)",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A csv file with grouped Web Scan vulnerabilities"
          }
        }
      }
    },
    "/api/integration/vulnerabilities/webscan/{vulnerabilityId}/affectedtargets/grouped/csv": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "A grouped cvs file of Web Scan vulnerabilities",
        "parameters": [
          {
            "in": "query",
            "name": "VulnerabilityCategoryId",
            "description": "Vulnerability category unique identifier",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "WsPluginId",
            "description": "ID of Web Scan plug-in which reported the vulnerability instance",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "ScanGroupIds",
            "description": "Scan group unique identifiers to search affected hosts",
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameIdItem[Guid]"
            }
          },
          {
            "in": "query",
            "name": "VulnerabilityCategoryIds",
            "description": "Web Scan categories unique identifiers",
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "VulnerabilityStatusIds",
            "description": "Vulnerability status unique identifiers",
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "TargetRelatedBasicFields",
            "description": "Basic target fields to search",
            "type": "array",
            "items": {
              "$ref": "#/definitions/FilterBasicField[AffectedSiteBasicFieldEnum]"
            }
          },
          {
            "in": "query",
            "name": "DefaultFilter",
            "description": "... a default filter",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SortPrimary",
            "description": "A string that is the primary field for the sorting order (ascending)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SortPrimaryByDesc",
            "description": "A string that is the primary field for the sorting order (descending)",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "SortSecondary",
            "description": "A string that is the secondary field for the sorting order (ascending)",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SortSecondaryByDesc",
            "description": "A string that is the secondary field for the sorting order (descending)",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A csv file with grouped vulnerabilities"
          }
        }
      }
    },
    "/api/integration/vulnerabilities/webscan/{vulnerabilityId}/affectedtargets/grouped/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/AffectedSitesFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[VulnerabilityAffectedSitesGroupedViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/webscan/{vulnerabilityId}/affectedtargets/status": {
      "put": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Update status of vulnerabilities",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "scanId",
            "description": "A unique identifier for a scan",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "reportId",
            "description": "A unique identifier for a report",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update parameters.",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesDetailsListUpdateStatusesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list with updated vulnerability instances",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesListUpdatedViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/webscan/{vulnerabilityId}/affectedtargets/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "vulnerabilityId",
            "description": "A unique identifier for vulnerabilities",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/AffectedSitesFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[VulnerabilityAffectedSitesViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/webscan/categories": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get a list of Web Scan vulnerability categories",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of Web Scan vulnerability categories",
            "schema": {
              "$ref": "#/definitions/Collection[VulnerabilityCategoryViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/webscan/categories/simple": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get a simple list of Web Scan categories",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A simple list of Web Scan categories",
            "schema": {
              "$ref": "#/definitions/Collection[WebScanVulnerabilityCategory]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilities/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get a paged list of vulnerabilities",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/VulnerabilityFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[VulnerabilitiesListViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilitiescoverage/grouped": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get summary information about vulnerability coverage",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Summary information about vulnerability coverage",
            "schema": {
              "$ref": "#/definitions/VulnerabilityListSummaryViewModel"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilitiescoverage/reference/types": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get a list of already-existing vulnerability reference types for vulnerability references",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "searchPhrase",
            "description": "A string that limits vulnerability types in search",
            "type": "string"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilitiescoverage/simple": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get simple (Id, Name, PluginId) vulnerabilities info by search phrase.\r\nSearch take into account both name and plugin id (integer). During the search, name is taken with wildcard but plugin id is taken strictly",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "searchPhrase",
            "description": "Vulnerability name (or its part) or plugin id (int)",
            "type": "string"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VulnerabilityCoverageSimpleViewModel"
              }
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilitiescoverage/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/VulnerabilityCoverageFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[VulnerabilitiesCoverageListViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/vulnerabilitystatuses": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get vulnerability statuses",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VulnerabilityStatusViewModelShort"
              }
            }
          }
        }
      }
    },
    "/api/integration/schedulingtemplates": {
      "get": {
        "tags": [
          "Scheduling templates"
        ],
        "summary": "Get a list of scheduling templates",
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of scheduling templates"
          }
        }
      },
      "post": {
        "tags": [
          "Scheduling templates"
        ],
        "summary": "Add scheduling template",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to add a scheduling template",
            "schema": {
              "$ref": "#/definitions/SchedulingTemplatesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A unique identifier of an item newly added"
          },
          "400": {
            "description": "When viewModel is not valid"
          }
        }
      },
      "put": {
        "tags": [
          "Scheduling templates"
        ],
        "summary": "Update scheduling template",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to update a scheduling template",
            "schema": {
              "$ref": "#/definitions/SchedulingTemplatesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A unique identifier for a scheduling template"
          },
          "400": {
            "description": "When viewModel is not valid"
          }
        }
      }
    },
    "/api/integration/schedulingtemplates/{id}": {
      "get": {
        "tags": [
          "Scheduling templates"
        ],
        "summary": "Get single scheduling template",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Unique identifier of a scheduling template",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "withListScans",
            "description": "If true, scans list is included in response. By default, the value is false",
            "type": "boolean",
            "default": false
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A single scheduling template"
          }
        }
      },
      "delete": {
        "tags": [
          "Scheduling templates"
        ],
        "summary": "Deletes the scheduling template",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "A unique identifier of a scheduling template",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "When scheduling template has been deleted"
          },
          "404": {
            "description": "When scheduling template was not found"
          }
        }
      }
    },
    "/api/integration/schedulingtemplates/defaults": {
      "get": {
        "tags": [
          "Scheduling templates"
        ],
        "summary": "Get default Scheduling Template model",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Default Scheduling Template model",
            "schema": {
              "$ref": "#/definitions/SchedulingTemplatesViewModel"
            }
          }
        }
      }
    },
    "/api/integration/schedulingtemplates/delete/batch": {
      "post": {
        "tags": [
          "Scheduling templates"
        ],
        "summary": "Allows batch scheduler templates delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A BatchSchedulingTemplatesViewModel.",
            "schema": {
              "$ref": "#/definitions/BatchSchedulingTemplatesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Returns list of unique identifiers of deleted scheduling templates",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/integration/schedulingtemplates/nextrun": {
      "put": {
        "tags": [
          "Scheduling templates"
        ],
        "summary": "Calculate next run",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to calculate next run.",
            "schema": {
              "$ref": "#/definitions/SchedulingTemplatesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/schedulingtemplates/timezones": {
      "get": {
        "tags": [
          "Scheduling templates"
        ],
        "summary": "Get time zones list",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of time zones",
            "schema": {
              "$ref": "#/definitions/Collection[SystemTimeZonesViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/schedulingtemplates/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Scheduling templates"
        ],
        "summary": "Get a paged list of scheduling templates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/BaseFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[SchedulingTemplatesViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/scantemplates/{id}": {
      "get": {
        "tags": [
          "Scan templates"
        ],
        "summary": "Get vulnerability scan template",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "A vulnerability scan template",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ScanTemplatesListDetailsViewModel[SystemScanCustomConfigurationViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/scantemplates/any": {
      "get": {
        "tags": [
          "Scan templates"
        ],
        "summary": "Check if a scan template exists",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "True if any scan template exists. Else return false",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/integration/scantemplates/delete/batch": {
      "post": {
        "tags": [
          "Scan templates"
        ],
        "summary": "Allows batch deletion of scan templates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A BatchScanTemplatesViewModel.",
            "schema": {
              "$ref": "#/definitions/BatchScanTemplatesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Returns a list of unique identifiers for deleted vulnerability scan templates",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/integration/scantemplates/discoveryscan": {
      "post": {
        "tags": [
          "Scan templates"
        ],
        "summary": "Create new discovery scan template",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters for creating a new Discovery scan template.",
            "schema": {
              "$ref": "#/definitions/CreateDiscoveryScanTemplateViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Created discovery scan template unique identifier",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Scan templates"
        ],
        "summary": "Update the existing discovery scan definition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters for updating an existing Discovery scan template.",
            "schema": {
              "$ref": "#/definitions/UpdateDiscoveryScanTemplateViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "An updated discovery scan template unique identifier",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/scantemplates/discoveryscan/{id}": {
      "get": {
        "tags": [
          "Scan templates"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DiscoveryTemplatesListDetailsViewModel"
            }
          }
        }
      }
    },
    "/api/integration/scantemplates/discoveryscan/{scanTemplatesId}/configuration/xml": {
      "get": {
        "tags": [
          "Scan templates"
        ],
        "summary": "Download scan configuration",
        "parameters": [
          {
            "in": "path",
            "name": "scanTemplatesId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A scan configuration xml"
          }
        }
      }
    },
    "/api/integration/scantemplates/discoveryscan/any": {
      "get": {
        "tags": [
          "Scan templates"
        ],
        "summary": "Check if a discovery scan template exists",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A True value when disovery scan exist. Else return false",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/integration/scantemplates/discoveryscan/configuration/xml": {
      "put": {
        "tags": [
          "Scan templates"
        ],
        "summary": "Upload scans configuration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "schema": {
              "$ref": "#/definitions/BatchConfigurationScanTemplatesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of updated scans",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Scan templates"
        ],
        "summary": "Download scan configurations",
        "parameters": [
          {
            "in": "query",
            "name": "ScanTemplatesIds",
            "description": "A list of unique identifiers for scan template IDs to change state",
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A compressed file with scan configurations"
          }
        }
      }
    },
    "/api/integration/scantemplates/discoveryscan/default": {
      "get": {
        "tags": [
          "Scan templates"
        ],
        "summary": "Get the default view model for discovery scan template details",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DiscoveryTemplatesListDetailsViewModel"
            }
          }
        }
      }
    },
    "/api/integration/scantemplates/discoveryscan/delete/batch": {
      "delete": {
        "tags": [
          "Scan templates"
        ],
        "summary": "Allows batch deletion of discovery templates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A batchDiscoveryTemplatesViewModel.",
            "schema": {
              "$ref": "#/definitions/BatchScanTemplatesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/integration/scantemplates/discoveryscan/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Scan templates"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/DiscoveryScanTemplatesFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[DiscoveryScanTemplatesListViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/scantemplates/systemscan/any": {
      "get": {
        "tags": [
          "Scan templates"
        ],
        "summary": "Check if a Web Scan template exists",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "True if any System Scan template exists. Else return false",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/integration/scantemplates/webscan/any": {
      "get": {
        "tags": [
          "Scan templates"
        ],
        "summary": "Checks there's any Web Scan template",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "True if any Web Scan template exists. Else return false",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/integration/scantemplates/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Scan templates"
        ],
        "summary": "Get a paged list of scan templates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/VulnerabilityScanTemplatesFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[ScanTemplatesListViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/scangroups": {
      "post": {
        "tags": [
          "Scan groups"
        ],
        "summary": "Create a new Scan Group",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to create a new Scan Group.",
            "schema": {
              "$ref": "#/definitions/CreateScanGroupViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Scan Group view model",
            "schema": {
              "$ref": "#/definitions/ScanGroupViewModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Scan groups"
        ],
        "summary": "Update existing Scan Group",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to update the existing scan Group.",
            "schema": {
              "$ref": "#/definitions/UpdateScanGroupViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/scangroups/{scanGroupId}": {
      "delete": {
        "tags": [
          "Scan groups"
        ],
        "summary": "Delete scan group",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanGroupId",
            "description": "Scan Group unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Number of deleted scan groups",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Scan groups"
        ],
        "summary": "Get information about a scan group",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanGroupId",
            "description": "Scan Group unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Scan group information",
            "schema": {
              "$ref": "#/definitions/ScanGroupViewModel"
            }
          }
        }
      }
    },
    "/api/integration/scangroups/{scanGroupId}/detailed": {
      "get": {
        "tags": [
          "Scan groups"
        ],
        "summary": "Get detailed information about a scan group",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanGroupId",
            "description": "Scan Group unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Detailed information about scan group",
            "schema": {
              "$ref": "#/definitions/ScanGroupViewModel"
            }
          }
        }
      }
    },
    "/api/integration/scangroups/{scanGroupId}/notifications": {
      "get": {
        "tags": [
          "Scan groups"
        ],
        "summary": "Get notifications defined on the scan groups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanGroupId",
            "description": "Scan Group unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of view model objects of notifications",
            "schema": {
              "$ref": "#/definitions/Collection[MessageNotificationViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/scangroups/{scanGroupId}/systemscans": {
      "get": {
        "tags": [
          "Scan groups"
        ],
        "summary": "Get a list of System Scans assigned to a scan group",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanGroupId",
            "description": "Scan Group unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of view model objects of assigned System Scans",
            "schema": {
              "$ref": "#/definitions/Collection[ScanViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/scangroups/{scanGroupId}/tags": {
      "get": {
        "tags": [
          "Scan groups"
        ],
        "summary": "Get tags assigned directly to a scan group",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanGroupId",
            "description": "Scan Group unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of view model objects of assigned tags",
            "schema": {
              "$ref": "#/definitions/Collection[NameValueItem[String]]"
            }
          }
        }
      }
    },
    "/api/integration/scangroups/{scanGroupId}/webscans": {
      "get": {
        "tags": [
          "Scan groups"
        ],
        "summary": "Get a list of Web Scans assigned to a scan group",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanGroupId",
            "description": "Scan Group unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of view model objects of assigned Web Scans",
            "schema": {
              "$ref": "#/definitions/Collection[ScanViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/scangroups/{scanGroupId}/webscans/default": {
      "get": {
        "tags": [
          "Scan groups"
        ],
        "summary": "Get a default Web Scan configuration for the scan group",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanGroupId",
            "description": "Scan Group unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A default Web Scan configuration for the scan group",
            "schema": {
              "$ref": "#/definitions/WebScanViewModel"
            }
          }
        }
      }
    },
    "/api/integration/scangroups/default": {
      "get": {
        "tags": [
          "Scan groups"
        ],
        "summary": "Get default scan group view model",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Scan group view model",
            "schema": {
              "$ref": "#/definitions/CreateScanGroupViewModel"
            }
          }
        }
      }
    },
    "/api/integration/scangroups/groupswithscancounter": {
      "put": {
        "tags": [
          "Scan groups"
        ],
        "summary": "Return a list of Scan Groups with counter of containing scans",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to filter Scan Results.",
            "schema": {
              "$ref": "#/definitions/VulnerabilityScansFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of GroupCountModel objects",
            "schema": {
              "$ref": "#/definitions/Collection[GroupCountViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/scangroups/scans/simple": {
      "post": {
        "tags": [
          "Scan groups"
        ],
        "summary": "Get scans with host info",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "description": "A type of scan. It could be SystemScan or WebScan"
          },
          {
            "in": "body",
            "name": "body",
            "description": "A list of Scan Groups.",
            "schema": {
              "description": "A list of Scan Groups.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/NameIdItem[Guid]"
              }
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Collection[NameIdItem[Guid]]"
            }
          }
        }
      }
    },
    "/api/integration/scangroups/simple": {
      "get": {
        "tags": [
          "Scan groups"
        ],
        "summary": "Get simple list of Scan Groups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "scanEnabled",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ScanType"
            }
          },
          {
            "in": "query",
            "name": "ticketId",
            "description": "A ticket unique identifier",
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of Scan Groups",
            "schema": {
              "$ref": "#/definitions/Collection[NameIdItem[Guid]]"
            }
          }
        }
      }
    },
    "/api/integration/roles": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Return a list of user roles",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of roles",
            "schema": {
              "$ref": "#/definitions/Collection[RoleViewModel]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create user role",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Role parameters.",
            "schema": {
              "$ref": "#/definitions/CreateRoleViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A created role unique identifier",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user role",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Role parameters.",
            "schema": {
              "$ref": "#/definitions/UpdateRoleViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A updated role unique identifier",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/roles/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get single user role",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "A role unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "An user role",
            "schema": {
              "$ref": "#/definitions/RoleViewModel"
            }
          }
        }
      }
    },
    "/api/integration/roles/{roleId}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user role",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "description": "A role unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A number of deleted entries",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/usergroups": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Return list of user groups",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserGroupsListViewModel"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create new user group",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "View model to create user group from.",
            "schema": {
              "$ref": "#/definitions/CreateUserGroupViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update existing user group",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "View model to update user group from.",
            "schema": {
              "$ref": "#/definitions/UpdateUserGroupViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/usergroups/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get single user group",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "User group unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserGroupViewModel"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user group by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "User group unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/usergroups/clone/{id}": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Clone user group by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "User group unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/usergroups/filtered": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Return list of user groups filtered by criteria",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Users filter.",
            "schema": {
              "$ref": "#/definitions/UserFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserGroupsListViewModel"
              }
            }
          }
        }
      }
    },
    "/api/integration/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get the list of users",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "reportState",
            "description": "A report state",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "includeInactive",
            "description": "If true, the list includes inactive users",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeParent",
            "description": "If true, the list includes users from the parent organization",
            "type": "boolean"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of users with the basic information",
            "schema": {
              "$ref": "#/definitions/Collection[SimpleUserViewModel]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to add a new user.",
            "schema": {
              "$ref": "#/definitions/CreateUserViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A newly created user unique identifier",
            "schema": {
              "$ref": "#/definitions/UserCreatedViewModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update an existing user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to update a user.",
            "schema": {
              "$ref": "#/definitions/UpdateUserViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "An updated user unique identifier",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/users/{Id}/details": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user details",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "A unique user identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "User details",
            "schema": {
              "$ref": "#/definitions/UserDetailsViewModel"
            }
          }
        }
      }
    },
    "/api/integration/users/{id}/unlinkandtrydelete": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Unlinks the user from the current organization, then deletes the user account if the user is not assigned elsewhere",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "A unique user identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/users/{userId}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "A unique user identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "True if user has been deleted",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/integration/users/{userId}/activation": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Activate user account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "A unique user identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "True if user has been activated. Else false",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/integration/users/{userId}/deactivation": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Deactivate user account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "A unique user identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "True if user has been deactivated. Else false",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/integration/users/{userId}/unlink": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Unlinks the user from the current organization",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "A unique user identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/integration/users/byid": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "description": "An user unique identifier",
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "An user data",
            "schema": {
              "$ref": "#/definitions/UserViewModel"
            }
          }
        }
      }
    },
    "/api/integration/users/typeconversion": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Change the account type for users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters for changing the account type for users.",
            "schema": {
              "description": "Parameters for changing the account type for users.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChangeUserAccountTypeViewModel"
              }
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of users whose account type changed",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/integration/users/usergroups/batch": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Add users to user groups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A list of users and groups where users should be added.",
            "schema": {
              "description": "A list of users and groups where users should be added.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AddUsersToGroupViewModel"
              }
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of users in groups",
            "schema": {
              "$ref": "#/definitions/Collection[AddUsersToGroupViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/users/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Get a paged list of users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/UserFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[UserListViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/tickets": {
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Create ticket",
        "description": "Use this method to create a new ticket with basic information.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to create ticket.",
            "schema": {
              "$ref": "#/definitions/CreateTicketViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/tickets/{ticketId}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get basic info about the ticket, such as name, description, estimate, priority",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "description": "A ticket unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TicketViewModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tickets"
        ],
        "summary": "Update ticket",
        "description": "This method allows to change basic ticket information.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "description": "A ticket unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to update ticket.",
            "schema": {
              "$ref": "#/definitions/CreateTicketViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/tickets/{ticketId}/changelog": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get the log items of ticket changes",
        "description": "Every ticket has chain of events that describe activity\r\nperformed and its state. This method returns chronological list of who and when performed\r\nany action. The most recent events are first.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "description": "A ticket unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TicketActivityView"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Add comment to ticket",
        "description": "Any text can be added to the ticket as comment.\r\nEvery comment that is added to the ticket is visible on the change log list.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "description": "A ticket unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Ticket comment.",
            "schema": {
              "$ref": "#/definitions/TicketCommentViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/tickets/{ticketId}/followers": {
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Add a follower to the ticket",
        "description": "Follower for a ticket is identified by user unique identifier (if it already exists in portal) or by email address (if the user does not exist in portal).\r\nTo add a follower to the ticket, add the email address or user unique identifier in the object that is passed within this request.\r\nWith an email address, the follower does not automatically become a Radar user but receives notifications that are related to the ticket.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "description": "A ticket unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TicketFollowerViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get ticket followers. Returns all followers that have been added to a particular ticket",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "description": "A ticket unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TicketFollowersViewModel"
              }
            }
          }
        }
      }
    },
    "/api/integration/tickets/{ticketId}/followers/delete/batch": {
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Delete followers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "description": "A ticket unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "A list of followers unique identifiers.",
            "schema": {
              "description": "A list of followers unique identifiers.",
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/tickets/{ticketId}/openvulnerabilities/count": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get the number of open vulnerabilities that are attached to the ticket",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "description": "A ticket unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/tickets/{ticketId}/status": {
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Change the ticket status, can be used to open or close a ticket",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "description": "A ticket unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to change the status.",
            "schema": {
              "$ref": "#/definitions/ChangeTicketStatusViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TicketViewModel"
            }
          }
        }
      }
    },
    "/api/integration/tickets/{ticketId}/tags": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get ticket tags",
        "description": "Ticket description can include tags. This method returns all tags that have been added to the ticket.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "description": "A ticket unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Collection[TagViewModel]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Add an existing tag or create a new one for a ticket",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "description": "A ticket unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Information about a new tag.",
            "schema": {
              "$ref": "#/definitions/NewTagViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagViewModel"
            }
          }
        }
      }
    },
    "/api/integration/tickets/{ticketId}/tags/{technicalName}": {
      "delete": {
        "tags": [
          "Tickets"
        ],
        "summary": "Remove tags from a ticket",
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "description": "A ticket unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "technicalName",
            "description": "Tag technical name to remove",
            "required": true,
            "type": "string"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/tickets/{ticketId}/vulnerabilities/attach/batch": {
      "put": {
        "tags": [
          "Tickets"
        ],
        "summary": "Attach vulnerabilities to existing ticket",
        "description": "Radar tickets are usually created to solve problems with vulnerabilities on hosts or systems.\r\nUse this method to attach findings to a particular ticket.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "description": "A ticket unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesInstancesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/tickets/{ticketId}/vulnerabilities/detach/batch": {
      "put": {
        "tags": [
          "Tickets"
        ],
        "summary": "Detach vulnerabilities from an existing ticket",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "description": "A ticket unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to detach vulnerabilities from a ticket.",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesInstancesViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/tickets/{ticketId}/vulnerabilities/status/change/batch": {
      "put": {
        "tags": [
          "Tickets"
        ],
        "summary": "Change the status of vulnerabilities in a ticket",
        "description": "Every vulnerability instance has a status no matter if it is attached to a ticket or not.\r\nUse this method to change the status of vulnerability instances that are attached to a particular ticket.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "description": "A ticket unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to change vulnerabilities status in ticket",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesStatusChangeViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/integration/tickets/default": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get default view model to create ticket",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateTicketViewModel"
            }
          }
        }
      }
    },
    "/api/integration/tickets/delete/batch": {
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Delete tickets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A list of tickets unique identifiers.",
            "schema": {
              "description": "A list of tickets unique identifiers.",
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/integration/tickets/grouped": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get total number of tickets and vulnerabilities in organization",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TicketsSummaryViewModel"
            }
          }
        }
      }
    },
    "/api/integration/tickets/simple": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get a simple list (name and unique identifier) of tickets",
        "description": "Use this method when you do not need to get all basic ticket information but only its name and unique identifier.\r\nReturns only tickets that contain vulnerability instances for hosts in those scan groups that the requester can access.\r\nReturns tickets based on the requester (user) privilege flags.\r\nFor example, the Ticketing_Own privilege flag only returns tickets created by the user.",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Collection[NameIdItem[Guid]]"
            }
          }
        }
      }
    },
    "/api/integration/tickets/statuses": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get the list of possible ticket statuses",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TicketStatusViewModel"
              }
            }
          }
        }
      }
    },
    "/api/integration/tickets/systemscan/vulnerabilities/grouped/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get System Scan findings attached to ticket",
        "description": "Returns only vulnerability instances for hosts in those scan groups that the requester (user) can access.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesOnHostFilter"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[TicketGroupedVulnerabilityOnHostViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/tickets/systemscan/vulnerabilities/hosts": {
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get hosts that have vulnerabilities attached to tickets and filtered by Scan Groups",
        "description": "This method checks if the requester (user) has access to scan groups that are passed in parameters..",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A list of Scan Groups.",
            "schema": {
              "description": "A list of Scan Groups.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/NameIdItem[Guid]"
              }
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Collection[NameIdItem[Guid]]"
            }
          }
        }
      }
    },
    "/api/integration/tickets/systemscan/vulnerabilities/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get a list of System Scan findings that are attached to the ticket",
        "description": "Returns only vulnerability instances for hosts in those scan groups that the requester (user) can access.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesOnHostFilter"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[TicketVulnerabilityOnHostViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/tickets/vulnerabilities/groupedby/tickets/count": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get the number of vulnerabilities grouped by the ticket for organization",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValuePair[Guid]"
              }
            }
          }
        }
      }
    },
    "/api/integration/tickets/webscan/vulnerabilities/grouped/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get list of Web Scan findings attached to the ticket",
        "description": "Returns only vulnerability instances for hosts in those scan groups that the requester (user) can access.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesOnSiteFilter"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[TicketGroupedVulnerabilityOnSiteViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/tickets/webscan/vulnerabilities/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get list of Web Scan findings attached to the ticket",
        "description": "Returns only vulnerability instances for hosts in those scan groups that the requester (user) can access.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/VulnerabilitiesOnSiteFilter"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[TicketVulnerabilityOnSiteViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/tickets/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get a paged list of tickets",
        "description": "Every returned ticket contains basic information, for example name, description, estimate, and deadline.\n                            Returns only tickets with vulnerability instances of those hosts in scan groups that the requester (user) can access.\n                            Returns tickets based on the requester (user) privilege flags. For example, the Ticketing_Own privilege flag only returns tickets created by the user.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/TicketsFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[TicketViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/logs/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Audit trail"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/LogsFilterViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[LogViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/account/authenticationcontext": {
      "get": {
        "tags": [
          "My profile"
        ],
        "summary": "Get context for a currently authenticated user (in specific organization)",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Account details",
            "schema": {
              "$ref": "#/definitions/AuthenticationContextViewModel"
            }
          }
        }
      }
    },
    "/api/integration/account/details": {
      "get": {
        "tags": [
          "My profile"
        ],
        "summary": "Get account details",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Account details",
            "schema": {
              "$ref": "#/definitions/AccountDetailsViewModel"
            }
          }
        }
      },
      "put": {
        "tags": [
          "My profile"
        ],
        "summary": "Update user details",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Account parameters",
            "schema": {
              "$ref": "#/definitions/AccountDetailsViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/news/changelog": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get the list of changes in all versions",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of changes",
            "schema": {
              "$ref": "#/definitions/Collection[ChangelogDataViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/news/rss": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get the RSS data about news",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "Get only top X elements",
            "type": "integer",
            "format": "int32"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list with Radar news",
            "schema": {
              "$ref": "#/definitions/Collection[RssDataViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/news/rssurl": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get the RSS feed location",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Url with string where RSS feed is located",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/scannodes": {
      "get": {
        "tags": [
          "Scan nodes"
        ],
        "summary": "Gets the scan nodes",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Scan nodes"
        ],
        "summary": "Creates the scan node",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The scan node settings.",
            "schema": {
              "$ref": "#/definitions/CreateScanNodeSettingsViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Scan nodes"
        ],
        "summary": "Updates the scan node",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Updated scan node details.",
            "schema": {
              "$ref": "#/definitions/UpdateScanNodeSettingsViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/integration/scannodes/{scanNodeId}": {
      "get": {
        "tags": [
          "Scan nodes"
        ],
        "summary": "Gets the scan node",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanNodeId",
            "description": "Scan node unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateScanNodeSettingsViewModel"
            }
          }
        }
      }
    },
    "/api/integration/scannodes/{scanNodeId}/details": {
      "get": {
        "tags": [
          "Scan nodes"
        ],
        "summary": "Gets details of scan node",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanNodeId",
            "description": "Scan node unique identifier",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScanNodeDetailsViewModel"
            }
          }
        }
      }
    },
    "/api/integration/scannodes/{scanNodeId}/newscannodeid/{newScanNodeId}": {
      "delete": {
        "tags": [
          "Scan nodes"
        ],
        "summary": "Deletes the scan node",
        "parameters": [
          {
            "in": "path",
            "name": "scanNodeId",
            "description": "Unique identifier of scan node to be deleted",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "newScanNodeId",
            "description": "Unique identifier of scan node to use instead of removed one",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/scannodes/default": {
      "get": {
        "tags": [
          "Scan nodes"
        ],
        "summary": "Gets the default scan node settings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "scanNodeId",
            "description": "The scan node identifier",
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateScanNodeSettingsViewModel"
            }
          }
        }
      }
    },
    "/api/integration/scannodes/discoveryscan": {
      "get": {
        "tags": [
          "Scan nodes"
        ],
        "summary": "Gets the discovery scan scan nodes",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/api/integration/scannodes/licenseinfo": {
      "get": {
        "tags": [
          "Scan nodes"
        ],
        "summary": "Returns mumber of Scan Node Agent licenses, that are already utilized in this organization's subscription",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScanNodeLicensesViewModel"
            }
          }
        }
      }
    },
    "/api/integration/scannodes/requestlicense": {
      "post": {
        "tags": [
          "Scan nodes"
        ],
        "summary": "Returns link to license for specified scan node",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RequestScanNodeLicenseViewModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScanNodeLicenseOrderResponseViewModel"
            }
          }
        }
      }
    },
    "/api/integration/scannodes/systemscan": {
      "get": {
        "tags": [
          "Scan nodes"
        ],
        "summary": "Gets the System Scan scan nodes",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/api/integration/scannodes/virtual/{scanNodeId}/details": {
      "get": {
        "tags": [
          "Scan nodes"
        ],
        "summary": "Gets a list of scan nodes assigned to a virtual scan node",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scanNodeId",
            "description": "A unique identifier for a virtual scan node",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScanNodeVirtualDetailsViewModel"
              }
            }
          }
        }
      }
    },
    "/api/integration/scannodes/webscan": {
      "get": {
        "tags": [
          "Scan nodes"
        ],
        "summary": "Gets the Web Scan nodes",
        "produces": [
          "application/json"
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/api/integration/scannodes/withstartindex/{startIndex}/andpagesize/{pageSize}": {
      "post": {
        "tags": [
          "Scan nodes"
        ],
        "summary": "Get a paged list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "startIndex",
            "description": "A start index of a page",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "pageSize",
            "description": "A page size",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Filter object to filter data.",
            "schema": {
              "$ref": "#/definitions/BaseFilterModel"
            }
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Paged data",
            "schema": {
              "$ref": "#/definitions/PagedData[ScanNodeViewModel]"
            }
          }
        }
      }
    },
    "/api/integration/authenticationcheck": {
      "get": {
        "tags": [
          "Uncategorized actions"
        ],
        "summary": "Get authentication status",
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/productinfo": {
      "get": {
        "tags": [
          "Uncategorized actions"
        ],
        "summary": "Get information about the product",
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/integration/tags": {
      "get": {
        "tags": [
          "Uncategorized actions"
        ],
        "summary": "Get a list with available tags to search by",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "manualTags",
            "description": "If true, manual tags are included in the list",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "detectedInScans",
            "description": "Show only tags detected in scans. If false, shows all tags",
            "type": "boolean",
            "default": true
          }
        ],
                "security": [ {
            "api_access_key": [],
            "api_secret_key": []
        }],
        "responses": {
          "200": {
            "description": "A list of available search tags",
            "schema": {
              "$ref": "#/definitions/Collection[TagViewModel]"
            }
          }
        }
      }
    }
  },
       "securityDefinitions": {
        "api_access_key": {
            "type": "apiKey",
            "name": "ApiAccessKey",
            "in": "header"
        },
        "api_secret_key": {
            "type": "apiKey",
            "name": "ApiSecretKey",
            "in": "header"
        }
    },
  "definitions": {
    "TagReferenceType": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4
      ],
      "type": "integer"
    },
    "RadarStatusEnum": {
      "format": "int32",
      "description": "Radar messages list.",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        111,
        112,
        113,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        124,
        125,
        126,
        127,
        128,
        129,
        130,
        131,
        132,
        133,
        134,
        135,
        136,
        137,
        138,
        139,
        140,
        141,
        142,
        143,
        144,
        145,
        146,
        147,
        148,
        149,
        150,
        151,
        152,
        153,
        154,
        155,
        156,
        157,
        158,
        159,
        160,
        161,
        162,
        163,
        164,
        165,
        166,
        167,
        168,
        169,
        170,
        171,
        172,
        173,
        174,
        175,
        176,
        177,
        178,
        179,
        180,
        181,
        182,
        183,
        184,
        185,
        186,
        187,
        188,
        189,
        190,
        191,
        192,
        193,
        194,
        195,
        196,
        197,
        198,
        199,
        200,
        201,
        202,
        203,
        204,
        205,
        206,
        207,
        208,
        209,
        210,
        211,
        212,
        213,
        214,
        215,
        216,
        217,
        218,
        219,
        220,
        221,
        222,
        223,
        224,
        225,
        226,
        227,
        228,
        229,
        230,
        231,
        232,
        233,
        234,
        235,
        236,
        237,
        238,
        239,
        240,
        241,
        242,
        243,
        244,
        245,
        246,
        247,
        248,
        249,
        250,
        251,
        252,
        253,
        254,
        255,
        256,
        257,
        258,
        259,
        260,
        261,
        262,
        263,
        264,
        265,
        266,
        267,
        268,
        269,
        270,
        271,
        272,
        273,
        274,
        275,
        276,
        277,
        278,
        279,
        280,
        281,
        282,
        283,
        284,
        285,
        286,
        287,
        288,
        289,
        290,
        291,
        292,
        293,
        294,
        295,
        296,
        297,
        298,
        299,
        300,
        301,
        302,
        303,
        304,
        305,
        306,
        307,
        308,
        309,
        310,
        311,
        312,
        313,
        314,
        315,
        316,
        317,
        318,
        319,
        320,
        321,
        322,
        323,
        324,
        325,
        326,
        327,
        328,
        329,
        330,
        331,
        332,
        333,
        334,
        335,
        336,
        337,
        338,
        339,
        340,
        341,
        342,
        343,
        344,
        345,
        346,
        347,
        348,
        349,
        350,
        351,
        352,
        353,
        354,
        355,
        356,
        357,
        358,
        359,
        360,
        361,
        362,
        363,
        364,
        365,
        366,
        367,
        368,
        369,
        370,
        371,
        372,
        373,
        374,
        375,
        376,
        377,
        378,
        379,
        380,
        381,
        382,
        383,
        384,
        385,
        386,
        387,
        388,
        389,
        390,
        391,
        392,
        393,
        394,
        395,
        396,
        397,
        398,
        399,
        400,
        401,
        402,
        403,
        404,
        405,
        406,
        407,
        408,
        409,
        410,
        411,
        412,
        413,
        414,
        415,
        416,
        417,
        418,
        419,
        420,
        421,
        422,
        423,
        424,
        425,
        426,
        427,
        428,
        429,
        430,
        431,
        432,
        433,
        434,
        435,
        436,
        437,
        438,
        439,
        440,
        441,
        442,
        443,
        444,
        445,
        446,
        447,
        448,
        449,
        450,
        451,
        452,
        453,
        454,
        455,
        456,
        457,
        458,
        459,
        460,
        461,
        462,
        463,
        464,
        465,
        466,
        467,
        468,
        469,
        470,
        471,
        472,
        473,
        474,
        475,
        476,
        477,
        478,
        479,
        480,
        481,
        482,
        483,
        484,
        485,
        486,
        487,
        488,
        489,
        490,
        491,
        492,
        493,
        494,
        495,
        496,
        497,
        498,
        499,
        500,
        501,
        502,
        503,
        504,
        505,
        506,
        507,
        508,
        509,
        510,
        511
      ],
      "type": "integer"
    },
    "MethodAttributes": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        16,
        32,
        64,
        128,
        256,
        512,
        1024,
        2048,
        4096,
        8192,
        16384,
        32768,
        53248
      ],
      "type": "integer"
    },
    "MethodImplAttributes": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        8,
        16,
        32,
        64,
        128,
        256,
        512,
        4096,
        65535
      ],
      "type": "integer"
    },
    "CallingConventions": {
      "format": "int32",
      "enum": [
        1,
        2,
        3,
        32,
        64
      ],
      "type": "integer"
    },
    "IntPtr": {
      "type": "object"
    },
    "RuntimeMethodHandle": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/IntPtr"
        }
      }
    },
    "MemberTypes": {
      "format": "int32",
      "enum": [
        1,
        2,
        4,
        8,
        16,
        32,
        64,
        128,
        191
      ],
      "type": "integer"
    },
    "ModuleHandle": {
      "type": "object",
      "properties": {
        "mdStreamVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "CustomAttributeTypedArgument": {
      "type": "object",
      "properties": {
        "argumentType": {
          "$ref": "#/definitions/Type"
        },
        "value": {
          "type": "object",
          "readOnly": true
        }
      }
    },
    "MemberInfo": {
      "type": "object",
      "properties": {
        "memberType": {
          "$ref": "#/definitions/MemberTypes"
        },
        "declaringType": {
          "$ref": "#/definitions/Type"
        },
        "reflectedType": {
          "$ref": "#/definitions/Type"
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "module": {
          "$ref": "#/definitions/Module"
        },
        "customAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          },
          "readOnly": true
        },
        "isCollectible": {
          "type": "boolean",
          "readOnly": true
        },
        "metadataToken": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "CustomAttributeNamedArgument": {
      "type": "object",
      "properties": {
        "memberInfo": {
          "$ref": "#/definitions/MemberInfo"
        },
        "typedValue": {
          "$ref": "#/definitions/CustomAttributeTypedArgument"
        },
        "memberName": {
          "type": "string",
          "readOnly": true
        },
        "isField": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "CustomAttributeData": {
      "type": "object",
      "properties": {
        "attributeType": {
          "$ref": "#/definitions/Type"
        },
        "constructor": {
          "$ref": "#/definitions/ConstructorInfo"
        },
        "constructorArguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeTypedArgument"
          },
          "readOnly": true
        },
        "namedArguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeNamedArgument"
          },
          "readOnly": true
        }
      }
    },
    "Module": {
      "type": "object",
      "properties": {
        "assembly": {
          "$ref": "#/definitions/Assembly"
        },
        "fullyQualifiedName": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "mdStreamVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "moduleVersionId": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "scopeName": {
          "type": "string",
          "readOnly": true
        },
        "moduleHandle": {
          "$ref": "#/definitions/ModuleHandle"
        },
        "customAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          },
          "readOnly": true
        },
        "metadataToken": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "ConstructorInfo": {
      "type": "object",
      "properties": {
        "memberType": {
          "$ref": "#/definitions/MemberTypes"
        },
        "attributes": {
          "$ref": "#/definitions/MethodAttributes"
        },
        "methodImplementationFlags": {
          "$ref": "#/definitions/MethodImplAttributes"
        },
        "callingConvention": {
          "$ref": "#/definitions/CallingConventions"
        },
        "isAbstract": {
          "type": "boolean",
          "readOnly": true
        },
        "isConstructor": {
          "type": "boolean",
          "readOnly": true
        },
        "isFinal": {
          "type": "boolean",
          "readOnly": true
        },
        "isHideBySig": {
          "type": "boolean",
          "readOnly": true
        },
        "isSpecialName": {
          "type": "boolean",
          "readOnly": true
        },
        "isStatic": {
          "type": "boolean",
          "readOnly": true
        },
        "isVirtual": {
          "type": "boolean",
          "readOnly": true
        },
        "isAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "isFamily": {
          "type": "boolean",
          "readOnly": true
        },
        "isFamilyAndAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "isFamilyOrAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "isPrivate": {
          "type": "boolean",
          "readOnly": true
        },
        "isPublic": {
          "type": "boolean",
          "readOnly": true
        },
        "isConstructedGenericMethod": {
          "type": "boolean",
          "readOnly": true
        },
        "isGenericMethod": {
          "type": "boolean",
          "readOnly": true
        },
        "isGenericMethodDefinition": {
          "type": "boolean",
          "readOnly": true
        },
        "containsGenericParameters": {
          "type": "boolean",
          "readOnly": true
        },
        "methodHandle": {
          "$ref": "#/definitions/RuntimeMethodHandle"
        },
        "isSecurityCritical": {
          "type": "boolean",
          "readOnly": true
        },
        "isSecuritySafeCritical": {
          "type": "boolean",
          "readOnly": true
        },
        "isSecurityTransparent": {
          "type": "boolean",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "declaringType": {
          "$ref": "#/definitions/Type"
        },
        "reflectedType": {
          "$ref": "#/definitions/Type"
        },
        "module": {
          "$ref": "#/definitions/Module"
        },
        "customAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          },
          "readOnly": true
        },
        "isCollectible": {
          "type": "boolean",
          "readOnly": true
        },
        "metadataToken": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "EventAttributes": {
      "format": "int32",
      "enum": [
        0,
        512,
        1024
      ],
      "type": "integer"
    },
    "ParameterAttributes": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        4,
        8,
        16,
        4096,
        8192,
        16384,
        32768,
        61440
      ],
      "type": "integer"
    },
    "ParameterInfo": {
      "type": "object",
      "properties": {
        "attributes": {
          "$ref": "#/definitions/ParameterAttributes"
        },
        "member": {
          "$ref": "#/definitions/MemberInfo"
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "parameterType": {
          "$ref": "#/definitions/Type"
        },
        "position": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "isIn": {
          "type": "boolean",
          "readOnly": true
        },
        "isLcid": {
          "type": "boolean",
          "readOnly": true
        },
        "isOptional": {
          "type": "boolean",
          "readOnly": true
        },
        "isOut": {
          "type": "boolean",
          "readOnly": true
        },
        "isRetval": {
          "type": "boolean",
          "readOnly": true
        },
        "defaultValue": {
          "type": "object",
          "readOnly": true
        },
        "rawDefaultValue": {
          "type": "object",
          "readOnly": true
        },
        "hasDefaultValue": {
          "type": "boolean",
          "readOnly": true
        },
        "customAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          },
          "readOnly": true
        },
        "metadataToken": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "ICustomAttributeProvider": {
      "type": "object"
    },
    "MethodInfo": {
      "type": "object",
      "properties": {
        "memberType": {
          "$ref": "#/definitions/MemberTypes"
        },
        "returnParameter": {
          "$ref": "#/definitions/ParameterInfo"
        },
        "returnType": {
          "$ref": "#/definitions/Type"
        },
        "returnTypeCustomAttributes": {
          "$ref": "#/definitions/ICustomAttributeProvider"
        },
        "attributes": {
          "$ref": "#/definitions/MethodAttributes"
        },
        "methodImplementationFlags": {
          "$ref": "#/definitions/MethodImplAttributes"
        },
        "callingConvention": {
          "$ref": "#/definitions/CallingConventions"
        },
        "isAbstract": {
          "type": "boolean",
          "readOnly": true
        },
        "isConstructor": {
          "type": "boolean",
          "readOnly": true
        },
        "isFinal": {
          "type": "boolean",
          "readOnly": true
        },
        "isHideBySig": {
          "type": "boolean",
          "readOnly": true
        },
        "isSpecialName": {
          "type": "boolean",
          "readOnly": true
        },
        "isStatic": {
          "type": "boolean",
          "readOnly": true
        },
        "isVirtual": {
          "type": "boolean",
          "readOnly": true
        },
        "isAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "isFamily": {
          "type": "boolean",
          "readOnly": true
        },
        "isFamilyAndAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "isFamilyOrAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "isPrivate": {
          "type": "boolean",
          "readOnly": true
        },
        "isPublic": {
          "type": "boolean",
          "readOnly": true
        },
        "isConstructedGenericMethod": {
          "type": "boolean",
          "readOnly": true
        },
        "isGenericMethod": {
          "type": "boolean",
          "readOnly": true
        },
        "isGenericMethodDefinition": {
          "type": "boolean",
          "readOnly": true
        },
        "containsGenericParameters": {
          "type": "boolean",
          "readOnly": true
        },
        "methodHandle": {
          "$ref": "#/definitions/RuntimeMethodHandle"
        },
        "isSecurityCritical": {
          "type": "boolean",
          "readOnly": true
        },
        "isSecuritySafeCritical": {
          "type": "boolean",
          "readOnly": true
        },
        "isSecurityTransparent": {
          "type": "boolean",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "declaringType": {
          "$ref": "#/definitions/Type"
        },
        "reflectedType": {
          "$ref": "#/definitions/Type"
        },
        "module": {
          "$ref": "#/definitions/Module"
        },
        "customAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          },
          "readOnly": true
        },
        "isCollectible": {
          "type": "boolean",
          "readOnly": true
        },
        "metadataToken": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "EventInfo": {
      "type": "object",
      "properties": {
        "memberType": {
          "$ref": "#/definitions/MemberTypes"
        },
        "attributes": {
          "$ref": "#/definitions/EventAttributes"
        },
        "isSpecialName": {
          "type": "boolean",
          "readOnly": true
        },
        "addMethod": {
          "$ref": "#/definitions/MethodInfo"
        },
        "removeMethod": {
          "$ref": "#/definitions/MethodInfo"
        },
        "raiseMethod": {
          "$ref": "#/definitions/MethodInfo"
        },
        "isMulticast": {
          "type": "boolean",
          "readOnly": true
        },
        "eventHandlerType": {
          "$ref": "#/definitions/Type"
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "declaringType": {
          "$ref": "#/definitions/Type"
        },
        "reflectedType": {
          "$ref": "#/definitions/Type"
        },
        "module": {
          "$ref": "#/definitions/Module"
        },
        "customAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          },
          "readOnly": true
        },
        "isCollectible": {
          "type": "boolean",
          "readOnly": true
        },
        "metadataToken": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "FieldAttributes": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        16,
        32,
        64,
        128,
        256,
        512,
        1024,
        4096,
        8192,
        32768,
        38144
      ],
      "type": "integer"
    },
    "RuntimeFieldHandle": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/IntPtr"
        }
      }
    },
    "FieldInfo": {
      "type": "object",
      "properties": {
        "memberType": {
          "$ref": "#/definitions/MemberTypes"
        },
        "attributes": {
          "$ref": "#/definitions/FieldAttributes"
        },
        "fieldType": {
          "$ref": "#/definitions/Type"
        },
        "isInitOnly": {
          "type": "boolean",
          "readOnly": true
        },
        "isLiteral": {
          "type": "boolean",
          "readOnly": true
        },
        "isNotSerialized": {
          "type": "boolean",
          "readOnly": true
        },
        "isPinvokeImpl": {
          "type": "boolean",
          "readOnly": true
        },
        "isSpecialName": {
          "type": "boolean",
          "readOnly": true
        },
        "isStatic": {
          "type": "boolean",
          "readOnly": true
        },
        "isAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "isFamily": {
          "type": "boolean",
          "readOnly": true
        },
        "isFamilyAndAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "isFamilyOrAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "isPrivate": {
          "type": "boolean",
          "readOnly": true
        },
        "isPublic": {
          "type": "boolean",
          "readOnly": true
        },
        "isSecurityCritical": {
          "type": "boolean",
          "readOnly": true
        },
        "isSecuritySafeCritical": {
          "type": "boolean",
          "readOnly": true
        },
        "isSecurityTransparent": {
          "type": "boolean",
          "readOnly": true
        },
        "fieldHandle": {
          "$ref": "#/definitions/RuntimeFieldHandle"
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "declaringType": {
          "$ref": "#/definitions/Type"
        },
        "reflectedType": {
          "$ref": "#/definitions/Type"
        },
        "module": {
          "$ref": "#/definitions/Module"
        },
        "customAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          },
          "readOnly": true
        },
        "isCollectible": {
          "type": "boolean",
          "readOnly": true
        },
        "metadataToken": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "PropertyAttributes": {
      "format": "int32",
      "enum": [
        0,
        512,
        1024,
        4096,
        8192,
        16384,
        32768,
        62464
      ],
      "type": "integer"
    },
    "PropertyInfo": {
      "type": "object",
      "properties": {
        "memberType": {
          "$ref": "#/definitions/MemberTypes"
        },
        "propertyType": {
          "$ref": "#/definitions/Type"
        },
        "attributes": {
          "$ref": "#/definitions/PropertyAttributes"
        },
        "isSpecialName": {
          "type": "boolean",
          "readOnly": true
        },
        "canRead": {
          "type": "boolean",
          "readOnly": true
        },
        "canWrite": {
          "type": "boolean",
          "readOnly": true
        },
        "getMethod": {
          "$ref": "#/definitions/MethodInfo"
        },
        "setMethod": {
          "$ref": "#/definitions/MethodInfo"
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "declaringType": {
          "$ref": "#/definitions/Type"
        },
        "reflectedType": {
          "$ref": "#/definitions/Type"
        },
        "module": {
          "$ref": "#/definitions/Module"
        },
        "customAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          },
          "readOnly": true
        },
        "isCollectible": {
          "type": "boolean",
          "readOnly": true
        },
        "metadataToken": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "GenericParameterAttributes": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        8,
        16,
        28
      ],
      "type": "integer"
    },
    "TypeAttributes": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        16,
        24,
        32,
        128,
        256,
        1024,
        2048,
        4096,
        8192,
        16384,
        65536,
        131072,
        196608,
        262144,
        264192,
        1048576,
        12582912
      ],
      "type": "integer"
    },
    "LayoutKind": {
      "format": "int32",
      "enum": [
        0,
        2,
        3
      ],
      "type": "integer"
    },
    "StructLayoutAttribute": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/LayoutKind"
        },
        "typeId": {
          "type": "object",
          "readOnly": true
        }
      }
    },
    "RuntimeTypeHandle": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/IntPtr"
        }
      }
    },
    "TypeInfo": {
      "type": "object",
      "properties": {
        "genericTypeParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          },
          "readOnly": true
        },
        "declaredConstructors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConstructorInfo"
          },
          "readOnly": true
        },
        "declaredEvents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventInfo"
          },
          "readOnly": true
        },
        "declaredFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldInfo"
          },
          "readOnly": true
        },
        "declaredMembers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MemberInfo"
          },
          "readOnly": true
        },
        "declaredMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MethodInfo"
          },
          "readOnly": true
        },
        "declaredNestedTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypeInfo"
          },
          "readOnly": true
        },
        "declaredProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PropertyInfo"
          },
          "readOnly": true
        },
        "implementedInterfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          },
          "readOnly": true
        },
        "isInterface": {
          "type": "boolean",
          "readOnly": true
        },
        "memberType": {
          "$ref": "#/definitions/MemberTypes"
        },
        "namespace": {
          "type": "string",
          "readOnly": true
        },
        "assemblyQualifiedName": {
          "type": "string",
          "readOnly": true
        },
        "fullName": {
          "type": "string",
          "readOnly": true
        },
        "assembly": {
          "$ref": "#/definitions/Assembly"
        },
        "module": {
          "$ref": "#/definitions/Module"
        },
        "isNested": {
          "type": "boolean",
          "readOnly": true
        },
        "declaringType": {
          "$ref": "#/definitions/Type"
        },
        "declaringMethod": {
          "$ref": "#/definitions/MethodBase"
        },
        "reflectedType": {
          "$ref": "#/definitions/Type"
        },
        "underlyingSystemType": {
          "$ref": "#/definitions/Type"
        },
        "isTypeDefinition": {
          "type": "boolean",
          "readOnly": true
        },
        "isArray": {
          "type": "boolean",
          "readOnly": true
        },
        "isByRef": {
          "type": "boolean",
          "readOnly": true
        },
        "isPointer": {
          "type": "boolean",
          "readOnly": true
        },
        "isConstructedGenericType": {
          "type": "boolean",
          "readOnly": true
        },
        "isGenericParameter": {
          "type": "boolean",
          "readOnly": true
        },
        "isGenericTypeParameter": {
          "type": "boolean",
          "readOnly": true
        },
        "isGenericMethodParameter": {
          "type": "boolean",
          "readOnly": true
        },
        "isGenericType": {
          "type": "boolean",
          "readOnly": true
        },
        "isGenericTypeDefinition": {
          "type": "boolean",
          "readOnly": true
        },
        "isSZArray": {
          "type": "boolean",
          "readOnly": true
        },
        "isVariableBoundArray": {
          "type": "boolean",
          "readOnly": true
        },
        "isByRefLike": {
          "type": "boolean",
          "readOnly": true
        },
        "hasElementType": {
          "type": "boolean",
          "readOnly": true
        },
        "genericTypeArguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          },
          "readOnly": true
        },
        "genericParameterPosition": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "genericParameterAttributes": {
          "$ref": "#/definitions/GenericParameterAttributes"
        },
        "attributes": {
          "$ref": "#/definitions/TypeAttributes"
        },
        "isAbstract": {
          "type": "boolean",
          "readOnly": true
        },
        "isImport": {
          "type": "boolean",
          "readOnly": true
        },
        "isSealed": {
          "type": "boolean",
          "readOnly": true
        },
        "isSpecialName": {
          "type": "boolean",
          "readOnly": true
        },
        "isClass": {
          "type": "boolean",
          "readOnly": true
        },
        "isNestedAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "isNestedFamANDAssem": {
          "type": "boolean",
          "readOnly": true
        },
        "isNestedFamily": {
          "type": "boolean",
          "readOnly": true
        },
        "isNestedFamORAssem": {
          "type": "boolean",
          "readOnly": true
        },
        "isNestedPrivate": {
          "type": "boolean",
          "readOnly": true
        },
        "isNestedPublic": {
          "type": "boolean",
          "readOnly": true
        },
        "isNotPublic": {
          "type": "boolean",
          "readOnly": true
        },
        "isPublic": {
          "type": "boolean",
          "readOnly": true
        },
        "isAutoLayout": {
          "type": "boolean",
          "readOnly": true
        },
        "isExplicitLayout": {
          "type": "boolean",
          "readOnly": true
        },
        "isLayoutSequential": {
          "type": "boolean",
          "readOnly": true
        },
        "isAnsiClass": {
          "type": "boolean",
          "readOnly": true
        },
        "isAutoClass": {
          "type": "boolean",
          "readOnly": true
        },
        "isUnicodeClass": {
          "type": "boolean",
          "readOnly": true
        },
        "isCOMObject": {
          "type": "boolean",
          "readOnly": true
        },
        "isContextful": {
          "type": "boolean",
          "readOnly": true
        },
        "isEnum": {
          "type": "boolean",
          "readOnly": true
        },
        "isMarshalByRef": {
          "type": "boolean",
          "readOnly": true
        },
        "isPrimitive": {
          "type": "boolean",
          "readOnly": true
        },
        "isValueType": {
          "type": "boolean",
          "readOnly": true
        },
        "isSignatureType": {
          "type": "boolean",
          "readOnly": true
        },
        "isSecurityCritical": {
          "type": "boolean",
          "readOnly": true
        },
        "isSecuritySafeCritical": {
          "type": "boolean",
          "readOnly": true
        },
        "isSecurityTransparent": {
          "type": "boolean",
          "readOnly": true
        },
        "structLayoutAttribute": {
          "$ref": "#/definitions/StructLayoutAttribute"
        },
        "typeInitializer": {
          "$ref": "#/definitions/ConstructorInfo"
        },
        "typeHandle": {
          "$ref": "#/definitions/RuntimeTypeHandle"
        },
        "guid": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "baseType": {
          "$ref": "#/definitions/Type"
        },
        "isSerializable": {
          "type": "boolean",
          "readOnly": true
        },
        "containsGenericParameters": {
          "type": "boolean",
          "readOnly": true
        },
        "isVisible": {
          "type": "boolean",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "customAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          },
          "readOnly": true
        },
        "isCollectible": {
          "type": "boolean",
          "readOnly": true
        },
        "metadataToken": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "SecurityRuleSet": {
      "format": "int32",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "Assembly": {
      "type": "object",
      "properties": {
        "definedTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypeInfo"
          },
          "readOnly": true
        },
        "exportedTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          },
          "readOnly": true
        },
        "codeBase": {
          "type": "string",
          "readOnly": true
        },
        "entryPoint": {
          "$ref": "#/definitions/MethodInfo"
        },
        "fullName": {
          "type": "string",
          "readOnly": true
        },
        "imageRuntimeVersion": {
          "type": "string",
          "readOnly": true
        },
        "isDynamic": {
          "type": "boolean",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "readOnly": true
        },
        "reflectionOnly": {
          "type": "boolean",
          "readOnly": true
        },
        "isCollectible": {
          "type": "boolean",
          "readOnly": true
        },
        "isFullyTrusted": {
          "type": "boolean",
          "readOnly": true
        },
        "customAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          },
          "readOnly": true
        },
        "escapedCodeBase": {
          "type": "string",
          "readOnly": true
        },
        "manifestModule": {
          "$ref": "#/definitions/Module"
        },
        "modules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Module"
          },
          "readOnly": true
        },
        "globalAssemblyCache": {
          "type": "boolean",
          "readOnly": true
        },
        "hostContext": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "securityRuleSet": {
          "$ref": "#/definitions/SecurityRuleSet"
        }
      }
    },
    "Type": {
      "type": "object",
      "properties": {
        "isInterface": {
          "type": "boolean",
          "readOnly": true
        },
        "memberType": {
          "$ref": "#/definitions/MemberTypes"
        },
        "namespace": {
          "type": "string",
          "readOnly": true
        },
        "assemblyQualifiedName": {
          "type": "string",
          "readOnly": true
        },
        "fullName": {
          "type": "string",
          "readOnly": true
        },
        "assembly": {
          "$ref": "#/definitions/Assembly"
        },
        "module": {
          "$ref": "#/definitions/Module"
        },
        "isNested": {
          "type": "boolean",
          "readOnly": true
        },
        "declaringType": {
          "$ref": "#/definitions/Type"
        },
        "declaringMethod": {
          "$ref": "#/definitions/MethodBase"
        },
        "reflectedType": {
          "$ref": "#/definitions/Type"
        },
        "underlyingSystemType": {
          "$ref": "#/definitions/Type"
        },
        "isTypeDefinition": {
          "type": "boolean",
          "readOnly": true
        },
        "isArray": {
          "type": "boolean",
          "readOnly": true
        },
        "isByRef": {
          "type": "boolean",
          "readOnly": true
        },
        "isPointer": {
          "type": "boolean",
          "readOnly": true
        },
        "isConstructedGenericType": {
          "type": "boolean",
          "readOnly": true
        },
        "isGenericParameter": {
          "type": "boolean",
          "readOnly": true
        },
        "isGenericTypeParameter": {
          "type": "boolean",
          "readOnly": true
        },
        "isGenericMethodParameter": {
          "type": "boolean",
          "readOnly": true
        },
        "isGenericType": {
          "type": "boolean",
          "readOnly": true
        },
        "isGenericTypeDefinition": {
          "type": "boolean",
          "readOnly": true
        },
        "isSZArray": {
          "type": "boolean",
          "readOnly": true
        },
        "isVariableBoundArray": {
          "type": "boolean",
          "readOnly": true
        },
        "isByRefLike": {
          "type": "boolean",
          "readOnly": true
        },
        "hasElementType": {
          "type": "boolean",
          "readOnly": true
        },
        "genericTypeArguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          },
          "readOnly": true
        },
        "genericParameterPosition": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "genericParameterAttributes": {
          "$ref": "#/definitions/GenericParameterAttributes"
        },
        "attributes": {
          "$ref": "#/definitions/TypeAttributes"
        },
        "isAbstract": {
          "type": "boolean",
          "readOnly": true
        },
        "isImport": {
          "type": "boolean",
          "readOnly": true
        },
        "isSealed": {
          "type": "boolean",
          "readOnly": true
        },
        "isSpecialName": {
          "type": "boolean",
          "readOnly": true
        },
        "isClass": {
          "type": "boolean",
          "readOnly": true
        },
        "isNestedAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "isNestedFamANDAssem": {
          "type": "boolean",
          "readOnly": true
        },
        "isNestedFamily": {
          "type": "boolean",
          "readOnly": true
        },
        "isNestedFamORAssem": {
          "type": "boolean",
          "readOnly": true
        },
        "isNestedPrivate": {
          "type": "boolean",
          "readOnly": true
        },
        "isNestedPublic": {
          "type": "boolean",
          "readOnly": true
        },
        "isNotPublic": {
          "type": "boolean",
          "readOnly": true
        },
        "isPublic": {
          "type": "boolean",
          "readOnly": true
        },
        "isAutoLayout": {
          "type": "boolean",
          "readOnly": true
        },
        "isExplicitLayout": {
          "type": "boolean",
          "readOnly": true
        },
        "isLayoutSequential": {
          "type": "boolean",
          "readOnly": true
        },
        "isAnsiClass": {
          "type": "boolean",
          "readOnly": true
        },
        "isAutoClass": {
          "type": "boolean",
          "readOnly": true
        },
        "isUnicodeClass": {
          "type": "boolean",
          "readOnly": true
        },
        "isCOMObject": {
          "type": "boolean",
          "readOnly": true
        },
        "isContextful": {
          "type": "boolean",
          "readOnly": true
        },
        "isEnum": {
          "type": "boolean",
          "readOnly": true
        },
        "isMarshalByRef": {
          "type": "boolean",
          "readOnly": true
        },
        "isPrimitive": {
          "type": "boolean",
          "readOnly": true
        },
        "isValueType": {
          "type": "boolean",
          "readOnly": true
        },
        "isSignatureType": {
          "type": "boolean",
          "readOnly": true
        },
        "isSecurityCritical": {
          "type": "boolean",
          "readOnly": true
        },
        "isSecuritySafeCritical": {
          "type": "boolean",
          "readOnly": true
        },
        "isSecurityTransparent": {
          "type": "boolean",
          "readOnly": true
        },
        "structLayoutAttribute": {
          "$ref": "#/definitions/StructLayoutAttribute"
        },
        "typeInitializer": {
          "$ref": "#/definitions/ConstructorInfo"
        },
        "typeHandle": {
          "$ref": "#/definitions/RuntimeTypeHandle"
        },
        "guid": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "baseType": {
          "$ref": "#/definitions/Type"
        },
        "isSerializable": {
          "type": "boolean",
          "readOnly": true
        },
        "containsGenericParameters": {
          "type": "boolean",
          "readOnly": true
        },
        "isVisible": {
          "type": "boolean",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "customAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          },
          "readOnly": true
        },
        "isCollectible": {
          "type": "boolean",
          "readOnly": true
        },
        "metadataToken": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "MethodBase": {
      "type": "object",
      "properties": {
        "attributes": {
          "$ref": "#/definitions/MethodAttributes"
        },
        "methodImplementationFlags": {
          "$ref": "#/definitions/MethodImplAttributes"
        },
        "callingConvention": {
          "$ref": "#/definitions/CallingConventions"
        },
        "isAbstract": {
          "type": "boolean",
          "readOnly": true
        },
        "isConstructor": {
          "type": "boolean",
          "readOnly": true
        },
        "isFinal": {
          "type": "boolean",
          "readOnly": true
        },
        "isHideBySig": {
          "type": "boolean",
          "readOnly": true
        },
        "isSpecialName": {
          "type": "boolean",
          "readOnly": true
        },
        "isStatic": {
          "type": "boolean",
          "readOnly": true
        },
        "isVirtual": {
          "type": "boolean",
          "readOnly": true
        },
        "isAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "isFamily": {
          "type": "boolean",
          "readOnly": true
        },
        "isFamilyAndAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "isFamilyOrAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "isPrivate": {
          "type": "boolean",
          "readOnly": true
        },
        "isPublic": {
          "type": "boolean",
          "readOnly": true
        },
        "isConstructedGenericMethod": {
          "type": "boolean",
          "readOnly": true
        },
        "isGenericMethod": {
          "type": "boolean",
          "readOnly": true
        },
        "isGenericMethodDefinition": {
          "type": "boolean",
          "readOnly": true
        },
        "containsGenericParameters": {
          "type": "boolean",
          "readOnly": true
        },
        "methodHandle": {
          "$ref": "#/definitions/RuntimeMethodHandle"
        },
        "isSecurityCritical": {
          "type": "boolean",
          "readOnly": true
        },
        "isSecuritySafeCritical": {
          "type": "boolean",
          "readOnly": true
        },
        "isSecurityTransparent": {
          "type": "boolean",
          "readOnly": true
        },
        "memberType": {
          "$ref": "#/definitions/MemberTypes"
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "declaringType": {
          "$ref": "#/definitions/Type"
        },
        "reflectedType": {
          "$ref": "#/definitions/Type"
        },
        "module": {
          "$ref": "#/definitions/Module"
        },
        "customAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          },
          "readOnly": true
        },
        "isCollectible": {
          "type": "boolean",
          "readOnly": true
        },
        "metadataToken": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Exception": {
      "type": "object",
      "properties": {
        "targetSite": {
          "$ref": "#/definitions/MethodBase"
        },
        "stackTrace": {
          "type": "string",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "readOnly": true
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true
        },
        "innerException": {
          "$ref": "#/definitions/Exception"
        },
        "helpLink": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "hResult": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ISimpleMessage": {
      "description": "Interface for simple message API.",
      "type": "object",
      "properties": {
        "resultMessage": {
          "description": "Result message",
          "type": "string"
        },
        "resultCode": {
          "$ref": "#/definitions/RadarStatusEnum"
        },
        "resultCodeLocaleKey": {
          "description": "Result code tanslated to dot standard",
          "type": "string",
          "readOnly": true
        },
        "exception": {
          "$ref": "#/definitions/Exception"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parameters": {
          "description": "A dictionary with parameters to format the result message after translation to the target language in the Radar client application.\r\nThis property is optional and is not send to the client when empty",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "MsgLevel": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        4,
        8,
        16
      ],
      "type": "integer"
    },
    "HttpStatusCode": {
      "format": "int32",
      "enum": [
        100,
        101,
        102,
        103,
        200,
        201,
        202,
        203,
        204,
        205,
        206,
        207,
        208,
        226,
        300,
        301,
        302,
        303,
        304,
        305,
        306,
        307,
        308,
        400,
        401,
        402,
        403,
        404,
        405,
        406,
        407,
        408,
        409,
        410,
        411,
        412,
        413,
        414,
        415,
        416,
        417,
        421,
        422,
        423,
        424,
        426,
        428,
        429,
        431,
        451,
        500,
        501,
        502,
        503,
        504,
        505,
        506,
        507,
        508,
        510,
        511
      ],
      "type": "integer"
    },
    "TagViewModel": {
      "description": "Represent tag.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "A tag friendly name",
          "type": "string"
        },
        "technicalName": {
          "description": "A tag technical name",
          "type": "string"
        },
        "isInherited": {
          "description": "A flag that indicates whether a tag is inherited",
          "type": "boolean"
        },
        "isManual": {
          "description": "A flag that indicates that a tag has been manually created",
          "type": "boolean"
        },
        "referenceType": {
          "$ref": "#/definitions/TagReferenceType"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "NameIdItem[Guid]": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "AssetDetailsViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "An asset unique identifier",
          "type": "string"
        },
        "friendlyName": {
          "description": "Friendly name of the asset",
          "type": "string"
        },
        "lastUpdatedOn": {
          "format": "date-time",
          "description": "Last updated date",
          "type": "string"
        },
        "lastSeenOn": {
          "format": "date-time",
          "description": "Last seen date",
          "type": "string"
        },
        "lastScannedOn": {
          "format": "date-time",
          "description": "Last scanned date",
          "type": "string"
        },
        "firstDiscoveredOn": {
          "format": "date-time",
          "description": "First discovered date",
          "type": "string"
        },
        "internetExposure": {
          "description": "Defines asset host's internet exposure",
          "type": "boolean"
        },
        "archived": {
          "description": "Flag that indicates if asset is archived",
          "type": "boolean"
        },
        "tags": {
          "description": "A list that represents tags pinned to the asset",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagViewModel"
          }
        },
        "note": {
          "description": "An asset note",
          "type": "string"
        },
        "scanGroups": {
          "description": "A list of scan groups related to asset by scan",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        },
        "primaryScanGroupId": {
          "format": "uuid",
          "description": "A scan group of scan from where vulnerabilities are taken",
          "type": "string"
        }
      }
    },
    "NewTagViewModel": {
      "description": "View model to add existing tag on an entity.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "User readable tag name. Leave empty when adding an existing tag",
          "type": "string"
        },
        "technicalName": {
          "description": "Internal tag technical name. Leave empty when creating a new manual tag",
          "type": "string"
        }
      }
    },
    "AssetName": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "isAlias": {
          "type": "boolean"
        }
      }
    },
    "AssetViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/AssetName"
        },
        "note": {
          "type": "string"
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "AssetNoteViewModel": {
      "type": "object",
      "properties": {
        "note": {
          "type": "string"
        }
      }
    },
    "UpdateOperationsEnum": {
      "format": "int32",
      "description": "An enum for update operations.",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "BatchAddTagsToAssetsViewModel": {
      "required": [
        "assetIds",
        "tags"
      ],
      "type": "object",
      "properties": {
        "assetIds": {
          "description": "A list of unique identifiers for Assets",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "tags": {
          "description": "A string that contains tags to add or remove",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operation": {
          "$ref": "#/definitions/UpdateOperationsEnum"
        }
      }
    },
    "BatchDeleteAssets": {
      "type": "object",
      "properties": {
        "assetIds": {
          "description": "A list of asset unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "DeleteAssetModelEnum": {
      "format": "int32",
      "description": "How assets will be deleted.",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "BatchUpdateAssetsNotes": {
      "type": "object",
      "properties": {
        "assetIds": {
          "description": "A list of asset unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "note": {
          "description": "A note to update",
          "type": "string"
        }
      }
    },
    "BatchUpdateAssetsBusinessOwnerViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset business owner name",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsInternetExposureViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "A value indicating whether asset host is exposed to internet",
          "type": "boolean"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsUndefinedResponsibilitiesViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset undefined responsibilities",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsPurposeOfApplicationViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset purpose of application",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsContactsViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset contacts",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsServiceOwnerViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset service owner",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsVendorViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset vendor",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsContractAndInvoicingViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset contract and invoicing",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsTechnicalDocumentationViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset technical documentation",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsServiceOwnerResponsibilitiesViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset service owner responsibilities",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsBusinessOwnerResponsibilitiesViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset business owner responsibilities",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsVendorResponsibilitiesViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset vendor responsibilities",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsServerHostedInViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset server hosted in",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsCountryViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset country",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsNetworkEnvironmentViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset network environment",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsManufacturerViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset manufacturer",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsDepartmentViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset department",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsEmployeePersonalDataStoredViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset employee personal data stored",
          "type": "boolean"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsEmployeePersonalDataCategoryViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset employee personal data category",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsEmployeePersonalDataVolumeViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset employee personal data valume",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsCustomerPersonalDataStoredViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset customer personal data stored",
          "type": "boolean"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsCustomerPersonalDataCategoryViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset customer personal data category",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsCustomerPersonalDataVolumeViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset customer personal data valume",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsIntellectualPropertyRightsViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "An asset intellectual property rights",
          "type": "string"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchUpdateAssetsCriticalityViewModel": {
      "required": [
        "assetHostIds"
      ],
      "type": "object",
      "properties": {
        "confidentiality": {
          "format": "int32",
          "description": "An asset confidentiality",
          "type": "integer"
        },
        "integrity": {
          "format": "int32",
          "description": "An asset integrity",
          "type": "integer"
        },
        "availability": {
          "format": "int32",
          "description": "An asset availability",
          "type": "integer"
        },
        "assetHostIds": {
          "description": "A list of unique identifiers for Assets host where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "eventDateOn": {
          "format": "date-time",
          "type": "string"
        },
        "eventSourceVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NameValueItem[String]": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "FSecure.Radar.SecurityCentre.Model.Enums.Assets.AssetSourceTypes": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "ScannedWhenModeEnum": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4
      ],
      "type": "integer"
    },
    "ScannedWhenUnitEnum": {
      "format": "int32",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "AssetBasicFieldEnum": {
      "format": "int32",
      "description": "Type of basic asset fields on which filter can be set.",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47
      ],
      "type": "integer"
    },
    "Operator": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4
      ],
      "type": "integer"
    },
    "FilterBasicFieldWithScanned[AssetBasicFieldEnum]": {
      "type": "object",
      "properties": {
        "scanned": {
          "$ref": "#/definitions/ScannedWhenModeEnum"
        },
        "scannedNumber": {
          "format": "int32",
          "description": "A number of units used when checking the time of scan. The default value is 1",
          "type": "integer"
        },
        "scannedWhenUnit": {
          "$ref": "#/definitions/ScannedWhenUnitEnum"
        },
        "name": {
          "$ref": "#/definitions/AssetBasicFieldEnum"
        },
        "operator": {
          "$ref": "#/definitions/Operator"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "AssetFilterViewModel": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "internetExposure": {
          "type": "boolean"
        },
        "tagsOneOf": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValueItem[String]"
          }
        },
        "tagsAllOf": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValueItem[String]"
          }
        },
        "onlyWithoutAnyAssetTag": {
          "type": "boolean"
        },
        "onlyWithAssetTags": {
          "type": "boolean"
        },
        "isExploitable": {
          "type": "boolean"
        },
        "severity": {
          "type": "string"
        },
        "excludeHigherSeverity": {
          "type": "boolean"
        },
        "confidentiality": {
          "format": "int32",
          "type": "integer"
        },
        "integrity": {
          "format": "int32",
          "type": "integer"
        },
        "availability": {
          "format": "int32",
          "type": "integer"
        },
        "scanGroups": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "lastExecutedSourceType": {
          "$ref": "#/definitions/FSecure.Radar.SecurityCentre.Model.Enums.Assets.AssetSourceTypes"
        },
        "archived": {
          "type": "boolean"
        },
        "assetBasicFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterBasicFieldWithScanned[AssetBasicFieldEnum]"
          }
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "ScanChange": {
      "description": "Produceds easy to reach change indicator for changes in the vulnerability conuters.\r\nIt has also a mode where the change indicator is listed in a pure ASCI.",
      "type": "object",
      "properties": {
        "info": {
          "format": "int32",
          "type": "integer"
        },
        "low": {
          "format": "int32",
          "type": "integer"
        },
        "medium": {
          "format": "int32",
          "type": "integer"
        },
        "high": {
          "format": "int32",
          "type": "integer"
        },
        "critical": {
          "format": "int32",
          "type": "integer"
        },
        "infoFlag": {
          "type": "boolean"
        },
        "lowFlag": {
          "type": "boolean"
        },
        "mediumFlag": {
          "type": "boolean"
        },
        "highFlag": {
          "type": "boolean"
        },
        "criticalFlag": {
          "type": "boolean"
        },
        "criticalChangeText": {
          "type": "string",
          "readOnly": true
        },
        "highChangeText": {
          "type": "string",
          "readOnly": true
        },
        "mediumChangeText": {
          "type": "string",
          "readOnly": true
        },
        "lowChangeText": {
          "type": "string",
          "readOnly": true
        },
        "infoChangeText": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AssetsListViewModel": {
      "description": "A list that represents each row on Assets.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "An asset unique identifier",
          "type": "string"
        },
        "assetHostId": {
          "format": "uuid",
          "description": "An asset host unique identifier",
          "type": "string"
        },
        "friendlyName": {
          "description": "Friendly name of the asset",
          "type": "string"
        },
        "lastUpdatedOn": {
          "format": "date-time",
          "description": "Last updated date",
          "type": "string"
        },
        "lastSeenOn": {
          "format": "date-time",
          "description": "Last seen date",
          "type": "string"
        },
        "lastScannedOn": {
          "format": "date-time",
          "description": "Last scanned date",
          "type": "string"
        },
        "firstDiscoveredOn": {
          "format": "date-time",
          "description": "First discovered date",
          "type": "string"
        },
        "numberOfPublicExploits": {
          "format": "int32",
          "description": "Number of public exploits, null if the information is not available",
          "type": "integer"
        },
        "internetExposure": {
          "description": "Defines asset host's internet exposure",
          "type": "boolean"
        },
        "vulnerabilitiesHigh": {
          "format": "int32",
          "description": "A number of vulnerabilitites with high serverity",
          "type": "integer"
        },
        "vulnerabilitiesMedium": {
          "format": "int32",
          "description": "A number of vulnerabilitites with medium serverity",
          "type": "integer"
        },
        "vulnerabilitiesLow": {
          "format": "int32",
          "description": "A number of vulnerabilitites with low serverity",
          "type": "integer"
        },
        "confidentiality": {
          "format": "int32",
          "description": "Defines confidentiality parameter of asset's criticality",
          "type": "integer"
        },
        "integrity": {
          "format": "int32",
          "description": "Defines integrity parameter of asset's criticality",
          "type": "integer"
        },
        "availability": {
          "format": "int32",
          "description": "Defines availability parameter of asset's criticality",
          "type": "integer"
        },
        "vulnerabilitiesInformational": {
          "format": "int32",
          "description": "A number of vulnerabilitites with informational serverity",
          "type": "integer"
        },
        "change": {
          "$ref": "#/definitions/ScanChange"
        },
        "lastReportId": {
          "format": "uuid",
          "description": "A last report unique identifier",
          "type": "string"
        },
        "scanId": {
          "format": "uuid",
          "description": "A scan unique identfier",
          "type": "string"
        },
        "archived": {
          "description": "A flag that indicates if asset is archived",
          "type": "boolean"
        },
        "ccrId": {
          "description": "An endpoint agent unique identifier installed on device",
          "type": "string"
        },
        "displayName": {
          "description": "An optional asset display name",
          "type": "string"
        },
        "hostname": {
          "description": "Asset host name",
          "type": "string"
        },
        "ipAddress": {
          "description": "Asset IP address",
          "type": "string"
        },
        "macAddress": {
          "description": "Asset mac address",
          "type": "string"
        },
        "operatingSystem": {
          "description": "Asset operating system",
          "type": "string"
        }
      }
    },
    "PagedData[AssetsListViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetsListViewModel"
          }
        }
      }
    },
    "Radar.Model.Enums.AssetSourceTypes": {
      "format": "int32",
      "description": "Represents asset monitoring source type possible values.",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "AssetMonitoringFilterViewModel": {
      "description": "View model for filter of asset monitoring",
      "type": "object",
      "properties": {
        "assetSourceType": {
          "$ref": "#/definitions/Radar.Model.Enums.AssetSourceTypes"
        },
        "scheduleId": {
          "format": "uuid",
          "description": "A unique identifier referring to Schedule",
          "type": "string"
        },
        "scanGroupId": {
          "format": "uuid",
          "description": "A unique identifier referring to Scan Group",
          "type": "string"
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "AssetMonitoringListViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "An asset monitoring unique identifier",
          "type": "string"
        },
        "scanGroupId": {
          "format": "uuid",
          "description": "A unique identifier referring to Scan Group",
          "type": "string"
        },
        "isActive": {
          "description": "A flag that indicates whether specific monitoring is active",
          "type": "boolean"
        },
        "trackSystemScans": {
          "description": "A flag that indicates if System Scans should be tracked",
          "type": "boolean"
        },
        "trackWebScans": {
          "description": "A flag that indicates whether Web Scans should be tracked",
          "type": "boolean"
        },
        "alwaysAddNewSystemScans": {
          "description": "A flag that indicates whether new System Scan should be added",
          "type": "boolean"
        },
        "alwaysAddNewWebScans": {
          "description": "A flag that indicates whether new Web Scan should be added",
          "type": "boolean"
        },
        "removeSystemScanWhenUndiscovered": {
          "description": "A flag that indicates whether undiscovered System Scan should be removed",
          "type": "boolean"
        },
        "removeWebScanWhenUndiscovered": {
          "description": "A flag that indicates whether undiscovered Web Scan should be removed",
          "type": "boolean"
        },
        "assetSourceType": {
          "$ref": "#/definitions/Radar.Model.Enums.AssetSourceTypes"
        },
        "trackedHttpPortRangeForWebScan": {
          "description": "An object that contains information about tracked ports for Web Scans (http service)",
          "type": "string"
        },
        "trackedHttpsPortRangeForWebScan": {
          "description": "An object that contains information about tracked ports for Web Scans (https service)",
          "type": "string"
        },
        "runSystemScanImmediatelyAfterAdd": {
          "description": "A flag that indicates whether the new detected System Scan should be started",
          "type": "boolean"
        },
        "runWebScanImmediatelyAfterAdd": {
          "description": "A flag that indicates whether the new detected Web Scan should be started",
          "type": "boolean"
        },
        "scheduleId": {
          "format": "uuid",
          "description": "A unique identifier referring to Schedule",
          "type": "string"
        },
        "runSystemScanImmediatelyIfNewServicesDiscovered": {
          "description": "A flag that indicates whether the System Scan with new service detected should be started",
          "type": "boolean"
        }
      }
    },
    "PagedData[AssetMonitoringListViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetMonitoringListViewModel"
          }
        }
      }
    },
    "AssetMonitoringBaseViewModel": {
      "type": "object",
      "properties": {
        "scanGroupId": {
          "format": "uuid",
          "description": "A unique identifier referring to Scan Group",
          "type": "string"
        },
        "isActive": {
          "description": "A flag that indicates whether specific monitoring is active",
          "type": "boolean"
        },
        "trackSystemScans": {
          "description": "A flag that indicates if System Scans should be tracked",
          "type": "boolean"
        },
        "trackWebScans": {
          "description": "A flag that indicates whether Web Scans should be tracked",
          "type": "boolean"
        },
        "alwaysAddNewSystemScans": {
          "description": "A flag that indicates whether new System Scan should be added",
          "type": "boolean"
        },
        "alwaysAddNewWebScans": {
          "description": "A flag that indicates whether new Web Scan should be added",
          "type": "boolean"
        },
        "removeSystemScanWhenUndiscovered": {
          "description": "A flag that indicates whether undiscovered System Scan should be removed",
          "type": "boolean"
        },
        "removeWebScanWhenUndiscovered": {
          "description": "A flag that indicates whether undiscovered Web Scan should be removed",
          "type": "boolean"
        },
        "assetSourceType": {
          "$ref": "#/definitions/Radar.Model.Enums.AssetSourceTypes"
        },
        "trackedHttpPortRangeForWebScan": {
          "description": "An object that contains information about tracked ports for Web Scans (http service)",
          "type": "string"
        },
        "trackedHttpsPortRangeForWebScan": {
          "description": "An object that contains information about tracked ports for Web Scans (https service)",
          "type": "string"
        },
        "runSystemScanImmediatelyAfterAdd": {
          "description": "A flag that indicates whether the new detected System Scan should be started",
          "type": "boolean"
        },
        "runWebScanImmediatelyAfterAdd": {
          "description": "A flag that indicates whether the new detected Web Scan should be started",
          "type": "boolean"
        },
        "scheduleId": {
          "format": "uuid",
          "description": "A unique identifier referring to Schedule",
          "type": "string"
        },
        "runSystemScanImmediatelyIfNewServicesDiscovered": {
          "description": "A flag that indicates whether the System Scan with new service detected should be started",
          "type": "boolean"
        }
      }
    },
    "ProtocolTypes": {
      "format": "int32",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "DiscoveredAssetPortsViewModel": {
      "description": "Discovered asset port and service.",
      "required": [
        "port",
        "protocol"
      ],
      "type": "object",
      "properties": {
        "port": {
          "format": "int32",
          "description": "Discovered asset port (mandatory)",
          "type": "integer"
        },
        "protocol": {
          "$ref": "#/definitions/ProtocolTypes"
        },
        "service": {
          "description": "Discovered asset service (lowercase). Use 'http' or 'https' for discovered web applications (optional)",
          "type": "string"
        }
      }
    },
    "DiscoveredAssetViewModel": {
      "description": "Discovered assets for custom assets upload.",
      "required": [
        "ipAddress"
      ],
      "type": "object",
      "properties": {
        "hostName": {
          "description": "Discovered assets host name (optional)",
          "type": "string"
        },
        "ipAddress": {
          "description": "Discovered assets IP address",
          "type": "string"
        },
        "newPortsOrServicesDiscovered": {
          "description": "Was a new service or port discovered for this asset when compared to the previous asset upload",
          "type": "boolean"
        },
        "discoveredAssetPorts": {
          "description": "Collection of discovered ports and services along with the asset (optional)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscoveredAssetPortsViewModel"
          }
        }
      }
    },
    "DiscoveryScanAssetMonitoringViewModel": {
      "type": "object",
      "properties": {
        "discoveryScanId": {
          "format": "uuid",
          "description": "A unique identifier referring to discovery scan",
          "type": "string"
        },
        "scanGroupId": {
          "format": "uuid",
          "description": "A unique identifier referring to Scan Group",
          "type": "string"
        },
        "isActive": {
          "description": "A flag that indicates whether specific monitoring is active",
          "type": "boolean"
        },
        "trackSystemScans": {
          "description": "A flag that indicates if System Scans should be tracked",
          "type": "boolean"
        },
        "trackWebScans": {
          "description": "A flag that indicates whether Web Scans should be tracked",
          "type": "boolean"
        },
        "alwaysAddNewSystemScans": {
          "description": "A flag that indicates whether new System Scan should be added",
          "type": "boolean"
        },
        "alwaysAddNewWebScans": {
          "description": "A flag that indicates whether new Web Scan should be added",
          "type": "boolean"
        },
        "removeSystemScanWhenUndiscovered": {
          "description": "A flag that indicates whether undiscovered System Scan should be removed",
          "type": "boolean"
        },
        "removeWebScanWhenUndiscovered": {
          "description": "A flag that indicates whether undiscovered Web Scan should be removed",
          "type": "boolean"
        },
        "assetSourceType": {
          "$ref": "#/definitions/Radar.Model.Enums.AssetSourceTypes"
        },
        "trackedHttpPortRangeForWebScan": {
          "description": "An object that contains information about tracked ports for Web Scans (http service)",
          "type": "string"
        },
        "trackedHttpsPortRangeForWebScan": {
          "description": "An object that contains information about tracked ports for Web Scans (https service)",
          "type": "string"
        },
        "runSystemScanImmediatelyAfterAdd": {
          "description": "A flag that indicates whether the new detected System Scan should be started",
          "type": "boolean"
        },
        "runWebScanImmediatelyAfterAdd": {
          "description": "A flag that indicates whether the new detected Web Scan should be started",
          "type": "boolean"
        },
        "scheduleId": {
          "format": "uuid",
          "description": "A unique identifier referring to Schedule",
          "type": "string"
        },
        "runSystemScanImmediatelyIfNewServicesDiscovered": {
          "description": "A flag that indicates whether the System Scan with new service detected should be started",
          "type": "boolean"
        }
      }
    },
    "InternetDiscoveryAssetMonitoringViewModel": {
      "required": [
        "query"
      ],
      "type": "object",
      "properties": {
        "query": {
          "description": "Internet discovery query to search for assets",
          "type": "string"
        },
        "scanGroupId": {
          "format": "uuid",
          "description": "A unique identifier referring to Scan Group",
          "type": "string"
        },
        "isActive": {
          "description": "A flag that indicates whether specific monitoring is active",
          "type": "boolean"
        },
        "trackSystemScans": {
          "description": "A flag that indicates if System Scans should be tracked",
          "type": "boolean"
        },
        "trackWebScans": {
          "description": "A flag that indicates whether Web Scans should be tracked",
          "type": "boolean"
        },
        "alwaysAddNewSystemScans": {
          "description": "A flag that indicates whether new System Scan should be added",
          "type": "boolean"
        },
        "alwaysAddNewWebScans": {
          "description": "A flag that indicates whether new Web Scan should be added",
          "type": "boolean"
        },
        "removeSystemScanWhenUndiscovered": {
          "description": "A flag that indicates whether undiscovered System Scan should be removed",
          "type": "boolean"
        },
        "removeWebScanWhenUndiscovered": {
          "description": "A flag that indicates whether undiscovered Web Scan should be removed",
          "type": "boolean"
        },
        "assetSourceType": {
          "$ref": "#/definitions/Radar.Model.Enums.AssetSourceTypes"
        },
        "trackedHttpPortRangeForWebScan": {
          "description": "An object that contains information about tracked ports for Web Scans (http service)",
          "type": "string"
        },
        "trackedHttpsPortRangeForWebScan": {
          "description": "An object that contains information about tracked ports for Web Scans (https service)",
          "type": "string"
        },
        "runSystemScanImmediatelyAfterAdd": {
          "description": "A flag that indicates whether the new detected System Scan should be started",
          "type": "boolean"
        },
        "runWebScanImmediatelyAfterAdd": {
          "description": "A flag that indicates whether the new detected Web Scan should be started",
          "type": "boolean"
        },
        "scheduleId": {
          "format": "uuid",
          "description": "A unique identifier referring to Schedule",
          "type": "string"
        },
        "runSystemScanImmediatelyIfNewServicesDiscovered": {
          "description": "A flag that indicates whether the System Scan with new service detected should be started",
          "type": "boolean"
        }
      }
    },
    "MsgType": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64
      ],
      "type": "integer"
    },
    "LogsFilterViewModel": {
      "type": "object",
      "properties": {
        "eventType": {
          "$ref": "#/definitions/MsgType"
        },
        "userEmail": {
          "description": "User email address",
          "type": "string"
        },
        "searchPhrase": {
          "description": "A search phrase",
          "type": "string"
        },
        "dateFrom": {
          "format": "date-time",
          "description": "A period lower date and time",
          "type": "string"
        },
        "dateTo": {
          "format": "date-time",
          "description": "A period upper date and time",
          "type": "string"
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "LogViewModel": {
      "description": "Class representing single log entry.",
      "type": "object",
      "properties": {
        "date": {
          "format": "date-time",
          "description": "Log event timestamp",
          "type": "string"
        },
        "eventType": {
          "$ref": "#/definitions/MsgType"
        },
        "id": {
          "format": "uuid",
          "description": "Log entry unique identifier",
          "type": "string"
        },
        "isConsultant": {
          "description": "Is the user consultant",
          "type": "boolean"
        },
        "msgLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "remoteIP": {
          "description": "IP address of a request that caused the log entry (action, error, etc.)",
          "type": "string"
        },
        "subject": {
          "description": "General information about the log entry",
          "type": "string"
        },
        "userEmail": {
          "description": "User who caused the log entry (action, error, etc.)",
          "type": "string"
        },
        "userId": {
          "format": "uuid",
          "description": "ID of the user who caused the log entry (action, error, etc.)",
          "type": "string"
        }
      }
    },
    "PagedData[LogViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogViewModel"
          }
        }
      }
    },
    "DiscoveryScanReportViewModel": {
      "type": "object",
      "properties": {
        "scanStartDate": {
          "format": "date-time",
          "description": "A scan start date and time",
          "type": "string"
        },
        "scanEndDate": {
          "format": "date-time",
          "description": "A scan start date and time",
          "type": "string"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "BigInteger": {
      "type": "object",
      "properties": {
        "isPowerOfTwo": {
          "type": "boolean",
          "readOnly": true
        },
        "isZero": {
          "type": "boolean",
          "readOnly": true
        },
        "isOne": {
          "type": "boolean",
          "readOnly": true
        },
        "isEven": {
          "type": "boolean",
          "readOnly": true
        },
        "sign": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NetworkHostStatisticsViewModel": {
      "description": "Represents Discovery Scan report host grouped information.",
      "type": "object",
      "properties": {
        "networkHostLive": {
          "format": "int32",
          "description": "A discovery scan live host amount",
          "type": "integer"
        },
        "networkHostOffline": {
          "format": "int32",
          "description": "A discovery scan offline host amount",
          "type": "integer"
        },
        "networkHostOnline": {
          "format": "int32",
          "description": "A discovery scan online host amount",
          "type": "integer"
        }
      }
    },
    "NetworkHostWithPortsViewModel": {
      "type": "object",
      "properties": {
        "changeDecrement": {
          "format": "int32",
          "description": "A discovery hosts ports decrement change amount",
          "type": "integer"
        },
        "changeIncrement": {
          "format": "int32",
          "description": "A discovery hosts port increment change amount",
          "type": "integer"
        },
        "hostName": {
          "description": "Discovery host name",
          "type": "string"
        },
        "ip": {
          "description": "Discovery host IP address",
          "type": "string"
        },
        "numberPorts": {
          "format": "int32",
          "description": "A discovery host ports number",
          "type": "integer"
        }
      }
    },
    "DiscoveryScanOverviewPortsStatisticsViewModel": {
      "description": "Ports statistics as name protocol, number and count this ports.",
      "type": "object",
      "properties": {
        "count": {
          "format": "int32",
          "description": "Number of ports",
          "type": "integer"
        },
        "label": {
          "description": "Protocol and port",
          "type": "string"
        }
      }
    },
    "DiscoveryScanOverviewViewModel": {
      "type": "object",
      "properties": {
        "networkHostScanned": {
          "$ref": "#/definitions/BigInteger"
        },
        "networkHostStatistics": {
          "$ref": "#/definitions/NetworkHostStatisticsViewModel"
        },
        "openPorts": {
          "description": "Discovery scan hosts with open ports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkHostWithPortsViewModel"
          }
        },
        "ports": {
          "description": "Discovery scan hosts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkHostWithPortsViewModel"
          }
        },
        "portsStatistics": {
          "description": "A list with port statistics",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscoveryScanOverviewPortsStatisticsViewModel"
          }
        }
      }
    },
    "LocalizationEnum": {
      "format": "int32",
      "description": "Represents possible localization values.",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        111,
        112,
        113,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        124,
        125,
        126,
        127,
        128,
        129,
        130,
        131,
        132,
        133,
        134,
        135,
        136,
        137,
        138,
        139,
        140,
        141,
        142,
        143,
        144,
        145,
        146,
        147,
        148,
        149,
        150,
        151,
        152,
        153,
        154,
        155,
        156,
        157,
        158,
        159,
        160,
        161,
        162,
        163,
        164,
        165,
        166,
        167,
        168,
        169,
        170,
        171,
        172,
        173,
        174,
        175,
        176,
        177,
        178,
        179,
        180,
        181,
        182,
        183,
        184,
        185,
        186,
        187,
        188,
        189,
        190,
        191,
        192,
        193,
        194,
        195,
        196,
        197,
        198,
        199,
        200,
        201,
        202,
        203,
        204,
        205,
        206,
        207,
        208,
        209,
        210,
        211,
        212,
        213,
        214,
        215,
        216
      ],
      "type": "integer"
    },
    "ScanRunStateType": {
      "format": "int32",
      "description": "Indicates the possible states of the scan",
      "enum": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11
      ],
      "type": "integer"
    },
    "DiscoveryScanSchedulingModes": {
      "format": "int32",
      "description": "Represents a scheduling modes.",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "ScheduleOptionViewModel": {
      "description": "Represents a scheduling one time view model.",
      "type": "object",
      "properties": {
        "scheduleId": {
          "format": "uuid",
          "description": "A discovery scan schedule unique identifier",
          "type": "string"
        },
        "schedulingMode": {
          "$ref": "#/definitions/DiscoveryScanSchedulingModes"
        },
        "startDateTime": {
          "format": "date-time",
          "description": "Time and date time to start scheduling",
          "type": "string"
        },
        "startImmediately": {
          "description": "A flag indicating whether the scheduling should start immediately",
          "type": "boolean"
        }
      }
    },
    "SimpleDiscoveryScanAssetMonitoringViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "An asset monitoring unique identifier",
          "type": "string"
        },
        "name": {
          "description": "An asset monitoring name",
          "type": "string"
        }
      }
    },
    "SimpleInternetDiscoveryAssetMonitoringViewModel": {
      "type": "object",
      "properties": {
        "query": {
          "description": "Internet discovery query",
          "type": "string"
        }
      }
    },
    "ScanGroupSimpleViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A Scan Group unique identifier",
          "type": "string"
        },
        "name": {
          "description": "A Scan Group name",
          "type": "string"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "AssetMonitoringSimpleViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "An asset monitoring unique identifier",
          "type": "string"
        },
        "isActive": {
          "description": "Define if asset monitoring is active",
          "type": "boolean"
        },
        "assetSourceType": {
          "format": "int32",
          "description": "An asset monitoring type",
          "type": "integer"
        },
        "discoveryScan": {
          "$ref": "#/definitions/SimpleDiscoveryScanAssetMonitoringViewModel"
        },
        "internetDiscovery": {
          "$ref": "#/definitions/SimpleInternetDiscoveryAssetMonitoringViewModel"
        },
        "scanGroup": {
          "$ref": "#/definitions/ScanGroupSimpleViewModel"
        }
      }
    },
    "DiscoveryScanViewModel": {
      "description": "Represents a Discovery Scan definition view model.",
      "type": "object",
      "properties": {
        "canStartScan": {
          "description": "A flag that indicates that scan can be started",
          "type": "boolean"
        },
        "exclude": {
          "description": "An IP address exclusion range for discovery scans",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "description": "A discovery scan unique identifier",
          "type": "string"
        },
        "lastReportId": {
          "format": "uuid",
          "description": "A unique identifier of the last discovery scan report",
          "type": "string"
        },
        "name": {
          "description": "An IP address range for discovery scans",
          "type": "string"
        },
        "range": {
          "description": "A discovery scan IP address range",
          "type": "string"
        },
        "reportId": {
          "format": "uuid",
          "description": "A unique identifier for the discovery scan report object",
          "type": "string"
        },
        "responsibleUser": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "scanLastCompleted": {
          "format": "date-time",
          "description": "A date and time when the last discovery scan was completed",
          "type": "string"
        },
        "scanLastSeen": {
          "format": "date-time",
          "description": "A date and time of the last contact with security center",
          "type": "string"
        },
        "scanNode": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "scanNodeId": {
          "format": "uuid",
          "description": "A unique identifier for a discovery scan node",
          "type": "string"
        },
        "scanRunState": {
          "$ref": "#/definitions/ScanRunStateType"
        },
        "scanStatistics": {
          "description": "A statistics object of a discovery scan",
          "type": "object"
        },
        "scanTemplate": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "scheduleOption": {
          "$ref": "#/definitions/ScheduleOptionViewModel"
        },
        "assetMonitorings": {
          "description": "Asset monitoring related to a discovery scan",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetMonitoringSimpleViewModel"
          }
        },
        "templateId": {
          "format": "uuid",
          "description": "A discovery scan template unique identifier",
          "type": "string"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "DiscoveryScanDefinitionScanTargetViewModel": {
      "description": "Represents a Discovery Scan targets.",
      "type": "object",
      "properties": {
        "exclude": {
          "description": "An IP address exclusion range for discovery scans",
          "type": "string"
        },
        "name": {
          "description": "A display name for a discovery scan",
          "type": "string"
        },
        "range": {
          "description": "A discovery scan IP address range",
          "type": "string"
        }
      }
    },
    "NotificationType": {
      "format": "int32",
      "description": "Represents notification type possible values.",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "type": "integer"
    },
    "MessageNotificationViewModel": {
      "description": "A messsage notification helper.",
      "required": [
        "notificationLevel"
      ],
      "type": "object",
      "properties": {
        "emailAddresses": {
          "description": "An email address. Specify the required email addresses for notifications. Enter more email addresses by separating them with a comma",
          "type": "string"
        },
        "notificationLevel": {
          "$ref": "#/definitions/NotificationType"
        },
        "notificationLevelId": {
          "format": "int32",
          "description": "A notification level identifier",
          "type": "integer"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "UpdateDiscoveryScanDefinitionViewModel": {
      "description": "Represents a Discovery Scan update parameters.",
      "required": [
        "id",
        "scanNodeId",
        "scanTarget",
        "scheduleOption",
        "templateId"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A unique identifier for a discovery scan",
          "type": "string"
        },
        "scanTarget": {
          "$ref": "#/definitions/DiscoveryScanDefinitionScanTargetViewModel"
        },
        "messageNotification": {
          "description": "Message notifications",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageNotificationViewModel"
          }
        },
        "scanNodeId": {
          "format": "uuid",
          "description": "A unique identifier for a discovery scan node",
          "type": "string"
        },
        "scheduleOption": {
          "$ref": "#/definitions/ScheduleOptionViewModel"
        },
        "templateId": {
          "format": "uuid",
          "description": "A discovery scan template unique identifier",
          "type": "string"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "CreateDiscoveryScanDefinitionViewModel": {
      "description": "Represents a Discovery Scan create parameters.",
      "required": [
        "scanNodeId",
        "scanTargets",
        "scheduleOption",
        "templateId"
      ],
      "type": "object",
      "properties": {
        "scanTargets": {
          "description": "A list of discovery scan targets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscoveryScanDefinitionScanTargetViewModel"
          }
        },
        "messageNotification": {
          "description": "Message notifications",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageNotificationViewModel"
          }
        },
        "scanNodeId": {
          "format": "uuid",
          "description": "A unique identifier for a discovery scan node",
          "type": "string"
        },
        "scheduleOption": {
          "$ref": "#/definitions/ScheduleOptionViewModel"
        },
        "templateId": {
          "format": "uuid",
          "description": "A discovery scan template unique identifier",
          "type": "string"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "DiscoveryScanSimpleViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A scan unique identifier",
          "type": "string"
        },
        "name": {
          "description": "A scan name",
          "type": "string"
        },
        "scanRunState": {
          "$ref": "#/definitions/ScanRunStateType"
        }
      }
    },
    "DiscoveryScansListSummaryViewModel": {
      "description": "Summary information retrieved by the list view.",
      "type": "object",
      "properties": {
        "liveHosts": {
          "format": "int32",
          "description": "Number of hosts discovered so far",
          "type": "integer"
        },
        "queuedScans": {
          "format": "int32",
          "description": "Number of queued scans",
          "type": "integer"
        },
        "runningScans": {
          "format": "int32",
          "description": "Number of running scans",
          "type": "integer"
        },
        "totalScans": {
          "format": "int32",
          "description": "Total number of scans",
          "type": "integer"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "BatchUpdateScheduleNetworkScanViewModel": {
      "description": "View model for discovery scans update schedule operation.",
      "required": [
        "newScheduleId",
        "scanIds"
      ],
      "type": "object",
      "properties": {
        "newScheduleId": {
          "format": "uuid",
          "description": "A new schedule unique identifier",
          "type": "string"
        },
        "scanIds": {
          "description": "A list of scan unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "DiscoveryScansListViewModel": {
      "description": "A list that represents each row on Discovery Scans.",
      "type": "object",
      "properties": {
        "canStartScan": {
          "description": "A flag that indicates that scan can be started",
          "type": "boolean"
        },
        "createdBy": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "hostWentOffline": {
          "format": "int32",
          "description": "A number of hosts which went offline since the last scan (in comparison to the previous scan)",
          "type": "integer"
        },
        "hostWentOnline": {
          "format": "int32",
          "description": "A number of hosts which went online since the last scan (in comparison to the previous scan)",
          "type": "integer"
        },
        "id": {
          "format": "uuid",
          "description": "A scan unique identifier",
          "type": "string"
        },
        "lastReportId": {
          "format": "uuid",
          "description": "A unique identifier of the last discovery scan report",
          "type": "string"
        },
        "liveHostsCount": {
          "format": "int32",
          "description": "A number of hosts discovered during the last scan",
          "type": "integer"
        },
        "name": {
          "description": "Name of the scan",
          "type": "string"
        },
        "portsChanged": {
          "description": "A flag that indicates a change in ports in the last discovery scan (in comparison to the previous scan)",
          "type": "boolean"
        },
        "range": {
          "description": "A defined scanning range",
          "type": "string"
        },
        "runDateTime": {
          "format": "date-time",
          "description": "A date and time when scan will be run once (in run once mode)",
          "type": "string"
        },
        "scanLastCompleted": {
          "format": "date-time",
          "description": "A date and time when the last discovery scan was completed",
          "type": "string"
        },
        "scanLastSeen": {
          "format": "date-time",
          "description": "A date and time of the last contact with security center",
          "type": "string"
        },
        "scanNodeId": {
          "format": "uuid",
          "type": "string"
        },
        "scanNodeName": {
          "type": "string"
        },
        "scanRunState": {
          "$ref": "#/definitions/ScanRunStateType"
        },
        "scanStatistics": {
          "description": "Optional statistics if the scan is running",
          "type": "object"
        },
        "scanTemplate": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "schedule": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "hasAssetMonitoring": {
          "description": "Defines if the discovery scan has asset-related monitoring",
          "type": "boolean"
        }
      }
    },
    "BatchUpdateTemplateNetworkScanViewModel": {
      "description": "View model for discovery scans update scan template operation.",
      "required": [
        "newTemplateId",
        "scanIds"
      ],
      "type": "object",
      "properties": {
        "newTemplateId": {
          "format": "uuid",
          "description": "A unique identifier's new template",
          "type": "string"
        },
        "scanIds": {
          "description": "A list of scan unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "BatchNetworkScanViewModel": {
      "description": "Base view model for discovery scans batch operations.",
      "required": [
        "scanIds"
      ],
      "type": "object",
      "properties": {
        "scanIds": {
          "description": "A list of scan unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "NameOperator": {
      "type": "object",
      "properties": {
        "operator": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "NetworkFilterViewModel": {
      "description": "Filter view model class for discvoery scans list view.",
      "type": "object",
      "properties": {
        "names": {
          "description": "An array of operators by Name",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameOperator"
          }
        },
        "ranges": {
          "description": "An array of operators by Range",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameOperator"
          }
        },
        "hostNames": {
          "description": "An array of operators by Host name",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameOperator"
          }
        },
        "scanned": {
          "$ref": "#/definitions/ScannedWhenModeEnum"
        },
        "scannedNumber": {
          "format": "int32",
          "description": "Scanned number",
          "type": "integer"
        },
        "scannedWhenUnit": {
          "$ref": "#/definitions/ScannedWhenUnitEnum"
        },
        "allScanRunStates": {
          "description": "A flag that indicates if all the scan run states should be included in the result",
          "type": "boolean"
        },
        "scanRunStates": {
          "description": "An array of scan run states",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScanRunStateType"
          }
        },
        "scanGroup": {
          "description": "An array of unique identifiers for a scan group",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        },
        "scanTemplateId": {
          "format": "uuid",
          "description": "A unique identifier for a scan template",
          "type": "string"
        },
        "scanNodeId": {
          "format": "uuid",
          "description": "A scan node unique identifier",
          "type": "string"
        },
        "createdBy": {
          "format": "uuid",
          "type": "string"
        },
        "automationAssetsOnly": {
          "description": "A flag that indicates whether only automation assets are returned",
          "type": "boolean"
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "PagedData[DiscoveryScansListViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscoveryScansListViewModel"
          }
        }
      }
    },
    "HostsGroupViewModel": {
      "type": "object",
      "properties": {
        "newHostsCount": {
          "format": "int32",
          "description": "New host counter",
          "type": "integer"
        },
        "notScannedHostsCount": {
          "format": "int32",
          "description": "A counter for unscanned hosts",
          "type": "integer"
        }
      }
    },
    "DiscoveryHostChanges": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "type": "integer"
    },
    "DiscoveryHostStatuses": {
      "format": "int32",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "HostsFilterViewModel": {
      "type": "object",
      "properties": {
        "scanned": {
          "description": "A flag indicating that a query should return scanned hosts for a vulnerability scan",
          "type": "boolean"
        },
        "notAddedToGroup": {
          "description": "A flag indicating that a query should return hosts not added to a vulnerability scan",
          "type": "boolean"
        },
        "addedToGroup": {
          "description": "A flag indicating that a query should return hosts added to a vulnerability scan",
          "type": "boolean"
        },
        "showAllStatuses": {
          "description": "A flag indicating that a query should return all hosts without taking into account statuses",
          "type": "boolean"
        },
        "showAnyChanges": {
          "description": "A flag indicates that query should return any hosts without taking into account changes",
          "type": "boolean"
        },
        "changes": {
          "description": "Filter hosts by list of changes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscoveryHostChanges"
          }
        },
        "statuses": {
          "description": "Filter hosts by list of statuses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscoveryHostStatuses"
          }
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "DiscoveryScansPortsChangedEnum": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "type": "integer"
    },
    "DiscoveryHostScanPortViewModel": {
      "type": "object",
      "properties": {
        "number": {
          "format": "int32",
          "description": "Host number",
          "type": "integer"
        },
        "protocol": {
          "$ref": "#/definitions/ProtocolTypes"
        }
      }
    },
    "Ports": {
      "type": "object",
      "properties": {
        "new": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscoveryHostScanPortViewModel"
          }
        },
        "old": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscoveryHostScanPortViewModel"
          }
        },
        "removed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscoveryHostScanPortViewModel"
          }
        }
      }
    },
    "DiscoveryHostViewModel": {
      "description": "Represents Discovery Scan report hosts.",
      "type": "object",
      "properties": {
        "change": {
          "$ref": "#/definitions/DiscoveryScansPortsChangedEnum"
        },
        "hostname": {
          "description": "A host name",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "description": "A host instance object unique identifier",
          "type": "string"
        },
        "ipAddress": {
          "description": "Host IP address",
          "type": "string"
        },
        "macAddress": {
          "description": "Host MAC address",
          "type": "string"
        },
        "operatingSystem": {
          "description": "Host operating system",
          "type": "string"
        },
        "ports": {
          "$ref": "#/definitions/Ports"
        },
        "previousIPAddress": {
          "description": "IP address of previous host",
          "type": "string"
        },
        "previousOperatingSystem": {
          "description": "Operating system of previous host",
          "type": "string"
        },
        "previousStatus": {
          "description": "Status of previous host",
          "type": "string"
        },
        "status": {
          "description": "Host status",
          "type": "string"
        },
        "systemScanId": {
          "format": "uuid",
          "description": "The VulnerabiliyScan's unique identifier",
          "type": "string"
        },
        "systemScanLastReportId": {
          "format": "uuid",
          "description": "The VulnerabiliyScan's unique identifier latest report",
          "type": "string"
        }
      }
    },
    "PagedData[DiscoveryHostViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscoveryHostViewModel"
          }
        }
      }
    },
    "AuthenticationMode": {
      "format": "int32",
      "description": "Authentication Mode Enum.",
      "enum": [
        1,
        2
      ],
      "type": "integer"
    },
    "NotificationPeriod": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "AccountDetailsViewModel": {
      "type": "object",
      "properties": {
        "authenticationMode": {
          "$ref": "#/definitions/AuthenticationMode"
        },
        "requireTwoFactorAutheticationFromAnyCompany": {
          "description": "A flag that indicates if user need verify against two factor authentication because some organization require it",
          "type": "boolean"
        },
        "email": {
          "description": "An user email address",
          "type": "string"
        },
        "firstName": {
          "description": "Name of the user",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "description": "An user unique identifier",
          "type": "string"
        },
        "languageCode": {
          "$ref": "#/definitions/LocalizationEnum"
        },
        "lastName": {
          "description": "An user last name",
          "type": "string"
        },
        "notificationPeriod": {
          "$ref": "#/definitions/NotificationPeriod"
        },
        "phone": {
          "description": "An user phone number",
          "type": "string"
        },
        "timeZone": {
          "description": "An user time zone",
          "type": "string"
        }
      }
    },
    "OrganizationTypes": {
      "format": "int32",
      "description": "Type of a organization in Security Center hierarchy.",
      "enum": [
        0,
        10,
        20,
        30,
        40
      ],
      "type": "integer"
    },
    "AuthenticationContextViewModel": {
      "type": "object",
      "properties": {
        "isConsultant": {
          "description": "A flag that indicates that the user is consultant",
          "type": "boolean"
        },
        "loggedUserId": {
          "format": "uuid",
          "description": "A logged user account",
          "type": "string"
        },
        "analyticsId": {
          "description": "User Analytics Id (Matomo/Walkme etc.)",
          "type": "string"
        },
        "userFirstName": {
          "description": "User's first name",
          "type": "string"
        },
        "userLastName": {
          "description": "An user name",
          "type": "string"
        },
        "userTimeZone": {
          "description": "User's time zone",
          "type": "string"
        },
        "userTimeZoneOffset": {
          "description": "An user time zone UTC offset",
          "type": "string"
        },
        "userAssignedToManyOrganizations": {
          "description": "Is user assigned to more than one organization",
          "type": "boolean"
        },
        "successfulLoginCount": {
          "format": "int32",
          "description": "Number of successful logins",
          "type": "integer"
        },
        "accountConfiguration": {
          "description": "A dictionary with account configuration e.g. enabled ticket management, dashboard visibility,",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "aggregatedPrivileges": {
          "description": "An array with user privileges",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isActive": {
          "description": "A flag that indicates if the organization is active",
          "type": "boolean"
        },
        "isConsultantsOrganization": {
          "description": "A flag that indicates if it is a consultant organization",
          "type": "boolean"
        },
        "organizationId": {
          "format": "uuid",
          "type": "string"
        },
        "organizationName": {
          "description": "Organization name",
          "type": "string"
        },
        "isOrganizationManagedRemotely": {
          "description": "Is organizations synchronized with the managed service",
          "type": "boolean"
        },
        "organizationType": {
          "$ref": "#/definitions/OrganizationTypes"
        },
        "organizationIsTrial": {
          "description": "A flag that indicates if organization is trial",
          "type": "boolean"
        },
        "scanGroupPrivileges": {
          "description": "A dictionary with scan group privileges that user has",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "userHasAccessToAllScanGroups": {
          "description": "A flag that indicates if user has access to all scan groups",
          "type": "boolean"
        },
        "topOrganizationType": {
          "$ref": "#/definitions/OrganizationTypes"
        },
        "topOrganizationIds": {
          "description": "List of organizations where user is directly assigned, but only of highest type",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "ScanType": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "ScanTechniques": {
      "format": "int32",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "ScanningPerformances": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "type": "integer"
    },
    "WindowsModes": {
      "format": "int32",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "SSHAuthenticationTypes": {
      "format": "int32",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "AccountTypes": {
      "format": "int32",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "CredentialTypes": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "AuthModeInput": {
      "type": "object",
      "properties": {
        "windowsMode": {
          "$ref": "#/definitions/WindowsModes"
        },
        "ntlmUserName": {
          "type": "string"
        },
        "ntlmPassword": {
          "type": "string"
        },
        "ntlmDomain": {
          "type": "string"
        },
        "ntlmUseWSUS": {
          "type": "boolean"
        },
        "ntlmUseMicrosoftUpdateServer": {
          "type": "boolean"
        },
        "ntlmOfflineScanningActive": {
          "type": "boolean"
        },
        "ntlmRemoteRegistryEnabled": {
          "type": "boolean"
        },
        "ntlmRemoteRegistryStopPrevented": {
          "type": "boolean"
        },
        "ntlmMsProductsUpdateEnabled": {
          "type": "boolean"
        },
        "sshEncryptionKeyName": {
          "type": "string"
        },
        "sshEncryptionKey": {
          "format": "byte",
          "type": "string"
        },
        "sshPort": {
          "type": "string"
        },
        "sshUsername": {
          "type": "string"
        },
        "sshPassPhrase": {
          "type": "string"
        },
        "sshPassword": {
          "type": "string"
        },
        "sshKey": {
          "type": "string"
        },
        "sshAuthenticationType": {
          "$ref": "#/definitions/SSHAuthenticationTypes"
        },
        "ntlmAccountType": {
          "$ref": "#/definitions/AccountTypes"
        },
        "credentialType": {
          "$ref": "#/definitions/CredentialTypes"
        },
        "xmlType": {
          "type": "string",
          "readOnly": true
        },
        "winrmUserName": {
          "type": "string"
        },
        "winrmPassword": {
          "type": "string"
        },
        "winrmUseWSUS": {
          "type": "boolean"
        },
        "winrmUseMicrosoftUpdateServer": {
          "type": "boolean"
        },
        "winrmOfflineScanningActive": {
          "type": "boolean"
        },
        "winrmMsProductsUpdateEnabled": {
          "type": "boolean"
        },
        "winrmPort": {
          "type": "string"
        },
        "winrmIsCertificateCheckSkipped": {
          "type": "boolean"
        },
        "winrmUseSSL": {
          "type": "boolean"
        },
        "winrmAccountType": {
          "$ref": "#/definitions/AccountTypes"
        }
      }
    },
    "ExecutionMode": {
      "format": "int32",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "PluginSelectionViewModel": {
      "type": "object",
      "properties": {
        "plugins": {
          "description": "Get or set list of plugin ids",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "pluginExecutionMode": {
          "$ref": "#/definitions/ExecutionMode"
        }
      }
    },
    "SystemScanCustomConfigurationViewModel": {
      "description": "Represents System Scan custom configuration.",
      "type": "object",
      "properties": {
        "tcpPortRange": {
          "description": "Get or set scan TCP port range",
          "type": "string"
        },
        "udpPortRange": {
          "description": "Get or set scan UDP port range",
          "type": "string"
        },
        "tcpScanTechnique": {
          "$ref": "#/definitions/ScanTechniques"
        },
        "scanningPerformance": {
          "$ref": "#/definitions/ScanningPerformances"
        },
        "skipBackported": {
          "description": "Gets or sets a value indicating whether the skip backported feature is enabled",
          "type": "boolean"
        },
        "extendedScanLog": {
          "description": "Gets or sets a value indicating whether the extended scan logs are enabled",
          "type": "boolean"
        },
        "authenticationModes": {
          "description": "An authentication modes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthModeInput"
          }
        },
        "pluginSelection": {
          "$ref": "#/definitions/PluginSelectionViewModel"
        }
      }
    },
    "ScanningMode": {
      "format": "int32",
      "description": "A scanning modes.",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "ScanPortSimpleViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A unique identifier of scan port",
          "type": "string"
        },
        "protocol": {
          "$ref": "#/definitions/ProtocolTypes"
        },
        "number": {
          "format": "int32",
          "description": "A port number",
          "type": "integer"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "ScanViewModel": {
      "description": "Represents a single scan.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A scan unique identifier",
          "type": "string"
        },
        "name": {
          "description": "A scan name",
          "type": "string"
        },
        "lastReportId": {
          "format": "uuid",
          "description": "A unique identifier of the last scan report",
          "type": "string"
        },
        "hostname": {
          "description": "A host name",
          "type": "string"
        },
        "virtualHostname": {
          "description": "A virtual host name",
          "type": "string"
        },
        "macAddress": {
          "description": "Target Mac Address",
          "type": "string"
        },
        "assignedTo": {
          "format": "uuid",
          "description": "A unique identifier of the user assigned to this scan",
          "type": "string"
        },
        "assignedToUser": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "createdByUser": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "scanLastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "scanRunState": {
          "$ref": "#/definitions/ScanRunStateType"
        },
        "scanType": {
          "$ref": "#/definitions/ScanType"
        },
        "canStartScan": {
          "description": "A flag that indicates if scan can be started.\r\nIt returns true when ScanRunState is: Paused, Terminated, Corrupted, Idle.\r\nIt returns false when ScanRunState is: Running, Initialized, AwaitingForResources, StoppedAwaiting.\r\nIt set to null when ScanRunState is PausedAwaiting",
          "type": "boolean"
        },
        "lastScanStart": {
          "format": "date-time",
          "description": "Date and time when the scan was last started",
          "type": "string"
        },
        "lastScanEnd": {
          "format": "date-time",
          "description": "Date and time when the scan was last ended",
          "type": "string"
        },
        "scanLastCompleted": {
          "format": "date-time",
          "description": "Date and time when the scan was last completed",
          "type": "string"
        },
        "scanStatistics": {
          "description": "An object that contains information about statistics: risk, ETA, open ports,",
          "type": "object"
        },
        "scanProgress": {
          "format": "int32",
          "description": "A value that represent scan progress. It take values [0 - initialized, 100 - completed]",
          "type": "integer"
        },
        "tags": {
          "description": "A list that represents tags pinned to the scan",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagViewModel"
          }
        },
        "groupId": {
          "format": "uuid",
          "description": "A unique identifier referring to Scan Group",
          "type": "string"
        },
        "group": {
          "$ref": "#/definitions/ScanGroupSimpleViewModel"
        },
        "systemScanTemplateId": {
          "format": "uuid",
          "description": "A unique identifier referring to the System Scan template",
          "type": "string"
        },
        "scheduleId": {
          "format": "uuid",
          "description": "A unique identifier referring to Schedule",
          "type": "string"
        },
        "scanGroupScheduleId": {
          "format": "uuid",
          "description": "A unique identifier reffering to Scan Group Schedule",
          "type": "string"
        },
        "isCustomConfiguration": {
          "description": "A flag that indicates if System Scan has custom configuration",
          "type": "boolean"
        },
        "customConfiguration": {
          "$ref": "#/definitions/SystemScanCustomConfigurationViewModel"
        },
        "scanningMode": {
          "$ref": "#/definitions/ScanningMode"
        },
        "assetMonitoring": {
          "$ref": "#/definitions/AssetMonitoringSimpleViewModel"
        },
        "openTCPPorts": {
          "description": "List of open TCP ports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScanPortSimpleViewModel"
          }
        },
        "openUDPPorts": {
          "description": "List of open UDP ports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScanPortSimpleViewModel"
          }
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "VulnerabilityScansFilterModel": {
      "description": "Vulnerability scans filter model.",
      "type": "object",
      "properties": {
        "nextRunDays": {
          "format": "int32",
          "description": "A next run days",
          "type": "integer"
        },
        "protocol": {
          "$ref": "#/definitions/ProtocolTypes"
        },
        "scheduleId": {
          "format": "uuid",
          "description": "A unique identifier for a schedule",
          "type": "string"
        },
        "scanTemplateId": {
          "format": "uuid",
          "description": "A unique identifier for a scan template",
          "type": "string"
        },
        "allScanRunStates": {
          "description": "A flag that indicates whether results can contain vulnerability scans with all run states. The default value is 'true'",
          "type": "boolean"
        },
        "scanRunStates": {
          "description": "An array with scan run states that are taken into account during filtering",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScanRunStateType"
          }
        },
        "newFindingsOnly": {
          "description": "A flag that indicates whether only new findings are returned",
          "type": "boolean"
        },
        "automationAssetsOnly": {
          "description": "A flag that indicates whether only automation assets are returned",
          "type": "boolean"
        },
        "systemScan": {
          "description": "A flag that indicates whether only System Scans are returned. The default value is 'true'",
          "type": "boolean"
        },
        "webScan": {
          "description": "A flag that indicates whether only Web Scans are returned. The default value is 'true'",
          "type": "boolean"
        },
        "nameOperator": {
          "description": "A logic operator that is used to filter results by scan name",
          "type": "string"
        },
        "name": {
          "description": "Filters results by vulnerability scan name",
          "type": "string"
        },
        "hostName": {
          "description": "Filters results by host name",
          "type": "string"
        },
        "hostNameOperator": {
          "description": "A logical operator that is used to filter results by a host name. The default value is 'Is'",
          "type": "string"
        },
        "responsible": {
          "format": "uuid",
          "description": "A unique identifier for a responsible user",
          "type": "string"
        },
        "iPaddressOperator": {
          "description": "A logical operator that is used to filter results by a host name. The default value is 'Is'",
          "type": "string"
        },
        "iPaddress": {
          "description": "Filters results by an IP address",
          "type": "string"
        },
        "operatingSystem": {
          "description": "Filters results by operating system",
          "type": "string"
        },
        "scanned": {
          "$ref": "#/definitions/ScannedWhenModeEnum"
        },
        "scannedNumber": {
          "format": "int32",
          "description": "A number of units used when checking the time of scan. The default value is 1",
          "type": "integer"
        },
        "scannedWhenUnit": {
          "$ref": "#/definitions/ScannedWhenUnitEnum"
        },
        "scanGroup": {
          "description": "Filters results by a list of scan groups",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        },
        "tagsOneOf": {
          "description": "Tags included in the scan. The value is 'True' if at least one tag is present",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValueItem[String]"
          }
        },
        "tagsAllOf": {
          "description": "Tags included in the scan. The value is 'True' if all tags are present",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValueItem[String]"
          }
        },
        "severity": {
          "description": "A severity level. The default value is 'All'",
          "type": "string"
        },
        "excludeHigherSeverity": {
          "description": "A flag that indicates whether the result should exclude vulnerabilities with high severity",
          "type": "boolean"
        },
        "skipNotScannedTargets": {
          "description": "A flag that indicates whether targets that are not scanned should be skipped in results",
          "type": "boolean"
        },
        "hideEmptyScanGroups": {
          "description": "A flag that indicates whether empty scan groups should be hidden",
          "type": "boolean"
        },
        "isUpcomingScan": {
          "description": "A flag that indicates an upcoming scan",
          "type": "boolean"
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "NumberOfScansViewModel": {
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "description": "Total number for scans",
          "type": "integer"
        },
        "systemScanCount": {
          "format": "int32",
          "description": "Number of System Scans",
          "type": "integer"
        },
        "webScanCount": {
          "format": "int32",
          "description": "Number of Web Scans",
          "type": "integer"
        }
      }
    },
    "NameValueItem[Int32]": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ScanningProgressViewModel": {
      "description": "Represents scanning progress.",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/ScanRunStateType"
        },
        "count": {
          "format": "int32",
          "description": "A number of scans in given status",
          "type": "integer"
        }
      }
    },
    "NumberOfVulnerabiltiesViewModel": {
      "description": "Numbers of vulnerabilities of different types.",
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "description": "Total number for vulnerabilities",
          "type": "integer"
        },
        "highCount": {
          "format": "int32",
          "description": "A number of high vulnerabilities",
          "type": "integer"
        },
        "mediumCount": {
          "format": "int32",
          "description": "A number of medium vulnerabilities",
          "type": "integer"
        },
        "lowCount": {
          "format": "int32",
          "description": "A number of low vulnerabilities",
          "type": "integer"
        },
        "informationalCount": {
          "format": "int32",
          "description": "A number of informational findings",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BatchScanViewModel": {
      "required": [
        "scanIds"
      ],
      "type": "object",
      "properties": {
        "scanGroupIds": {
          "description": "A list of the scan group's unique identifiers to change the state for all its scans",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "scanIds": {
          "description": "A list of unique identifiers for Scans where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "startPage": {
          "format": "int32",
          "description": "A start page",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "vulnerabilityScansFilterModel": {
          "$ref": "#/definitions/VulnerabilityScansFilterModel"
        }
      }
    },
    "BatchMoveScanViewModel": {
      "required": [
        "newScanGroupId",
        "scanIds"
      ],
      "type": "object",
      "properties": {
        "newScanGroupId": {
          "format": "uuid",
          "description": "A new scan group unique identifier",
          "type": "string"
        },
        "scanGroupIds": {
          "description": "A list of the scan group's unique identifiers to change the state for all its scans",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "scanIds": {
          "description": "A list of unique identifiers for Scans where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "startPage": {
          "format": "int32",
          "description": "A start page",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "vulnerabilityScansFilterModel": {
          "$ref": "#/definitions/VulnerabilityScansFilterModel"
        }
      }
    },
    "BatchUpdateScanScheduleViewModel": {
      "required": [
        "newScheduleId",
        "scanIds"
      ],
      "type": "object",
      "properties": {
        "newScheduleId": {
          "format": "uuid",
          "description": "A new schedule unique identifier",
          "type": "string"
        },
        "scanGroupIds": {
          "description": "A list of the scan group's unique identifiers to change the state for all its scans",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "scanIds": {
          "description": "A list of unique identifiers for Scans where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "startPage": {
          "format": "int32",
          "description": "A start page",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "vulnerabilityScansFilterModel": {
          "$ref": "#/definitions/VulnerabilityScansFilterModel"
        }
      }
    },
    "BatchAddTagsToScansViewModel": {
      "required": [
        "scanIds",
        "tags"
      ],
      "type": "object",
      "properties": {
        "tags": {
          "description": "A string that contains tags to add or remove",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operation": {
          "$ref": "#/definitions/UpdateOperationsEnum"
        },
        "scanGroupIds": {
          "description": "A list of the scan group's unique identifiers to change the state for all its scans",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "scanIds": {
          "description": "A list of unique identifiers for Scans where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "startPage": {
          "format": "int32",
          "description": "A start page",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "vulnerabilityScansFilterModel": {
          "$ref": "#/definitions/VulnerabilityScansFilterModel"
        }
      }
    },
    "CompliantType": {
      "format": "int32",
      "description": "Enumerable for compliant types (PCI ...)",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "CompliantLevel": {
      "format": "int32",
      "description": "Represents compliant indicator possible values.",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "VulnerabilityScansListViewModel": {
      "description": "Represents vulnerability scans list.",
      "type": "object",
      "properties": {
        "lastReportId": {
          "format": "uuid",
          "description": "A last report unique identifier",
          "type": "string"
        },
        "scanId": {
          "format": "uuid",
          "description": "A scan unique identfier",
          "type": "string"
        },
        "os": {
          "description": "An operating system",
          "type": "string"
        },
        "scanningMode": {
          "$ref": "#/definitions/ScanningMode"
        },
        "compliantType": {
          "$ref": "#/definitions/CompliantType"
        },
        "scanType": {
          "description": "A scan type",
          "type": "string"
        },
        "target": {
          "description": "A Target",
          "type": "string"
        },
        "vulnerabilitiesHigh": {
          "format": "int32",
          "description": "A number of vulnerabilitites with high serverity",
          "type": "integer"
        },
        "vulnerabilitiesMedium": {
          "format": "int32",
          "description": "A number of vulnerabilitites with medium serverity",
          "type": "integer"
        },
        "vulnerabilitiesLow": {
          "format": "int32",
          "description": "A number of vulnerabilitites with low serverity",
          "type": "integer"
        },
        "vulnerabilitiesInformational": {
          "format": "int32",
          "description": "A number of vulnerabilitites with informational serverity",
          "type": "integer"
        },
        "change": {
          "$ref": "#/definitions/ScanChange"
        },
        "lastScan": {
          "description": "The last scan",
          "type": "string"
        },
        "compliant": {
          "$ref": "#/definitions/CompliantLevel"
        },
        "host": {
          "description": "A host",
          "type": "string",
          "readOnly": true
        },
        "scanRunState": {
          "$ref": "#/definitions/ScanRunStateType"
        },
        "scanStart": {
          "format": "date-time",
          "description": "Date and time when the scan started",
          "type": "string"
        },
        "scanStatistics": {
          "description": "A scan statistics",
          "type": "object"
        },
        "scanLastCompleted": {
          "format": "date-time",
          "description": "A date and time when scan last completed",
          "type": "string"
        },
        "scanLastSeen": {
          "format": "date-time",
          "description": "A date and time when scan was last seen (scan is alive)",
          "type": "string"
        },
        "scanHostState": {
          "format": "int32",
          "description": "A scan host state",
          "type": "integer"
        },
        "canStartScan": {
          "description": "A flag that indicates if the scan can start",
          "type": "boolean"
        },
        "createdBy": {
          "format": "uuid",
          "description": "Id of creator",
          "type": "string"
        },
        "assignedTo": {
          "format": "uuid",
          "description": "Id of assigned user",
          "type": "string"
        },
        "createdOn": {
          "format": "date-time",
          "description": "Date of creation",
          "type": "string"
        },
        "scheduleId": {
          "format": "uuid",
          "description": "A unique identifier referring to Schedule",
          "type": "string",
          "readOnly": true
        },
        "scanTemplate": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "schedule": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "nextRun": {
          "format": "date-time",
          "description": "Date and time of the next run",
          "type": "string"
        },
        "scanGroup": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "assetSourceId": {
          "format": "uuid",
          "description": "Id of related asset source if exists",
          "type": "string"
        },
        "assetSourceType": {
          "format": "int32",
          "description": "Type of related asset source if exists",
          "type": "integer"
        },
        "isCustomScanTemplate": {
          "description": "A flag that indicates if scan uses custom template",
          "type": "boolean"
        },
        "nodeId": {
          "description": "A scan node identificator (the ID that is present in the scan node license file and Radar Update Service)",
          "type": "string"
        },
        "scanNodeName": {
          "description": "Name of related scan node",
          "type": "string"
        }
      }
    },
    "TargetScanViewModel": {
      "description": "Represent target scan parameters. Set FQDN or IP address. You can also define FQDN or IP together with friendly name.\r\nIf the friendly name is a valid domain name it will be used for the Web domain field.",
      "required": [
        "scanTarget"
      ],
      "type": "object",
      "properties": {
        "scanTarget": {
          "description": "A fully qualified domain name or IP address",
          "type": "string"
        },
        "name": {
          "description": "A friendly name",
          "type": "string"
        },
        "virtualHostname": {
          "description": "A web domain name",
          "type": "string"
        },
        "macAddress": {
          "description": "A target MAC address",
          "type": "string"
        }
      }
    },
    "AddSystemScansViewModel": {
      "required": [
        "groupId"
      ],
      "type": "object",
      "properties": {
        "groupId": {
          "format": "uuid",
          "description": "A Scan Group unique identifier",
          "type": "string"
        },
        "targets": {
          "description": "A list of scan targets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetScanViewModel"
          }
        },
        "scanningMode": {
          "$ref": "#/definitions/ScanningMode"
        }
      }
    },
    "AddSystemScansResultViewModel": {
      "type": "object",
      "properties": {
        "scanList": {
          "description": "A list of scan unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "VulnerabilityScansSummaryViewModel": {
      "description": "Summary information and count about vulnerability scans.",
      "type": "object",
      "properties": {
        "totalScans": {
          "format": "int32",
          "description": "Total number of scans",
          "type": "integer"
        },
        "totalScansRunning": {
          "format": "int32",
          "description": "Total number of running scans",
          "type": "integer"
        },
        "totalScansQueued": {
          "format": "int32",
          "description": "Total number of queued scans",
          "type": "integer"
        }
      }
    },
    "ScansAndScanGroupsViewModel": {
      "type": "object",
      "properties": {
        "scanGroups": {
          "description": "A flag that indicates scan groups",
          "type": "boolean"
        },
        "scans": {
          "description": "A flag that indicates scans",
          "type": "boolean"
        }
      }
    },
    "BatchUpdateScanConfigurationViewModel": {
      "required": [
        "configuration",
        "scanIds"
      ],
      "type": "object",
      "properties": {
        "configuration": {
          "description": "A new schedule unique identifier",
          "type": "string"
        },
        "scanGroupIds": {
          "description": "A list of the scan group's unique identifiers to change the state for all its scans",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "scanIds": {
          "description": "A list of unique identifiers for Scans where the state is changed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "startPage": {
          "format": "int32",
          "description": "A start page",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "vulnerabilityScansFilterModel": {
          "$ref": "#/definitions/VulnerabilityScansFilterModel"
        }
      }
    },
    "PagedData[VulnerabilityScansListViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilityScansListViewModel"
          }
        }
      }
    },
    "WebScanServerAuthenticationTypes": {
      "format": "int32",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "WebScanAuthenticationViewModel": {
      "description": "An authentication modes.",
      "type": "object",
      "properties": {
        "serverAuthenticationType": {
          "$ref": "#/definitions/WebScanServerAuthenticationTypes"
        },
        "username": {
          "description": "A discovery scan server username for http basic authentication type",
          "type": "string"
        },
        "password": {
          "description": "A discovery scan server password for http basic authentication type",
          "type": "string"
        },
        "readOnly": {
          "description": "A value indicating whether the authentication is read only",
          "type": "boolean"
        }
      }
    },
    "WebScanServerAttackCategories": {
      "format": "int32",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "WebScanAttackHttpMethods": {
      "format": "int32",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "WebScanScanningRestrictionsActions": {
      "format": "int32",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "WebScanScanningRestrictionsTypes": {
      "format": "int32",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "WebScanScanningRestrictionViewModel": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/WebScanScanningRestrictionsActions"
        },
        "types": {
          "$ref": "#/definitions/WebScanScanningRestrictionsTypes"
        },
        "value": {
          "description": "A value",
          "type": "string"
        }
      }
    },
    "WebScanCustomConfigurationViewModel": {
      "type": "object",
      "properties": {
        "authenticationModes": {
          "description": "An authentication modes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebScanAuthenticationViewModel"
          }
        },
        "runAttacksEnabled": {
          "description": "A value indicating whether the run attacks is enabled",
          "type": "boolean"
        },
        "attackCategories": {
          "description": "Web Scan list of category attacks",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebScanServerAttackCategories"
          }
        },
        "crawlerEnabled": {
          "description": "A value indicating whether the crawler is enabled",
          "type": "boolean"
        },
        "attackUsingHttpMethods": {
          "description": "Web Scan list of http methods for attack scanning",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebScanAttackHttpMethods"
          }
        },
        "extendedScanLogEnabled": {
          "description": "A value indicating whether the expanded scan log is enabled",
          "type": "boolean"
        },
        "relativeUrlsForScanning": {
          "description": "Web Scan list of relative URLs for scanning",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customHeaders": {
          "description": "Discovery scan custom headers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValueItem[String]"
          }
        },
        "scanningRestrictions": {
          "description": "discovery scan server scanning restrictions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebScanScanningRestrictionViewModel"
          }
        },
        "maxParallelRequests": {
          "format": "int32",
          "description": "Discovery scan server scanning max parallel requests",
          "type": "integer"
        },
        "maxRequestPerSecond": {
          "format": "int32",
          "description": "Discovery scan server scanning max request per second",
          "type": "integer"
        },
        "loginFingerprint": {
          "description": "A discovery scan server login fingerprint for a form-based authentication type",
          "type": "string"
        },
        "logoutFingerprint": {
          "description": "A discovery scan server logout fingerprint for a form-based authentication type",
          "type": "string"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "WebScanRecordingTypes": {
      "format": "int32",
      "description": "Represents Web Scan recording types possible values.",
      "enum": [
        1,
        2,
        4,
        5
      ],
      "type": "integer"
    },
    "WebScanRecordingUploadViewModel": {
      "description": "Represents Web Scan recordings.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A Web Scan recording unique identifier",
          "type": "string"
        },
        "fileName": {
          "description": "A Web Scan recording file name",
          "type": "string"
        },
        "recordingType": {
          "$ref": "#/definitions/WebScanRecordingTypes"
        },
        "contentType": {
          "description": "Web Scan recording file content",
          "type": "string"
        },
        "content": {
          "description": "Web Scan recording file content",
          "type": "string"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "WebScanViewModel": {
      "description": "Represents Web Scan view model.",
      "type": "object",
      "properties": {
        "scanId": {
          "format": "uuid",
          "description": "A unique identifier for a Web Scan",
          "type": "string"
        },
        "scanRunState": {
          "$ref": "#/definitions/ScanRunStateType"
        },
        "scanGroupSchedule": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "scanGroupTemplate": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "scanTargetUrl": {
          "description": "Target URL for a Web Scan",
          "type": "string"
        },
        "name": {
          "description": "A Web Scan name",
          "type": "string"
        },
        "lastReportId": {
          "format": "uuid",
          "description": "Unique identifier of the last scan report",
          "type": "string"
        },
        "assignedTo": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "scanGroup": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "customConfiguration": {
          "$ref": "#/definitions/WebScanCustomConfigurationViewModel"
        },
        "scheduleId": {
          "format": "uuid",
          "description": "Web Scan schedule unique identifier",
          "type": "string"
        },
        "recording": {
          "$ref": "#/definitions/WebScanRecordingUploadViewModel"
        },
        "recordingChromeAddonUrl": {
          "description": "URL of Chrome add-on for recording Web Scans",
          "type": "string"
        },
        "scanType": {
          "$ref": "#/definitions/ScanType"
        },
        "lastScanStart": {
          "format": "date-time",
          "description": "A Web Scan last scan start",
          "type": "string"
        },
        "lastScanEnd": {
          "format": "date-time",
          "description": "A Web Scan last scan end",
          "type": "string"
        },
        "scanLastCompleted": {
          "format": "date-time",
          "description": "A Web Scan last scan completed",
          "type": "string"
        },
        "scanStatistics": {
          "description": "A Web Scan statistics",
          "type": "object"
        },
        "scanProgress": {
          "format": "int32",
          "description": "A Web Scan running progress",
          "type": "integer"
        },
        "canStartScan": {
          "description": "A value indicating whether the scan can be started",
          "type": "boolean"
        },
        "tags": {
          "description": "Web Scan tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagViewModel"
          }
        }
      }
    },
    "CreateWebScanViewModel": {
      "description": "Parameters for updating the existing Scan Group.",
      "required": [
        "messageNotification"
      ],
      "type": "object",
      "properties": {
        "scanTargetUrl": {
          "description": "Target URL for a Web Scan",
          "type": "string"
        },
        "name": {
          "description": "A Web Scan name",
          "type": "string"
        },
        "assignedToId": {
          "format": "uuid",
          "description": "Unique identifier for the assigned user of a Web Scan",
          "type": "string"
        },
        "scanGroupId": {
          "format": "uuid",
          "description": "A Scan Group unique identifier",
          "type": "string"
        },
        "customConfiguration": {
          "$ref": "#/definitions/WebScanCustomConfigurationViewModel"
        },
        "scheduleId": {
          "format": "uuid",
          "description": "Web Scan schedule unique identifier",
          "type": "string"
        },
        "recording": {
          "$ref": "#/definitions/WebScanRecordingUploadViewModel"
        },
        "messageNotification": {
          "description": "A Web Scan message notification",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageNotificationViewModel"
          }
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "UpdateWebScanViewModel": {
      "description": "Parameters to create Web Scan.",
      "required": [
        "messageNotification"
      ],
      "type": "object",
      "properties": {
        "scanId": {
          "format": "uuid",
          "description": "A unique identifier for a Web Scan",
          "type": "string"
        },
        "scanTargetUrl": {
          "description": "Target URL for a Web Scan",
          "type": "string"
        },
        "name": {
          "description": "A Web Scan name",
          "type": "string"
        },
        "assignedToId": {
          "format": "uuid",
          "description": "Unique identifier for the assigned user of a Web Scan",
          "type": "string"
        },
        "scanGroupId": {
          "format": "uuid",
          "description": "A Scan Group unique identifier",
          "type": "string"
        },
        "customConfiguration": {
          "$ref": "#/definitions/WebScanCustomConfigurationViewModel"
        },
        "scheduleId": {
          "format": "uuid",
          "description": "Web Scan schedule unique identifier",
          "type": "string"
        },
        "recording": {
          "$ref": "#/definitions/WebScanRecordingUploadViewModel"
        },
        "messageNotification": {
          "description": "A Web Scan message notification",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageNotificationViewModel"
          }
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "WebScanRecordingItemViewModel": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "isLoginRequest": {
          "type": "boolean"
        },
        "requestHeaderMd5": {
          "type": "string"
        },
        "doNotAttack": {
          "type": "boolean"
        },
        "target": {
          "type": "string"
        },
        "port": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "requestHeader": {
          "type": "string"
        }
      }
    },
    "WebScanRecordingViewModel": {
      "type": "object",
      "properties": {
        "fileName": {
          "description": "Name of the recording file",
          "type": "string"
        },
        "createdOn": {
          "format": "date-time",
          "description": "Date of creating the recording file",
          "type": "string"
        },
        "modifiedOn": {
          "format": "date-time",
          "description": "Date of last modification of the recording file",
          "type": "string"
        },
        "requests": {
          "description": "Requests from a recording file",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebScanRecordingItemViewModel"
          }
        },
        "scanGroupId": {
          "format": "uuid",
          "description": "ID of the group to which the recording's scan belongs",
          "type": "string"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "UpdateWebScanRecordingItemViewModel": {
      "description": "Represents upadate Web Scan recording item.",
      "type": "object",
      "properties": {
        "requestHeaderMd5": {
          "description": "A request header",
          "type": "string"
        },
        "isLoginRequest": {
          "description": "A flag indicating a login request",
          "type": "boolean"
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "UpdateSystemScanViewModel": {
      "description": "Represents parameters to update existing system scan.",
      "required": [
        "messageNotification",
        "scanId"
      ],
      "type": "object",
      "properties": {
        "scanId": {
          "format": "uuid",
          "description": "A System Scan unique identifier",
          "type": "string"
        },
        "name": {
          "description": "A scan name",
          "type": "string"
        },
        "hostname": {
          "description": "A System Scan host name",
          "type": "string"
        },
        "virtualHostname": {
          "description": "A System Scan virtual host name",
          "type": "string"
        },
        "assignedTo": {
          "format": "uuid",
          "description": "A System Scan assigned user unique identifier",
          "type": "string"
        },
        "isCustomConfiguration": {
          "description": "A flag to indicate that the System Scan template settings are overridden",
          "type": "boolean"
        },
        "customConfiguration": {
          "$ref": "#/definitions/SystemScanCustomConfigurationViewModel"
        },
        "systemScanScheduleId": {
          "format": "uuid",
          "description": "Unique identifier for a System Scan schedule",
          "type": "string"
        },
        "messageNotification": {
          "description": "A message notification",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageNotificationViewModel"
          }
        },
        "macAddress": {
          "description": "A MAC address",
          "type": "string"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "ChangelogDataEntryViewModel": {
      "description": "View model representing single changelog entry.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of changelog entry",
          "type": "string"
        },
        "type": {
          "description": "Type of changelog entry",
          "type": "string"
        }
      }
    },
    "ChangelogDataViewModel": {
      "description": "View model representing changelog for particular version.",
      "type": "object",
      "properties": {
        "entries": {
          "description": "Specific changelog entries",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChangelogDataEntryViewModel"
          }
        },
        "title": {
          "description": "Title of changelog data. It means a new version",
          "type": "string"
        }
      }
    },
    "RssDataViewModel": {
      "type": "object",
      "properties": {
        "date": {
          "format": "date-time",
          "description": "A date and time",
          "type": "string"
        },
        "description": {
          "description": "A description",
          "type": "string"
        },
        "guid": {
          "description": "A unique identifier for RSS data",
          "type": "string"
        },
        "link": {
          "description": "A link",
          "type": "string"
        },
        "title": {
          "description": "A title",
          "type": "string"
        }
      }
    },
    "ScanGroupAssetMonitoringViewModel": {
      "description": "Asset monitoring view model used a scan group create and or a scan group update.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Asset monitoring unique identifier",
          "type": "string"
        },
        "discoveryScanId": {
          "format": "uuid",
          "description": "A unique identifier referring to discovery scan (required only in case of discovery scan asset monitoring)",
          "type": "string"
        },
        "query": {
          "description": "Internet discovery query (required only in case of internet discovery asset monitoring)",
          "type": "string"
        },
        "isActive": {
          "description": "A flag that indicates whether specific monitoring is active",
          "type": "boolean"
        },
        "trackSystemScans": {
          "description": "A flag that indicates if System Scans should be tracked",
          "type": "boolean"
        },
        "trackWebScans": {
          "description": "A flag that indicates whether Web Scans should be tracked",
          "type": "boolean"
        },
        "alwaysAddNewSystemScans": {
          "description": "A flag that indicates whether new System Scan should be added",
          "type": "boolean"
        },
        "alwaysAddNewWebScans": {
          "description": "A flag that indicates whether new Web Scan should be added",
          "type": "boolean"
        },
        "removeSystemScanWhenUndiscovered": {
          "description": "A flag that indicates whether undiscovered System Scan should be removed",
          "type": "boolean"
        },
        "removeWebScanWhenUndiscovered": {
          "description": "A flag that indicates whether undiscovered Web Scan should be removed",
          "type": "boolean"
        },
        "assetSourceType": {
          "$ref": "#/definitions/Radar.Model.Enums.AssetSourceTypes"
        },
        "trackedHttpPortRangeForWebScan": {
          "description": "An object that contains information about tracked ports for Web Scans (http service)",
          "type": "string"
        },
        "trackedHttpsPortRangeForWebScan": {
          "description": "An object that contains information about tracked ports for Web Scans (https service)",
          "type": "string"
        },
        "runSystemScanImmediatelyAfterAdd": {
          "description": "A flag that indicates whether the new detected System Scan should be started",
          "type": "boolean"
        },
        "runWebScanImmediatelyAfterAdd": {
          "description": "A flag that indicates whether the new detected Web Scan should be started",
          "type": "boolean"
        },
        "runSystemScanImmediatelyIfNewServicesDiscovered": {
          "description": "A flag that indicates whether the System Scan with new service detected should be started",
          "type": "boolean"
        },
        "scheduleId": {
          "format": "uuid",
          "description": "A unique identifier referring to Schedule",
          "type": "string"
        },
        "numberOfSystemScans": {
          "format": "int32",
          "description": "Number of added System Scan targets",
          "type": "integer"
        },
        "numberOfWebScans": {
          "format": "int32",
          "description": "Number of added Web Scan targets",
          "type": "integer"
        },
        "discoveryScan": {
          "$ref": "#/definitions/SimpleDiscoveryScanAssetMonitoringViewModel"
        },
        "internetDiscovery": {
          "$ref": "#/definitions/SimpleInternetDiscoveryAssetMonitoringViewModel"
        }
      }
    },
    "CreateScanGroupViewModel": {
      "description": "Parameters to create a new Scan Group.",
      "required": [
        "messageNotification",
        "responsiblePersonId",
        "scanGroupName"
      ],
      "type": "object",
      "properties": {
        "systemScanSettingsEnabled": {
          "description": "A scan type that will be enabled. Either SystemScanSettingsEnabled or WebScanSettingsEnabled may be enabled",
          "type": "boolean"
        },
        "webScanSettingsEnabled": {
          "description": "A scan type that will be enabled. Either SystemScanSettingsEnabled or WebScanSettingsEnabled may be enabled",
          "type": "boolean"
        },
        "scanGroupName": {
          "description": "A scan group name",
          "type": "string"
        },
        "scanTargets": {
          "description": "Scan targets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetScanViewModel"
          }
        },
        "scanDescription": {
          "description": "A scan description",
          "type": "string"
        },
        "responsiblePersonId": {
          "format": "uuid",
          "description": "An ID of a person in charge",
          "type": "string"
        },
        "maxSystemScans": {
          "format": "int32",
          "description": "Maximum System Scans",
          "type": "integer"
        },
        "maxWebScans": {
          "format": "int32",
          "description": "Maximum Web Scans",
          "type": "integer"
        },
        "systemScanTemplateId": {
          "format": "uuid",
          "description": "A unique identifier for System Scan template",
          "type": "string"
        },
        "webScanTemplateId": {
          "format": "uuid",
          "description": "A unique identifier for Web Scan template",
          "type": "string"
        },
        "systemScanNodeId": {
          "format": "uuid",
          "description": "A unique identifier for System Scan node",
          "type": "string"
        },
        "webScanNodeId": {
          "format": "uuid",
          "description": "A unique identifier for Web Scan node",
          "type": "string"
        },
        "systemScanScheduleId": {
          "format": "uuid",
          "description": "A unique identifier for System Scan node",
          "type": "string"
        },
        "webScanScheduleId": {
          "format": "uuid",
          "description": "Web Scan schedule unique identifier",
          "type": "string"
        },
        "messageNotification": {
          "description": "A message notification",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageNotificationViewModel"
          }
        },
        "tags": {
          "description": "Scan Group tags",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scanningMode": {
          "$ref": "#/definitions/ScanningMode"
        },
        "assetMonitoringConfigurations": {
          "description": "Asset monitoring configurations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScanGroupAssetMonitoringViewModel"
          }
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "ScanConfigViewModel": {
      "description": "Scan configuration.",
      "type": "object",
      "properties": {
        "compliantType": {
          "format": "int32",
          "description": "A compliant type",
          "type": "integer"
        },
        "config": {
          "description": "Configuration parameters in XML format",
          "type": "string"
        },
        "configType": {
          "format": "int32",
          "description": "A configuration type",
          "type": "integer"
        },
        "createdBy": {
          "format": "uuid",
          "type": "string"
        },
        "createdOn": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "description": "A configuration description",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "description": "A unique identifier for a scan configuration",
          "type": "string"
        },
        "isLocked": {
          "description": "A flag that indicates whether configuration is locked",
          "type": "boolean"
        },
        "modifiedBy": {
          "format": "uuid",
          "type": "string"
        },
        "modifiedOn": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "description": "A configuration name",
          "type": "string"
        }
      }
    },
    "ScheduleViewModel": {
      "description": "Represents Schedule view model.",
      "type": "object",
      "properties": {
        "baseTimeZone": {
          "description": "Base time zone",
          "type": "string"
        },
        "createdBy": {
          "format": "uuid",
          "description": "A unique identifier referring to user that created item",
          "type": "string"
        },
        "createdOn": {
          "format": "date-time",
          "description": "A date and time when this item was created",
          "type": "string"
        },
        "endSchedulePeriodDateTime": {
          "format": "date-time",
          "description": "Date and time when schedule period ends",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "description": "A unique identifier for Schedules",
          "type": "string"
        },
        "isActive": {
          "description": "A flag that indicates whether this item is active",
          "type": "boolean"
        },
        "modifiedBy": {
          "format": "uuid",
          "description": "A unique identifier referring to user that has modified user entry last time",
          "type": "string"
        },
        "modifiedOn": {
          "format": "date-time",
          "description": "A date and time when last time this item was modified",
          "type": "string"
        },
        "name": {
          "description": "A Schedule name. Max length 255 characters",
          "type": "string"
        },
        "nextRun": {
          "format": "date-time",
          "description": "Date and time when the Schedule will run next",
          "type": "string"
        }
      }
    },
    "ScanNodeGroupViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A unique identifier for Scan Node Groups",
          "type": "string"
        },
        "name": {
          "description": "A Scan Node Group name",
          "type": "string"
        }
      }
    },
    "ScanNodeSettingsViewModel": {
      "description": "Scan node.",
      "type": "object",
      "properties": {
        "build": {
          "format": "int32",
          "description": "A Scan Node build number",
          "type": "integer"
        },
        "createdBy": {
          "format": "uuid",
          "type": "string"
        },
        "createdOn": {
          "format": "date-time",
          "type": "string"
        },
        "currentLoad": {
          "format": "int32",
          "description": "A current load",
          "type": "integer"
        },
        "description": {
          "description": "A Scan Node description",
          "type": "string"
        },
        "domainName": {
          "description": "A Scan Node domain name",
          "type": "string"
        },
        "enableStateDiscovery": {
          "description": "A flag that indicates whether the discovery state is enabled",
          "type": "boolean"
        },
        "fullDescription": {
          "description": "A Scan Node full description",
          "type": "string"
        },
        "hardwareInfo": {
          "description": "A hardware info",
          "type": "string"
        },
        "hostIP": {
          "description": "A host IP",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "description": "A Scan Node unique identifier",
          "type": "string"
        },
        "installationActive": {
          "description": "A flag that indicates whether installation is active",
          "type": "boolean"
        },
        "isSharedNode": {
          "description": "A flag that indicates the status of shared mode",
          "type": "boolean"
        },
        "lastSeen": {
          "format": "date-time",
          "description": "A date and time when Scan Node was last seen",
          "type": "string"
        },
        "lastSeenWarnMinutes": {
          "format": "int32",
          "description": "A number of minutes after the warning should be set",
          "type": "integer"
        },
        "licenceCreateDateUTC": {
          "format": "date-time",
          "description": "Date and time (UTC) when license was created",
          "type": "string"
        },
        "licenceExpiryDateUTC": {
          "format": "date-time",
          "description": "Date and time (UTC) when license expires",
          "type": "string"
        },
        "licenceState": {
          "format": "int32",
          "description": "A license state",
          "type": "integer"
        },
        "major": {
          "format": "int32",
          "type": "integer"
        },
        "maxSimultaneousScans": {
          "format": "int32",
          "description": "A number of maximum simultaneous scans",
          "type": "integer"
        },
        "minor": {
          "format": "int32",
          "type": "integer"
        },
        "modifiedBy": {
          "format": "uuid",
          "type": "string"
        },
        "modifiedOn": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "description": "A Scan Node name",
          "type": "string"
        },
        "networkLocationType": {
          "format": "int32",
          "description": "A network location type",
          "type": "integer"
        },
        "nodeId": {
          "description": "A node identifier",
          "type": "string"
        },
        "nodeType": {
          "format": "int32",
          "description": "A Scan Node type",
          "type": "integer"
        },
        "password": {
          "description": "A password",
          "type": "string"
        },
        "port": {
          "description": "A port number",
          "type": "string"
        },
        "proto": {
          "type": "string"
        },
        "registered": {
          "description": "A flag that indicates whether Scan Node is registered",
          "type": "boolean"
        },
        "revision": {
          "format": "int32",
          "description": "A revision number",
          "type": "integer"
        },
        "scanNodeGroupId": {
          "format": "uuid",
          "description": "A unique identifier for Scan Node Groups",
          "type": "string"
        },
        "state": {
          "format": "int32",
          "description": "A Scan Node state",
          "type": "integer"
        },
        "username": {
          "description": "An user name",
          "type": "string"
        }
      }
    },
    "ScanGroupViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A Scan Group unique identifier",
          "type": "string"
        },
        "assignedTo": {
          "format": "uuid",
          "description": "A unique identifier of users to whom this Scan Group is assigned",
          "type": "string"
        },
        "assignedToUser": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "createdBy": {
          "format": "uuid",
          "type": "string"
        },
        "createdOn": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "description": "A description",
          "type": "string"
        },
        "discoveryConfigTemplate": {
          "format": "uuid",
          "description": "A unique identifier for discovery config templates",
          "type": "string"
        },
        "dynamicScope": {
          "description": "A flag that indicates dynamic scope",
          "type": "boolean"
        },
        "maxSSSimultaneousScans": {
          "format": "int32",
          "description": "A maximum number of simultaneous System Scans",
          "type": "integer"
        },
        "maxWSSimultaneousScans": {
          "format": "int32",
          "description": "A maximum number of simultaneous Web Scans",
          "type": "integer"
        },
        "modifiedBy": {
          "format": "uuid",
          "type": "string"
        },
        "modifiedOn": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "description": "A Scan Group name",
          "type": "string"
        },
        "scheduleId": {
          "format": "uuid",
          "description": "A unique identifier for Schedules",
          "type": "string"
        },
        "ssConfigTemplateId": {
          "format": "uuid",
          "description": "A unique identifier for System Scan config templates",
          "type": "string"
        },
        "ssScanNodeId": {
          "format": "uuid",
          "description": "A unique identifier for System Scan Scan Nodes",
          "type": "string"
        },
        "wsConfigTemplateId": {
          "format": "uuid",
          "description": "A unique identifier for Web Scan config templates",
          "type": "string"
        },
        "wsScanNodeId": {
          "format": "uuid",
          "description": "A unique identifier for Web Scan Scan Nodes",
          "type": "string"
        },
        "wsScheduleId": {
          "format": "uuid",
          "description": "A unique identifier for Web Scan Schedules",
          "type": "string"
        },
        "sscanConfig": {
          "$ref": "#/definitions/ScanConfigViewModel"
        },
        "wscanConfig": {
          "$ref": "#/definitions/ScanConfigViewModel"
        },
        "ssSchedule": {
          "$ref": "#/definitions/ScheduleViewModel"
        },
        "wsSchedule": {
          "$ref": "#/definitions/ScheduleViewModel"
        },
        "scanNodeGroup": {
          "$ref": "#/definitions/ScanNodeGroupViewModel"
        },
        "wsScanNode": {
          "$ref": "#/definitions/ScanNodeSettingsViewModel"
        },
        "tags": {
          "description": "A list that represents tags pinned to the scan",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagViewModel"
          }
        },
        "targetCreationScheduledInBackgroud": {
          "description": "Response flag that indicate if large list of targets has beed scheduled to backgroud",
          "type": "boolean"
        },
        "numberOfSystemScansAddedManually": {
          "format": "int32",
          "description": "Number of System Scan targets added manually",
          "type": "integer"
        },
        "numberOfWebScansAddedManually": {
          "format": "int32",
          "description": "Number of Web Scan targets added manually",
          "type": "integer"
        },
        "assetMonitoringConfigurations": {
          "description": "Asset monitoring configurations for both a Web Scan and a System Scan",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScanGroupAssetMonitoringViewModel"
          }
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "UpdateScanGroupViewModel": {
      "description": "Parameters for updating the existing Scan Group.",
      "required": [
        "groupId",
        "messageNotification",
        "responsiblePersonId",
        "scanGroupName"
      ],
      "type": "object",
      "properties": {
        "groupId": {
          "format": "uuid",
          "description": "A Scan Group unique identifier",
          "type": "string"
        },
        "overrideCustomSettings": {
          "description": "A flag that indicate that custom settings will be overridden.\r\nBy setting one of: OverrideSSSchedule, OverrideWSSchedule, OverrideSSTemplate, OverrideWSTemplate to true you are about to override custom settings of schedules and scan templates.\r\nIf you are SURE (!!) you want to override them with group settings set OverrideCustomSettings to true",
          "type": "boolean"
        },
        "overrideSSSchedule": {
          "description": "A flag that indicates that the System Scan schedule settings will be overridden",
          "type": "boolean"
        },
        "overrideWSSchedule": {
          "description": "A flag that indicates that the Web Scan schedule settings will be overridden",
          "type": "boolean"
        },
        "overrideSSTemplate": {
          "description": "A flag to indicate that the System Scan template settings are overridden",
          "type": "boolean"
        },
        "overrideWSTemplate": {
          "description": "A flag that indicates that the Web Scan template settings will be overridden",
          "type": "boolean"
        },
        "scanTargets": {
          "description": "Scan targets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetScanViewModel"
          }
        },
        "systemScanSettingsEnabled": {
          "description": "A scan type that will be enabled. Either SystemScanSettingsEnabled or WebScanSettingsEnabled may be enabled",
          "type": "boolean"
        },
        "webScanSettingsEnabled": {
          "description": "A scan type that will be enabled. Either SystemScanSettingsEnabled or WebScanSettingsEnabled may be enabled",
          "type": "boolean"
        },
        "scanGroupName": {
          "description": "A scan group name",
          "type": "string"
        },
        "scanDescription": {
          "description": "A scan description",
          "type": "string"
        },
        "responsiblePersonId": {
          "format": "uuid",
          "description": "An ID of a person in charge",
          "type": "string"
        },
        "maxSystemScans": {
          "format": "int32",
          "description": "Maximum System Scans",
          "type": "integer"
        },
        "maxWebScans": {
          "format": "int32",
          "description": "Maximum Web Scans",
          "type": "integer"
        },
        "systemScanTemplateId": {
          "format": "uuid",
          "description": "A unique identifier for System Scan template",
          "type": "string"
        },
        "webScanTemplateId": {
          "format": "uuid",
          "description": "A unique identifier for Web Scan template",
          "type": "string"
        },
        "systemScanNodeId": {
          "format": "uuid",
          "description": "A unique identifier for System Scan node",
          "type": "string"
        },
        "webScanNodeId": {
          "format": "uuid",
          "description": "A unique identifier for Web Scan node",
          "type": "string"
        },
        "systemScanScheduleId": {
          "format": "uuid",
          "description": "A unique identifier for System Scan node",
          "type": "string"
        },
        "webScanScheduleId": {
          "format": "uuid",
          "description": "Web Scan schedule unique identifier",
          "type": "string"
        },
        "messageNotification": {
          "description": "A message notification",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageNotificationViewModel"
          }
        },
        "tags": {
          "description": "Scan Group tags",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scanningMode": {
          "$ref": "#/definitions/ScanningMode"
        },
        "assetMonitoringConfigurations": {
          "description": "Asset monitoring configurations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScanGroupAssetMonitoringViewModel"
          }
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "GroupCountViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A unique identifier for Scan Node Groups",
          "type": "string"
        },
        "name": {
          "description": "A Scan Node name",
          "type": "string"
        },
        "systemScanTemplateId": {
          "format": "uuid",
          "description": "A unique identifier for System Scan template",
          "type": "string"
        },
        "webScanTemplateId": {
          "format": "uuid",
          "description": "A unique identifier for Web Scan template",
          "type": "string"
        },
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "numberOfRunningScans": {
          "format": "int64",
          "description": "A number of running scans",
          "type": "integer"
        },
        "numberOfQueuedScans": {
          "format": "int64",
          "description": "A number of queued scans",
          "type": "integer"
        },
        "hasAssetMonitoring": {
          "description": "Defined scan group has one or more asset monitorings",
          "type": "boolean"
        },
        "averageScanProgress": {
          "format": "double",
          "description": "Average scan progress",
          "type": "number"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "ScanNodeTypes": {
      "format": "int32",
      "description": "Represents Scan Node types possible values.",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "PoolingOnNode": {
      "format": "int32",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "ScanNodePoolingOnNodeViewModel": {
      "type": "object",
      "properties": {
        "hostIp": {
          "description": "Host or IP",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "description": "Port number",
          "type": "integer"
        },
        "domainName": {
          "description": "Domain name",
          "type": "string"
        },
        "userName": {
          "description": "User name",
          "type": "string"
        },
        "password": {
          "description": "Password for communication",
          "type": "string"
        },
        "clearPassword": {
          "description": "Should password clear",
          "type": "boolean"
        }
      }
    },
    "UpdateScanNodeSettingsViewModel": {
      "description": "Scan node settings for update.",
      "required": [
        "id",
        "scanNodeType"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Scan node id",
          "type": "string"
        },
        "name": {
          "description": "Scan node name",
          "type": "string"
        },
        "description": {
          "description": "Scan node description",
          "type": "string"
        },
        "nodeIdentifier": {
          "format": "uuid",
          "description": "Node unique identifier for scan node",
          "type": "string"
        },
        "scanNodeType": {
          "$ref": "#/definitions/ScanNodeTypes"
        },
        "lastSeenWarnMinutes": {
          "format": "int32",
          "description": "How many minutes a scan node is not available before a warning appears",
          "type": "integer"
        },
        "defaultLastSeenWarnMinutes": {
          "format": "int32",
          "description": "Default value how many minutes a scan node is not available before a warning appears",
          "type": "integer"
        },
        "isUsingDefaultLastSeenWarnMinutes": {
          "description": "Is using deafult setting for condition to show warning about last seen scan node",
          "type": "boolean"
        },
        "poolingOnNode": {
          "$ref": "#/definitions/PoolingOnNode"
        },
        "poolingOnNodeViewModel": {
          "$ref": "#/definitions/ScanNodePoolingOnNodeViewModel"
        }
      }
    },
    "CreateScanNodeSettingsViewModel": {
      "description": "Scan node settings for creating.",
      "required": [
        "scanNodeType"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Scan node name",
          "type": "string"
        },
        "description": {
          "description": "Scan node description",
          "type": "string"
        },
        "nodeIdentifier": {
          "format": "uuid",
          "description": "Node unique identifier for scan node",
          "type": "string"
        },
        "scanNodeType": {
          "$ref": "#/definitions/ScanNodeTypes"
        },
        "lastSeenWarnMinutes": {
          "format": "int32",
          "description": "How many minutes a scan node is not available before a warning appears",
          "type": "integer"
        },
        "defaultLastSeenWarnMinutes": {
          "format": "int32",
          "description": "Default value how many minutes a scan node is not available before a warning appears",
          "type": "integer"
        },
        "isUsingDefaultLastSeenWarnMinutes": {
          "description": "Is using deafult setting for condition to show warning about last seen scan node",
          "type": "boolean"
        },
        "poolingOnNode": {
          "$ref": "#/definitions/PoolingOnNode"
        },
        "poolingOnNodeViewModel": {
          "$ref": "#/definitions/ScanNodePoolingOnNodeViewModel"
        }
      }
    },
    "StatsModel": {
      "type": "object",
      "properties": {
        "currentLoad": {
          "format": "int32",
          "type": "integer"
        },
        "maxLoad": {
          "format": "int32",
          "type": "integer"
        },
        "totalScansPerformed": {
          "format": "int32",
          "type": "integer"
        },
        "engineLastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "scanNodeVersion": {
          "type": "string"
        },
        "controllerLastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "engineRevisionNumber": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "ScanNodeVirtualDetailsViewModel": {
      "description": "Details of scan node.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Scan Node unique identifier",
          "type": "string"
        },
        "name": {
          "description": "Scan node name",
          "type": "string"
        },
        "descriptions": {
          "description": "Scan node description",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scanStatus": {
          "$ref": "#/definitions/StatsModel"
        },
        "currentLoad": {
          "format": "int32",
          "description": "Current load thread for scan node",
          "type": "integer"
        },
        "maxSimultaneousScans": {
          "format": "int32",
          "description": "Max. of simultaneous scans",
          "type": "integer"
        },
        "engineLastUpdate": {
          "format": "date-time",
          "description": "Time of last updated engine",
          "type": "string"
        },
        "engineLastAvailableRevisionNumber": {
          "description": "Scan node engine last available revision number",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "description": "Time of last seen scan node",
          "type": "string"
        },
        "nodeType": {
          "$ref": "#/definitions/ScanNodeTypes"
        },
        "isSharedNode": {
          "description": "Information about shared scan node",
          "type": "boolean"
        },
        "isActive": {
          "description": "Information about active scan node",
          "type": "boolean"
        },
        "showLastSeenWarning": {
          "description": "Show the last warning seen",
          "type": "boolean"
        },
        "isDefaultShowLastSeenWarning": {
          "description": "Information about using default setting for last seen warning",
          "type": "boolean"
        },
        "showEngineLastUpdateWarning": {
          "description": "Show the warning for the last updated engine ",
          "type": "boolean"
        },
        "countPhysicalScanNode": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "NodeWarningType": {
      "format": "int32",
      "description": "A list of scan node warnings.",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "type": "integer"
    },
    "ScanNodeDetailsViewModel": {
      "description": "Scan node data.",
      "type": "object",
      "properties": {
        "currentLoad": {
          "description": "Current load thread for scan node",
          "type": "string"
        },
        "totalScansPerformed": {
          "description": "Total scans performed",
          "type": "string"
        },
        "cpuLoad": {
          "description": "CPU load",
          "type": "string"
        },
        "ramUsage": {
          "description": "RAM usage",
          "type": "string"
        },
        "uptime": {
          "description": "Uptime",
          "type": "string"
        },
        "engineLastUpdate": {
          "format": "date-time",
          "description": "Engine last update",
          "type": "string"
        },
        "engineRevisionNumber": {
          "description": "Engine revision number",
          "type": "string"
        },
        "systemDriveFreeDiskSpace": {
          "description": "System drive free disk space. Only for System Scans.\r\nThis property is not propagated in response when null",
          "type": "string"
        },
        "scanNodeAgentDriveFreeDiskSpace": {
          "description": "Free disk space for the scan node agent drive (only for System Scans)",
          "type": "string"
        },
        "scanNodeAgentVersion": {
          "description": "Scan node agent version",
          "type": "string"
        },
        "scanNodeAgentLastUpdate": {
          "format": "date-time",
          "description": "Scan node agent last update",
          "type": "string"
        },
        "freeDiskSpace": {
          "description": "Free disk space. Only for discovery scans",
          "type": "string"
        },
        "privateIp": {
          "description": "Private network Ip address",
          "type": "string"
        },
        "publicIp": {
          "description": "Public network Ip address",
          "type": "string"
        },
        "warnings": {
          "description": "Warnigns reported by the scan node",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeWarningType"
          }
        },
        "licenseExpirationDate": {
          "format": "date-time",
          "description": "When license expires",
          "type": "string"
        },
        "licenseActive": {
          "description": "Current licence state",
          "type": "boolean"
        },
        "nodeId": {
          "description": "A scan node identificator (the ID that is present in the scan node license file and Radar Update Service)",
          "type": "string"
        }
      }
    },
    "RequestScanNodeLicenseViewModel": {
      "description": "Scan node basic data to request license.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Scan node name",
          "type": "string"
        },
        "description": {
          "description": "Scan node description",
          "type": "string"
        }
      }
    },
    "InstallerUrlViewModel": {
      "description": "View model used to download the installation file.",
      "type": "object",
      "properties": {
        "os": {
          "description": "Operating system name for which link is provided for",
          "type": "string"
        },
        "downloadLink": {
          "format": "uri",
          "description": "Url to download installer",
          "type": "string"
        }
      }
    },
    "ScanNodeLicenseOrderResponseViewModel": {
      "description": "Represents Scan Node license registration response.",
      "type": "object",
      "properties": {
        "downloadLink": {
          "format": "uri",
          "description": "Location to Scan Node license",
          "type": "string"
        },
        "installerDownloadLinks": {
          "description": "Location to Scan Node installation packages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstallerUrlViewModel"
          }
        }
      }
    },
    "ScanNodeLicensesViewModel": {
      "description": "An entity that provides information about scan node licenses for specified organization",
      "type": "object",
      "properties": {
        "activeScanNodeLicenses": {
          "format": "int32",
          "description": "Number of Scan Node Agent licenses, that are already utilized in this organization's subscription",
          "type": "integer"
        },
        "scanNodeLicensesLimit": {
          "format": "int32",
          "description": "Number of Scan Node Agent licenses limit for this organization. Null if there's no information",
          "type": "integer"
        }
      }
    },
    "BaseFilterModel": {
      "type": "object",
      "properties": {
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "ScanNodeViewModel": {
      "description": "Physical or virtual scan node.",
      "type": "object",
      "properties": {
        "isVirtualScanNode": {
          "description": "Indicates whether this is a virtual scan node",
          "type": "boolean"
        },
        "countPhysicalScanNode": {
          "format": "int32",
          "description": "Counter physical scan node",
          "type": "integer"
        },
        "warnings": {
          "description": "Warnigns reported by the scan node",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeWarningType"
          }
        },
        "licenseExpirationDate": {
          "format": "date-time",
          "description": "When license expires",
          "type": "string"
        },
        "licenseActive": {
          "description": "Current licence state",
          "type": "boolean"
        },
        "childItems": {
          "description": "Physical scan nodes in the virtual scan group",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScanNodeVirtualDetailsViewModel"
          }
        },
        "id": {
          "format": "uuid",
          "description": "Scan Node unique identifier",
          "type": "string"
        },
        "name": {
          "description": "Scan node name",
          "type": "string"
        },
        "descriptions": {
          "description": "Scan node description",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scanStatus": {
          "$ref": "#/definitions/StatsModel"
        },
        "currentLoad": {
          "format": "int32",
          "description": "Current load thread for scan node",
          "type": "integer"
        },
        "maxSimultaneousScans": {
          "format": "int32",
          "description": "Max. of simultaneous scans",
          "type": "integer"
        },
        "engineLastUpdate": {
          "format": "date-time",
          "description": "Time of last updated engine",
          "type": "string"
        },
        "engineLastAvailableRevisionNumber": {
          "description": "Scan node engine last available revision number",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "description": "Time of last seen scan node",
          "type": "string"
        },
        "nodeType": {
          "$ref": "#/definitions/ScanNodeTypes"
        },
        "isSharedNode": {
          "description": "Information about shared scan node",
          "type": "boolean"
        },
        "isActive": {
          "description": "Information about active scan node",
          "type": "boolean"
        },
        "showLastSeenWarning": {
          "description": "Show the last warning seen",
          "type": "boolean"
        },
        "isDefaultShowLastSeenWarning": {
          "description": "Information about using default setting for last seen warning",
          "type": "boolean"
        },
        "showEngineLastUpdateWarning": {
          "description": "Show the warning for the last updated engine ",
          "type": "boolean"
        }
      }
    },
    "PagedData[ScanNodeViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScanNodeViewModel"
          }
        }
      }
    },
    "DiscoveryScanModeEnum": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4
      ],
      "type": "integer"
    },
    "NumberOfThreadsEnum": {
      "format": "int32",
      "enum": [
        1,
        2,
        4,
        8,
        16,
        24,
        32
      ],
      "type": "integer"
    },
    "DiscoveryScanCustomConfigurationViewModel": {
      "type": "object",
      "properties": {
        "scanMode": {
          "$ref": "#/definitions/DiscoveryScanModeEnum"
        },
        "tcpPortRange": {
          "description": "A TCP port range",
          "type": "string"
        },
        "udpPortRange": {
          "description": "A UDP port range",
          "type": "string"
        },
        "detectOSEnabled": {
          "description": "A flag that indicates if operating system detection is enabled",
          "type": "boolean"
        },
        "proceedIfNoPing": {
          "description": "A flag that indicates if \"proceed if no ping\" is in use",
          "type": "boolean"
        },
        "scanIntensity": {
          "$ref": "#/definitions/ScanningPerformances"
        },
        "multithreadedMode": {
          "$ref": "#/definitions/NumberOfThreadsEnum"
        },
        "doubleModeEnabled": {
          "description": "A flag that indicates if double mode is enabled",
          "type": "boolean"
        },
        "fragmentScanModeEnabled": {
          "description": "A flag that indicated if fragment scan mode is enabled",
          "type": "boolean"
        },
        "debugMode": {
          "description": "A flag that indicates if debug mode is enabled",
          "default": false,
          "type": "boolean"
        },
        "verboseMode": {
          "description": "A flag that indicates if verbose mode is enabled",
          "default": false,
          "type": "boolean"
        }
      }
    },
    "CreateDiscoveryScanTemplateViewModel": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "A discovery scan template name",
          "type": "string"
        },
        "description": {
          "description": "A discovery scan template description",
          "type": "string"
        },
        "configuration": {
          "$ref": "#/definitions/DiscoveryScanCustomConfigurationViewModel"
        }
      }
    },
    "UpdateDiscoveryScanTemplateViewModel": {
      "required": [
        "id",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A discovery scan template unique identifier",
          "type": "string"
        },
        "name": {
          "description": "A discovery scan template name",
          "type": "string"
        },
        "description": {
          "description": "A discovery scan template description",
          "type": "string"
        },
        "configuration": {
          "$ref": "#/definitions/DiscoveryScanCustomConfigurationViewModel"
        }
      }
    },
    "DiscoveryTemplatesListDetailsViewModel": {
      "type": "object",
      "properties": {
        "assignedDiscoveryScans": {
          "description": "List of assigned discovery scans",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        },
        "configuration": {
          "$ref": "#/definitions/DiscoveryScanCustomConfigurationViewModel"
        },
        "id": {
          "format": "uuid",
          "description": "A discovery scan template unique identifier",
          "type": "string"
        },
        "name": {
          "description": "A discovery scan template name",
          "type": "string"
        },
        "description": {
          "description": "A discovery scan template description",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/ScanType"
        },
        "assignedScans": {
          "format": "int32",
          "description": "Get or set number of assigned scan groups",
          "type": "integer"
        },
        "modifiedOn": {
          "format": "date-time",
          "description": "Get or set created scan template modification date",
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "description": "Get or set the creation date for a created discovery scan template",
          "type": "string"
        },
        "isLocked": {
          "description": "Get or set a value indicating whether the discovery scan template is locked",
          "type": "boolean"
        }
      }
    },
    "BatchScanTemplatesViewModel": {
      "type": "object",
      "properties": {
        "scanTemplatesIds": {
          "description": "A list of unique identifiers for scan template IDs to change state",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "BatchConfigurationScanTemplatesViewModel": {
      "type": "object",
      "properties": {
        "configuration": {
          "description": "A scan template configuration XML",
          "type": "string"
        },
        "scanTemplatesIds": {
          "description": "A list of unique identifiers for scan template IDs to change state",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "ConfigType": {
      "format": "int32",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "DiscoveryScanTemplatesFilterModel": {
      "type": "object",
      "properties": {
        "configTypes": {
          "description": "A list of config types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigType"
          }
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "DiscoveryScanTemplatesListViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A discovery scan template unique identifier",
          "type": "string"
        },
        "name": {
          "description": "A discovery scan template name",
          "type": "string"
        },
        "description": {
          "description": "A discovery scan template description",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/ScanType"
        },
        "assignedScans": {
          "format": "int32",
          "description": "Get or set number of assigned scan groups",
          "type": "integer"
        },
        "modifiedOn": {
          "format": "date-time",
          "description": "Get or set created scan template modification date",
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "description": "Get or set the creation date for a created discovery scan template",
          "type": "string"
        },
        "isLocked": {
          "description": "Get or set a value indicating whether the discovery scan template is locked",
          "type": "boolean"
        }
      }
    },
    "PagedData[DiscoveryScanTemplatesListViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscoveryScanTemplatesListViewModel"
          }
        }
      }
    },
    "ScanTemplatesListDetailsViewModel[SystemScanCustomConfigurationViewModel]": {
      "type": "object",
      "properties": {
        "assignedScanGroupsList": {
          "description": "List of assigned scan groups",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        },
        "notAccessibleScanGroups": {
          "format": "int32",
          "description": "Number of scan groups without rights",
          "type": "integer"
        },
        "customConfiguration": {
          "$ref": "#/definitions/SystemScanCustomConfigurationViewModel"
        },
        "id": {
          "format": "uuid",
          "description": "A unique identifier for a scan template",
          "type": "string"
        },
        "name": {
          "description": "A scan template name",
          "type": "string"
        },
        "description": {
          "description": "A scan template description",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/ScanType"
        },
        "assignedGroups": {
          "format": "int32",
          "description": "Get or set number of assigned scan groups",
          "type": "integer"
        },
        "modifiedOn": {
          "format": "date-time",
          "description": "Get or set created scan template modification date",
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "description": "Get or set the creation date for a created scan template",
          "type": "string"
        },
        "isLocked": {
          "description": "Get or set a value indicating whether the scan template is locked",
          "type": "boolean"
        }
      }
    },
    "VulnerabilityScanTemplatesFilterModel": {
      "type": "object",
      "properties": {
        "configTypes": {
          "description": "A list of config types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigType"
          }
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "ScanTemplatesListViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A unique identifier for a scan template",
          "type": "string"
        },
        "name": {
          "description": "A scan template name",
          "type": "string"
        },
        "description": {
          "description": "A scan template description",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/ScanType"
        },
        "assignedGroups": {
          "format": "int32",
          "description": "Get or set number of assigned scan groups",
          "type": "integer"
        },
        "modifiedOn": {
          "format": "date-time",
          "description": "Get or set created scan template modification date",
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "description": "Get or set the creation date for a created scan template",
          "type": "string"
        },
        "isLocked": {
          "description": "Get or set a value indicating whether the scan template is locked",
          "type": "boolean"
        }
      }
    },
    "PagedData[ScanTemplatesListViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScanTemplatesListViewModel"
          }
        }
      }
    },
    "RecurrenceType": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "type": "integer"
    },
    "MonthState": {
      "format": "int32",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "DayOfWeek": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "type": "integer"
    },
    "The": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "type": "integer"
    },
    "TheQuarterly": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "SchedulingTemplatesViewModel": {
      "required": [
        "baseTimeZone",
        "hour",
        "minute",
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Unique identifier of a scheduling template",
          "type": "string"
        },
        "name": {
          "description": "A scheduling template name",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/RecurrenceType"
        },
        "monthState": {
          "$ref": "#/definitions/MonthState"
        },
        "scanRunCount": {
          "format": "int32",
          "description": "A number that indicates how many times this has run",
          "type": "integer"
        },
        "runIndefinitely": {
          "description": "A flag that indicates run indefinitely",
          "type": "boolean"
        },
        "activePeriodInMinutes": {
          "format": "int32",
          "description": "Number of minutes describes an active period",
          "type": "integer"
        },
        "isExpired": {
          "description": "A flag that indicates if it is expired",
          "type": "boolean"
        },
        "onDayOfWeek": {
          "$ref": "#/definitions/DayOfWeek"
        },
        "iteration": {
          "format": "int32",
          "description": "A number of iteration",
          "type": "integer"
        },
        "dayNumber": {
          "format": "int32",
          "description": "Day and number of runs",
          "type": "integer"
        },
        "the": {
          "$ref": "#/definitions/The"
        },
        "theQuarterly": {
          "$ref": "#/definitions/TheQuarterly"
        },
        "nextRun": {
          "format": "date-time",
          "description": "Date and time of the next run",
          "type": "string"
        },
        "baseTimeZone": {
          "description": "Base time zone",
          "type": "string"
        },
        "baseTimeZoneUTCOffset": {
          "description": "Base time zone UTC offset",
          "type": "string"
        },
        "endSchedulePeriodDateTime": {
          "format": "date-time",
          "description": "A date and time when schedule period end",
          "type": "string"
        },
        "minute": {
          "format": "int32",
          "description": "A minute",
          "type": "integer"
        },
        "hour": {
          "format": "int32",
          "description": "An hour",
          "type": "integer"
        },
        "groupAssociationsCount": {
          "format": "int32",
          "description": "A number that indicates how many Scan Groups are associated with this scheduling template",
          "type": "integer"
        },
        "systemScanAssociationsCount": {
          "format": "int32",
          "description": "A number that indicates how many System Scans are associated with this scheduling template",
          "type": "integer"
        },
        "webScanAssociationsCount": {
          "format": "int32",
          "description": "A number that indicates how many Web Scans are associated with this scheduling template",
          "type": "integer"
        },
        "networkAssociationsCount": {
          "format": "int32",
          "description": "A number that indicates how many discovery scans are associated with this scheduling template",
          "type": "integer"
        },
        "groupAssociationsNameList": {
          "description": "A list of Scan Groups associated with this scheduling template",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        },
        "systemScanAssociationsNameList": {
          "description": "A list of System Scans associated with this scheduling template",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "webScanAssociationsNameList": {
          "description": "A list of Web Scans associated with this scheduling template",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "networkAssociationsNameList": {
          "description": "A list of discovery scans associated with this scheduling template",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BatchSchedulingTemplatesViewModel": {
      "type": "object",
      "properties": {
        "schedulingTemplatesIds": {
          "description": "A list of unique identifiers of scheduling template IDs to modify",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "SystemTimeZonesViewModel": {
      "description": "System time zone view model.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A time zone identifier",
          "type": "string"
        },
        "displayName": {
          "description": "A display name",
          "type": "string"
        },
        "baseUtcOffset": {
          "description": "A base UTC offset",
          "type": "string"
        }
      }
    },
    "PagedData[SchedulingTemplatesViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchedulingTemplatesViewModel"
          }
        }
      }
    },
    "SummaryReportsListViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A unique identifier for a summary report",
          "type": "string"
        },
        "reportName": {
          "description": "A report name",
          "type": "string"
        },
        "author": {
          "description": "A report author",
          "type": "string"
        },
        "createdOn": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "description": "A summary report description",
          "type": "string"
        },
        "reportState": {
          "format": "int32",
          "description": "State of the summary report",
          "type": "integer"
        },
        "templateName": {
          "description": "A template name for a summary report",
          "type": "string"
        },
        "templateId": {
          "format": "uuid",
          "description": "A unique identifier for a report template",
          "type": "string"
        }
      }
    },
    "SummaryReportRegenerateViewModel": {
      "description": "Summary report regenerate parameters.",
      "required": [
        "baseReportId",
        "newReportName"
      ],
      "type": "object",
      "properties": {
        "baseReportId": {
          "format": "uuid",
          "description": "A unique identifier for a base report",
          "type": "string"
        },
        "newReportName": {
          "description": "A new summary report name",
          "type": "string"
        },
        "newReportDescription": {
          "description": "A description of the new summary report",
          "type": "string"
        }
      }
    },
    "SubmitSummaryReportRequestViewModel": {
      "description": "Parameters to request a summary report download.",
      "type": "object",
      "properties": {
        "reportIds": {
          "description": "List of a report unique identifiers to be generated",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "reportType": {
          "description": "Report type to be generated",
          "type": "string"
        },
        "fileType": {
          "description": "File type (Word, Excel etc.)",
          "type": "string"
        },
        "localization": {
          "$ref": "#/definitions/LocalizationEnum"
        }
      }
    },
    "SummaryReportRequestViewModel": {
      "description": "Information about summary report download request.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Summary report request unique identifier",
          "type": "string"
        },
        "tempFileId": {
          "format": "uuid",
          "description": "Generated file unique identifier. Null when the file is still being generated it",
          "type": "string"
        },
        "isFailed": {
          "description": "Query if the request failed to execute",
          "type": "boolean"
        }
      }
    },
    "SummaryReportViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A unique identifier for a summary report",
          "type": "string"
        },
        "createdBy": {
          "format": "uuid",
          "type": "string"
        },
        "createdOn": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "description": "A description",
          "type": "string"
        },
        "modifiedBy": {
          "format": "uuid",
          "type": "string"
        },
        "modifiedOn": {
          "format": "date-time",
          "type": "string"
        },
        "parentId": {
          "format": "uuid",
          "description": "A unique identifier of the parent report",
          "type": "string"
        },
        "name": {
          "description": "Summary report name",
          "type": "string"
        },
        "reportState": {
          "format": "int32",
          "description": "A report state",
          "type": "integer"
        }
      }
    },
    "SummaryReportSaveOptionEnum": {
      "format": "int32",
      "description": "Summar report save options.",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "ContactInformation": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Address",
          "type": "string"
        },
        "city": {
          "description": "City",
          "type": "string"
        },
        "company": {
          "description": "Company name",
          "type": "string"
        },
        "contact": {
          "description": "Contact person",
          "type": "string"
        },
        "country": {
          "description": "Country",
          "type": "string"
        },
        "email": {
          "description": "Email address",
          "type": "string"
        },
        "province": {
          "description": "Province",
          "type": "string"
        },
        "telephone": {
          "description": "Contact telephone number",
          "type": "string"
        },
        "title": {
          "description": "Contact person title",
          "type": "string"
        },
        "url": {
          "description": "URL",
          "type": "string"
        },
        "zip": {
          "description": "ZIP code",
          "type": "string"
        }
      }
    },
    "SummaryReportFilterScans": {
      "description": "Scan filter for summary report.",
      "type": "object",
      "properties": {
        "scanId": {
          "format": "uuid",
          "type": "string"
        },
        "groupId": {
          "format": "uuid",
          "description": "A Scan Group unique identifier",
          "type": "string"
        },
        "scanType": {
          "$ref": "#/definitions/ScanType"
        }
      }
    },
    "TagView": {
      "type": "object",
      "properties": {
        "manual": {
          "description": "A flag that indicates if a tag has been added manually",
          "type": "boolean"
        },
        "friendlyName": {
          "description": "Friendly name for a tag",
          "type": "string"
        },
        "component": {
          "description": "A component where a tag is connected to. For example, ScanGroup",
          "type": "string"
        },
        "type": {
          "description": "Tag type",
          "type": "string"
        },
        "source": {
          "description": "Source",
          "type": "string"
        },
        "technicalName": {
          "description": "Technical name for a tag",
          "type": "string"
        }
      }
    },
    "TagOperator": {
      "format": "int32",
      "description": "A tag operators.",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "SummaryReportFilter": {
      "description": "Summary report filter.",
      "type": "object",
      "properties": {
        "includeHighLevel": {
          "description": "A flag that indicates if high level severity vulnerabilities are included",
          "type": "boolean"
        },
        "includeMediumLevel": {
          "description": "A flag that indicates if medium level severity vulnerabilities will be included",
          "type": "boolean"
        },
        "includeLowLevel": {
          "description": "A flag that indicates if low level severity vulnerabilities are included",
          "type": "boolean"
        },
        "includeInfoLevel": {
          "description": "A flag that indicates if informational vulnerabilities are included",
          "type": "boolean"
        },
        "includeStatuses": {
          "description": "A dictionary of vulnerability statuses",
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "showStatusNamesOnReport": {
          "description": "A flag that indicates if a status name appears",
          "type": "boolean"
        },
        "showAuditorNotes": {
          "description": "A flag that indicates if auditor notes appear",
          "type": "boolean"
        },
        "showTags": {
          "description": "A flag that indicates if show tags",
          "type": "boolean"
        },
        "showChangeIndicator": {
          "description": "A flag that indicates if show change indicator",
          "type": "boolean"
        },
        "includePotential": {
          "description": "A flag that indicates if include potential vulnerabilities",
          "type": "boolean"
        },
        "includeExploitable": {
          "description": "A flag that indicates whether to include vulnerabilities where a public exploit is available",
          "type": "boolean"
        },
        "includeImages": {
          "description": "A flag that indicates if include images",
          "type": "boolean"
        },
        "includeExternalReferences": {
          "description": "A flag that indicates if external references are included",
          "type": "boolean"
        },
        "customer": {
          "$ref": "#/definitions/ContactInformation"
        },
        "vendor": {
          "$ref": "#/definitions/ContactInformation"
        },
        "includeLastReportsForScans": {
          "description": "A list of scans whose last reports will be included in report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SummaryReportFilterScans"
          }
        },
        "includeLastReportsForScanGroups": {
          "description": "A list of Scan Groups that have their latest reports included in the report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SummaryReportFilterScans"
          }
        },
        "includeAssets": {
          "description": "A list of assets ids to include in report",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "tags": {
          "description": "List of tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagView"
          }
        },
        "tagOperator": {
          "$ref": "#/definitions/TagOperator"
        },
        "tagsScan": {
          "description": "A list of TagView objects",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagView"
          }
        },
        "tagOperatorScan": {
          "$ref": "#/definitions/TagOperator"
        },
        "isDynamicScope": {
          "description": "A dynamic summary report means all scans from specific scan groups",
          "type": "boolean",
          "readOnly": true
        },
        "responsiblePeopleForVulns": {
          "description": "A list of responsible people for vulnerabilities",
          "uniqueItems": true,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "showResponsiblePerson": {
          "description": "A flag that indicates if a responsible person is shown",
          "type": "boolean"
        },
        "includeVulnsFromAllFamilies": {
          "description": "A flag that indicates if include vulnerabiities from all families",
          "type": "boolean"
        },
        "includeVulnsFamily": {
          "description": "A list of vulnerability families that must be included",
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeVulnsFromAllWsCategories": {
          "description": "A flag that indicates if include vulnerabilites of all Web Scan categories",
          "type": "boolean"
        },
        "includeVulnsWsCategory": {
          "description": "A list of Web Scan vulnerabilites categories to include",
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeLocalExploitableVulns": {
          "description": "A flag that indicates if include local exploitable vulnerabilities",
          "type": "boolean"
        },
        "includeRemoteExploitableVulns": {
          "description": "A flag that indicates if include remote exploitable vulnerabilites",
          "type": "boolean"
        },
        "includeAllVulns": {
          "description": "A flag that indicates if include all vulnerabilities",
          "type": "boolean"
        },
        "includeScanTypeList": {
          "description": "A list with scan types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScanType"
          },
          "readOnly": true
        },
        "includeSystemScans": {
          "type": "boolean",
          "readOnly": true
        },
        "includeWebScans": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "SummaryReportUpdateViewModel": {
      "description": "A summary report update parameters.",
      "required": [
        "reportId",
        "reportName",
        "summaryReportFilter"
      ],
      "type": "object",
      "properties": {
        "reportId": {
          "format": "uuid",
          "description": "A unique identifier for a summary report",
          "type": "string"
        },
        "parentId": {
          "format": "uuid",
          "description": "Summary report for a parent unique identifier",
          "type": "string"
        },
        "summaryReportSaveOption": {
          "$ref": "#/definitions/SummaryReportSaveOptionEnum"
        },
        "summaryReportFilter": {
          "$ref": "#/definitions/SummaryReportFilter"
        },
        "reportName": {
          "description": "Summary report name",
          "type": "string"
        },
        "reportDescription": {
          "description": "A summary report description",
          "type": "string"
        }
      }
    },
    "SummaryReportCreateViewModel": {
      "description": "Summary report create parameters.",
      "required": [
        "reportName",
        "summaryReportFilter"
      ],
      "type": "object",
      "properties": {
        "summaryReportSaveOption": {
          "$ref": "#/definitions/SummaryReportSaveOptionEnum"
        },
        "summaryReportFilter": {
          "$ref": "#/definitions/SummaryReportFilter"
        },
        "reportName": {
          "description": "Summary report name",
          "type": "string"
        },
        "reportDescription": {
          "description": "A summary report description",
          "type": "string"
        }
      }
    },
    "FilteredScansCountViewModel": {
      "type": "object",
      "properties": {
        "scansCount": {
          "format": "int32",
          "type": "integer"
        },
        "assetsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SummaryReportsFilterModel": {
      "type": "object",
      "properties": {
        "author": {
          "format": "uuid",
          "description": "The author's unique identifier",
          "type": "string"
        },
        "reportName": {
          "description": "A report name",
          "type": "string"
        },
        "description": {
          "description": "A report description",
          "type": "string"
        },
        "parentName": {
          "description": "The name of the parent report",
          "type": "string"
        },
        "childrenName": {
          "description": "The name of the child report",
          "type": "string"
        },
        "hasNoSortingField": {
          "description": "A flag that indicates no sorting field. It is set to true",
          "type": "boolean",
          "readOnly": true
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "PagedData[SummaryReportsListViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SummaryReportsListViewModel"
          }
        }
      }
    },
    "SummaryReportTemplatesListViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A unique identifier for a summary report template",
          "type": "string"
        },
        "reportName": {
          "description": "A template name for a summary report ",
          "type": "string"
        },
        "author": {
          "description": "Author template for a summary report",
          "type": "string"
        },
        "createdOn": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "description": "A description",
          "type": "string"
        },
        "reportsBasedOnTemplateCount": {
          "format": "int32",
          "description": "A counter for how many reports are based on a template",
          "type": "integer"
        },
        "reportsBasedOnTemplate": {
          "description": "A list with reports based on this template",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "PagedData[SummaryReportTemplatesListViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SummaryReportTemplatesListViewModel"
          }
        }
      }
    },
    "VulnerabilitiesListWebScanCategoriesDTO": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A vulnerability unique identifier",
          "type": "string"
        },
        "pluginId": {
          "format": "int32",
          "description": "ID of a plug-in that discovers this vulnerability",
          "type": "integer"
        },
        "manualId": {
          "format": "uuid",
          "description": "ID for a manually added vulnerability",
          "type": "string"
        },
        "variant": {
          "description": "Vulnerability class variant. Used in Web Scans",
          "type": "string"
        }
      }
    },
    "TargetRelatedBasicFieldEnum": {
      "format": "int32",
      "description": "Type of fields for affected hosts on which filter can be set.",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "type": "integer"
    },
    "FilterBasicField[TargetRelatedBasicFieldEnum]": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/TargetRelatedBasicFieldEnum"
        },
        "operator": {
          "$ref": "#/definitions/Operator"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "WebScanVulnerabilitiesSearchKeyViewModel": {
      "type": "object",
      "properties": {
        "categoryId": {
          "format": "uuid",
          "description": "A unique identifier for Web Scan category",
          "type": "string"
        },
        "classVariant": {
          "description": "A class variant",
          "type": "string"
        },
        "manualId": {
          "format": "uuid",
          "description": "A unique identifier for manual vulnerability",
          "type": "string"
        },
        "pluginId": {
          "format": "int32",
          "description": "A plugin identifier",
          "type": "integer"
        },
        "useOnlyCategory": {
          "description": "A flag that indicates to use only category unique identifier",
          "type": "boolean"
        },
        "vulnerabilityInstanceIds": {
          "description": "Optional additionOptional additional filter criteria to limit specific instances",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "VulnerabilityBasicFieldEnum": {
      "format": "int32",
      "description": "Type of vulnerability fields on which filter can be set.",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "FilterBasicField[VulnerabilityBasicFieldEnum]": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/VulnerabilityBasicFieldEnum"
        },
        "operator": {
          "$ref": "#/definitions/Operator"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "VulnerabilityFilterViewModel": {
      "type": "object",
      "properties": {
        "webScanVulnerabilityCategoryIds": {
          "description": "Web Scan vulnerability categories",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        },
        "systemScanVulnerabilityCategoryIds": {
          "description": "System Scan vulnerability definition id",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "webScanVulnerabilities": {
          "description": "System Scan vulnerability definition id",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilitiesListWebScanCategoriesDTO"
          }
        },
        "scanGroupIds": {
          "description": "IDs of scan groups to search for affected hosts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        },
        "vulnerabilityStatusIds": {
          "description": "Vulnerability status IDs",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "targetRelatedBasicFields": {
          "description": "Basic target fields to search",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterBasicField[TargetRelatedBasicFieldEnum]"
          }
        },
        "scanned": {
          "$ref": "#/definitions/ScannedWhenModeEnum"
        },
        "scannedNumber": {
          "format": "int32",
          "description": "Number of units when checking the time of scan",
          "type": "integer"
        },
        "scannedWhenUnit": {
          "$ref": "#/definitions/ScannedWhenUnitEnum"
        },
        "scanTagsOneOf": {
          "description": "Tags included in scan. True if at least one tag is present",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValueItem[String]"
          }
        },
        "scanTagsAllOf": {
          "description": "Tags included in scan. True if all tags are present",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValueItem[String]"
          }
        },
        "includeOnlyWithTickets": {
          "description": "Include vulnerabilities with assigned tickets",
          "type": "boolean"
        },
        "includeOnlyWithoutTickets": {
          "description": "Include vulnerabilities without assigned tickets",
          "type": "boolean"
        },
        "includeSystemScan": {
          "description": "Include System Scan vulnerabilities. False ignores the setting",
          "type": "boolean"
        },
        "includeWebScan": {
          "description": "Include Web Scan vulnerabilities. False ignores the setting",
          "type": "boolean"
        },
        "includeEndpointAgentScan": {
          "description": "Include Endpoint Agent Scan vulnerabilities. False ignores the setting",
          "type": "boolean"
        },
        "isExploitable": {
          "description": "Include only exploitable vulnerabilities. False ignores the setting",
          "type": "boolean"
        },
        "webScanVulnerabilitiesSearchKeyViewModel": {
          "description": "Key to search web vulnerabilities based on category, plugin, variant",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebScanVulnerabilitiesSearchKeyViewModel"
          }
        },
        "vulnerabilityInstanceIds": {
          "description": "Vulnerability instance ids",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "id": {
          "format": "uuid",
          "description": "Vulnerability ID",
          "type": "string"
        },
        "ids": {
          "description": "Vulnerability ID",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "severityFrom": {
          "format": "double",
          "description": "Severity score from",
          "type": "number"
        },
        "severityTo": {
          "format": "double",
          "description": "Severity score to",
          "type": "number"
        },
        "vulnerabilityTagsOneOf": {
          "description": "Tags included in vulnerability. True if at least one tag is present",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValueItem[String]"
          }
        },
        "vulnerabilityTagsAllOf": {
          "description": "Tags included in vulnerability. True if all tags are present",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValueItem[String]"
          }
        },
        "includeInformationRiskLevel": {
          "description": "Include informational vulnerabilities. False ignores the setting",
          "type": "boolean"
        },
        "includeLowRiskLevel": {
          "description": "Include low-severity vulnerabilities. False ignores the setting",
          "type": "boolean"
        },
        "includeMediumRiskLevel": {
          "description": "Include medium-severity vulnerabilities. False ignores the setting",
          "type": "boolean"
        },
        "includeHighRiskLevel": {
          "description": "Include high-severity vulnerabilities. False ignores the setting",
          "type": "boolean"
        },
        "excludePotential": {
          "description": "Exclude potential vulnerabilities",
          "type": "boolean"
        },
        "vulnerabilityBasicFields": {
          "description": "Basic vulnerability fields to search",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterBasicField[VulnerabilityBasicFieldEnum]"
          }
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "VulnerabilitiesOnHostFilter": {
      "type": "object",
      "properties": {
        "vulnerabilityIds": {
          "description": "A list of unique identifiers for vulnerabilities. If specified, only hosts on which this vulnerabiliy occurs are returned",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "onlyOpenVulnerabilityInstances": {
          "description": "A flag indicating that results have to contain only vulnerabilities of open status group",
          "type": "boolean"
        },
        "reportId": {
          "format": "uuid",
          "description": "A report unique identifier",
          "type": "string"
        },
        "ticketId": {
          "format": "uuid",
          "description": "A ticket unique identifier",
          "type": "string"
        },
        "vulnerabilityStatusIds": {
          "description": "A list of unique identifiers for vulnerability statuses",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "vulnerabilityInstanceIds": {
          "description": "A list of unique identifiers of vulnerability instances",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "vulnerabilityListFilter": {
          "$ref": "#/definitions/VulnerabilityFilterViewModel"
        },
        "scanIds": {
          "description": "A list of unique identifiers for scans",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "includeTotalNumberOfVulnerabilityInstancesPerVulnerability": {
          "description": "Should the total number of vulnerability instances per vulnerability be calculated",
          "type": "boolean"
        },
        "scanGroups": {
          "description": "Filters results by a list of scan groups",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        },
        "hosts": {
          "description": "Filters results by a list of hosts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        },
        "ports": {
          "description": "Filters results by a list of ports",
          "type": "string"
        },
        "hideVulnerabilitesAllreadyInAnyTicket": {
          "description": "A flag indicating if returned vulnerability instances are already connected to any ticket",
          "type": "boolean"
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "TicketGroupedVulnerabilityOnHostViewModel": {
      "description": "Grouped vulnerabilities on host attached to ticket.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A vulnerability unique identifier",
          "type": "string"
        },
        "name": {
          "description": "A vulnerability name",
          "type": "string"
        },
        "vulnerabilitiesInstancesCount": {
          "format": "int32",
          "description": "A number of vulnerability instances in a vulnerability",
          "type": "integer"
        },
        "totalNumberOfVulnerabilityInstancesPerVulnerability": {
          "format": "int32",
          "description": "A number of vulnerability instances for a vulnerability that is not attached to any ticket",
          "type": "integer"
        }
      }
    },
    "PagedData[TicketGroupedVulnerabilityOnHostViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketGroupedVulnerabilityOnHostViewModel"
          }
        }
      }
    },
    "TicketVulnerabilityOnHostViewModel": {
      "description": "Vulnerability on host attached to ticket.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "vulnerability instance unique identifier",
          "type": "string"
        },
        "vulnerability": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "cvssBaseScore": {
          "format": "double",
          "description": "Severity",
          "type": "number"
        },
        "port": {
          "format": "int32",
          "description": "Port number",
          "type": "integer"
        },
        "protocol": {
          "$ref": "#/definitions/ProtocolTypes"
        },
        "host": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "status": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "type": {
          "$ref": "#/definitions/ScanType"
        },
        "pluginId": {
          "format": "int32",
          "description": "Plugin unique identifier",
          "type": "integer"
        },
        "ticket": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "scanGroup": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "totalNumberOfVulnerabilityInstancesPerVulnerability": {
          "format": "int32",
          "description": "A number of vulnerability instances for a vulnerability that is not attached to any ticket",
          "type": "integer"
        }
      }
    },
    "PagedData[TicketVulnerabilityOnHostViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketVulnerabilityOnHostViewModel"
          }
        }
      }
    },
    "KeyValuePair[Guid]": {
      "type": "object",
      "properties": {
        "key": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "VulnerabilitiesOnSiteFilter": {
      "type": "object",
      "properties": {
        "webScanVulnerabilitiesSearchKeyViewModel": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebScanVulnerabilitiesSearchKeyViewModel"
          }
        },
        "ticketId": {
          "format": "uuid",
          "description": "A ticket unique identifier",
          "type": "string"
        },
        "onlyOpenVulnerabilityInstances": {
          "description": "A flag that indicates that result have to contain only vulnerabilities of open status group",
          "type": "boolean"
        },
        "reportId": {
          "format": "uuid",
          "description": "A report unique identifier",
          "type": "string"
        },
        "vulnerabilityInstanceIds": {
          "description": "A list of vulnerability instances unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "vulnerabilityListFilter": {
          "$ref": "#/definitions/VulnerabilityFilterViewModel"
        },
        "vulnerabilityStatusIds": {
          "description": "A list of vulnerability status unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "scanIds": {
          "description": "A list of scan unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "scanGroups": {
          "description": "Filters results by a list of Scan Groups",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        },
        "categories": {
          "description": "Filters results by a list of vulnerability categories",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        },
        "hideVulnsAlleradyInAnyTicket": {
          "description": "A flag that indicates if return vulnerabiltiy instances that are allready connected to any ticket",
          "type": "boolean"
        },
        "hosts": {
          "description": "Filters results by a list of hosts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "CreateTicketViewModel": {
      "description": "Create ticket view model.",
      "type": "object",
      "properties": {
        "deadlineDate": {
          "format": "date-time",
          "description": "A deadline date and time (UTC)",
          "type": "string"
        },
        "description": {
          "description": "A description",
          "type": "string"
        },
        "estimate": {
          "format": "int32",
          "description": "An estimate. In hours",
          "type": "integer"
        },
        "name": {
          "description": "A ticket name",
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "description": "A ticket priority",
          "type": "integer"
        },
        "workHours": {
          "format": "int32",
          "description": "Work hours. In hours",
          "type": "integer"
        },
        "workRemaining": {
          "format": "int32",
          "description": "Work remaining. In hours",
          "type": "integer"
        },
        "assignedToId": {
          "format": "uuid",
          "description": "An unique identifier of user assigned to ticket",
          "type": "string"
        },
        "vulnerabilityInstanceIds": {
          "description": "A list of vulnerability instances unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "vulnerabilityIds": {
          "description": "A list of vulnerability unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "webScanVulnerabilitiesSearchKeyViewModel": {
          "description": "A list of search keys for vulnerability instances",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebScanVulnerabilitiesSearchKeyViewModel"
          }
        },
        "wsVulnerabilityInstanceIds": {
          "description": "A list of unique identifiers for Web Scan vulnerability instances",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "ticketVulnerabilitiesOnSiteFilter": {
          "$ref": "#/definitions/VulnerabilitiesOnSiteFilter"
        },
        "ticketVulnerabilitiesOnHostFilter": {
          "$ref": "#/definitions/VulnerabilitiesOnHostFilter"
        }
      }
    },
    "StatusGroups": {
      "format": "int32",
      "description": "It is a kind of general \"category\" for the vulnerability statuses.\r\nEvery vulnerability status falls into one of these categories. Then, when the vulnerability instance is marked with the specific, custom status,\r\nwe still know and can check whether it means that the vulnerability is \"closed\" or still a pending issue (open / in progress)",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "StatusTypes": {
      "format": "int32",
      "description": "In the KSC database, there is one table which stores statuses for both: tickets and vulnerability instances.\r\nStatusType is needed to identify whether the particular status belongs to vulnerability instances (is in use there) or one of the ticket status category : open/close",
      "enum": [
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "VulnerabilityStatusViewModel": {
      "description": "Represents Vulnerability Status settings.",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A vulnerability status unique identifier",
          "type": "string"
        },
        "name": {
          "description": "A name of the vulnerability status",
          "type": "string"
        },
        "isDefault": {
          "description": "A flag that indicates if this vulnerability status is the default",
          "type": "boolean"
        },
        "isGrayedOutVulnView": {
          "description": "A flag that indicates if IncludeIn vulnerability counts",
          "type": "boolean"
        },
        "includeInCounters": {
          "description": "A flag that indicates if all vulnerabilities with this status will be ignored when determining PCI compliance status",
          "type": "boolean"
        },
        "includeInStatistics": {
          "description": "A flag that indicates if included in statistics and dashboard",
          "type": "boolean"
        },
        "isPciCompliant": {
          "description": "A flag that indicates PCI compliance",
          "type": "boolean"
        },
        "requiresAuditorNote": {
          "description": "A flag that indicates if this status requires a note",
          "type": "boolean"
        },
        "newStatusIfRediscoveredInScan": {
          "format": "uuid",
          "description": "A unique identifier for new status if rediscovered in scan",
          "type": "string"
        },
        "newStatusIfNotRediscoveredInScan": {
          "format": "uuid",
          "description": "A unique identifier for new status if not rediscovered in scan",
          "type": "string"
        },
        "statusGroup": {
          "$ref": "#/definitions/StatusGroups"
        },
        "statusType": {
          "$ref": "#/definitions/StatusTypes"
        },
        "isDuplicateStatus": {
          "description": "Internal Radar use",
          "type": "boolean"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "TicketViewModel": {
      "description": "Portal ticketing system ticket ViewModel.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A ticket unique identifier",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "createdOn": {
          "format": "date-time",
          "description": "Date and time when ticket has been created",
          "type": "string"
        },
        "deadlineDate": {
          "format": "date-time",
          "description": "A deadline date and time (UTC)",
          "type": "string"
        },
        "description": {
          "description": "A ticket description",
          "type": "string"
        },
        "estimate": {
          "format": "int32",
          "description": "An estimate. In hours",
          "type": "integer"
        },
        "modifiedBy": {
          "format": "uuid",
          "description": "A modified by user unique identifier",
          "type": "string"
        },
        "modifiedOn": {
          "format": "date-time",
          "description": "A date and time when ticket has been modified",
          "type": "string"
        },
        "name": {
          "description": "A ticket name",
          "type": "string"
        },
        "number": {
          "format": "int32",
          "description": "A ticket number",
          "type": "integer"
        },
        "priority": {
          "format": "int32",
          "description": "A ticket priority",
          "type": "integer"
        },
        "status": {
          "$ref": "#/definitions/VulnerabilityStatusViewModel"
        },
        "workHours": {
          "format": "int32",
          "description": "A number of work hours",
          "type": "integer"
        },
        "workRemaining": {
          "format": "int32",
          "description": "A number of work remaining hours",
          "type": "integer"
        },
        "assignedTo": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "vulnerabilitiesCount": {
          "format": "int32",
          "description": "Number of vulnerabilities attached to ticket",
          "type": "integer"
        }
      }
    },
    "VulnerabilitiesInstancesViewModel": {
      "description": "Model to perform actions on vulnerabilities instances.",
      "type": "object",
      "properties": {
        "vulnerabilityInstanceIds": {
          "description": "A list of vulnerability instances unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "vulnerabilityIds": {
          "description": "A list of vulnerability unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "webScanVulnerabilitiesSearchKeyViewModel": {
          "description": "A list of search keys for vulnerability instances",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebScanVulnerabilitiesSearchKeyViewModel"
          }
        },
        "wsVulnerabilityInstanceIds": {
          "description": "A list of unique identifiers for Web Scan vulnerability instances",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "ticketVulnerabilitiesOnSiteFilter": {
          "$ref": "#/definitions/VulnerabilitiesOnSiteFilter"
        },
        "ticketVulnerabilitiesOnHostFilter": {
          "$ref": "#/definitions/VulnerabilitiesOnHostFilter"
        }
      }
    },
    "VulnerabilitiesStatusChangeViewModel": {
      "type": "object",
      "properties": {
        "auditorNote": {
          "description": "An auditor note",
          "type": "string"
        },
        "newStatusId": {
          "format": "uuid",
          "description": "A unique identifier of the new vulnerability status",
          "type": "string"
        },
        "vulnerabilityInstanceIds": {
          "description": "A list of vulnerability instances unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "vulnerabilityIds": {
          "description": "A list of vulnerability unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "webScanVulnerabilitiesSearchKeyViewModel": {
          "description": "A list of search keys for vulnerability instances",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebScanVulnerabilitiesSearchKeyViewModel"
          }
        },
        "wsVulnerabilityInstanceIds": {
          "description": "A list of unique identifiers for Web Scan vulnerability instances",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "ticketVulnerabilitiesOnSiteFilter": {
          "$ref": "#/definitions/VulnerabilitiesOnSiteFilter"
        },
        "ticketVulnerabilitiesOnHostFilter": {
          "$ref": "#/definitions/VulnerabilitiesOnHostFilter"
        }
      }
    },
    "TicketFollowerViewModel": {
      "type": "object",
      "properties": {
        "email": {
          "description": "Follower email address",
          "type": "string"
        },
        "userId": {
          "format": "uuid",
          "description": "Follower user unique identifier",
          "type": "string"
        }
      }
    },
    "TicketFollowerEnum": {
      "format": "int32",
      "enum": [
        1,
        2
      ],
      "type": "integer"
    },
    "TicketFollowersViewModel": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Follower name",
          "type": "string"
        },
        "email": {
          "description": "Follower email",
          "type": "string"
        },
        "userId": {
          "format": "uuid",
          "description": "Follower unique identifier",
          "type": "string"
        },
        "ticketId": {
          "format": "uuid",
          "description": "A ticket unique identifier",
          "type": "string"
        },
        "ticketUserId": {
          "format": "uuid",
          "description": "Unique identifier of the user that is connected to the ticket",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/TicketFollowerEnum"
        }
      }
    },
    "TicketActivityView": {
      "type": "object",
      "properties": {
        "createdOn": {
          "format": "date-time",
          "description": "A date when ticket was created",
          "type": "string"
        },
        "userId": {
          "format": "uuid",
          "description": "User unique identifier",
          "type": "string"
        },
        "firstname": {
          "description": "User first name",
          "type": "string"
        },
        "surname": {
          "description": "User surname",
          "type": "string"
        },
        "textContent": {
          "description": "Ticket activity description",
          "type": "string"
        }
      }
    },
    "TicketCommentViewModel": {
      "type": "object",
      "properties": {
        "comment": {
          "description": "A ticket comment",
          "type": "string"
        }
      }
    },
    "TicketStatusViewModel": {
      "description": "Model represents a ticket status.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A ticket status unique identifier",
          "type": "string"
        },
        "name": {
          "description": "Ticket status name",
          "type": "string"
        },
        "statusType": {
          "$ref": "#/definitions/StatusTypes"
        }
      }
    },
    "TicketsSummaryViewModel": {
      "type": "object",
      "properties": {
        "numberOfVulnerabilities": {
          "format": "int32",
          "description": "A number of vulnerabilities",
          "type": "integer"
        },
        "numberOfClosedVulnerabilities": {
          "format": "int32",
          "description": "A number of closed vulnerabilities",
          "type": "integer"
        },
        "numberOfOpenVulnerabilities": {
          "format": "int32",
          "description": "A number of open vulnerabilities",
          "type": "integer"
        },
        "numberOfTickets": {
          "format": "int32",
          "description": "A number of tickets",
          "type": "integer"
        },
        "numberOfOpenTickets": {
          "format": "int32",
          "description": "A number of open tickets",
          "type": "integer"
        },
        "numberOfClosedTickets": {
          "format": "int32",
          "description": "A number of close tickets",
          "type": "integer"
        }
      }
    },
    "ChangeTicketStatusViewModel": {
      "description": "New ticket status parameters.",
      "type": "object",
      "properties": {
        "newStatusId": {
          "format": "uuid",
          "description": "New ticket status",
          "type": "string"
        },
        "orderRescanOfAllConnectedHosts": {
          "description": "If hosts should be queued for scanning",
          "type": "boolean"
        },
        "autoCloseVulnerabilityInstances": {
          "description": "When changing the ticket status to fixed, choose if you want to automatically close all vulnerabilities",
          "type": "boolean"
        }
      }
    },
    "TicketsFilterViewModel": {
      "description": "Tickets Filter viewModel.",
      "type": "object",
      "properties": {
        "statusIds": {
          "description": "A list of status unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "deadlineDateFrom": {
          "format": "date-time",
          "description": "A deadline from date and time",
          "type": "string"
        },
        "deadlineDateTo": {
          "format": "date-time",
          "description": "A deadline to date and time",
          "type": "string"
        },
        "assignedToId": {
          "format": "uuid",
          "description": "A unique identifier of the user who is assigned to the ticket",
          "type": "string"
        },
        "onlyTicketsPastDeadline": {
          "description": "A flag that indicates that the result shows only tickets that are past the deadline",
          "type": "boolean"
        },
        "onlyMyTickets": {
          "description": "A flag that indicates that the result shows only my tickets",
          "type": "boolean"
        },
        "ticketIds": {
          "description": "Tickets IDs to filter data",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "PagedData[TicketViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketViewModel"
          }
        }
      }
    },
    "NameIdItem[Int32]": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TicketGroupedVulnerabilityOnSiteViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A vulnerability instance unique identifier",
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "plugin": {
          "$ref": "#/definitions/NameIdItem[Int32]"
        },
        "classVariant": {
          "description": "A class variant",
          "type": "string"
        },
        "manualId": {
          "format": "uuid",
          "description": "A manual vulnerability unique identifier",
          "type": "string"
        },
        "vulnerabilitiesInstancesCount": {
          "format": "int32",
          "description": "A number of vulnerability instances in a vulnerability category",
          "type": "integer"
        },
        "totalNumberOfVulnerabilityInstancesPerCategory": {
          "format": "int32",
          "description": "A number of vulnerability instances in a category except those that are currently attached to the ticket",
          "type": "integer"
        }
      }
    },
    "PagedData[TicketGroupedVulnerabilityOnSiteViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketGroupedVulnerabilityOnSiteViewModel"
          }
        }
      }
    },
    "TicketVulnerabilityOnSiteViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A vulnerability instance unique identifier",
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "status": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "host": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "plugin": {
          "$ref": "#/definitions/NameIdItem[Int32]"
        },
        "ticket": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "scanGroup": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "classVariant": {
          "description": "A class variant",
          "type": "string"
        },
        "manualId": {
          "format": "uuid",
          "description": "A manual vulnerability unique identifier",
          "type": "string"
        },
        "totalNumberOfVulnerabilityInstancesPerCategory": {
          "format": "int32",
          "description": "A number of vulnerability instances for a category that is not attached to any ticket",
          "type": "integer"
        }
      }
    },
    "PagedData[TicketVulnerabilityOnSiteViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketVulnerabilityOnSiteViewModel"
          }
        }
      }
    },
    "SimpleUserViewModel": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "An user first name",
          "type": "string"
        },
        "name": {
          "description": "An user name",
          "type": "string"
        },
        "value": {
          "format": "uuid",
          "description": "An user unique identifier",
          "type": "string"
        },
        "isLocalOrganizationUser": {
          "description": "A value that indicates whether this user is assigned to the organization",
          "type": "boolean"
        }
      }
    },
    "CreateUserViewModel": {
      "type": "object",
      "properties": {
        "confirmNewPassword": {
          "description": "Confirm a user password",
          "type": "string"
        },
        "newPassword": {
          "description": "An user password",
          "type": "string"
        },
        "sendInvitation": {
          "description": "A value indicating whether invitation email should be sent",
          "type": "boolean"
        },
        "randomPassword": {
          "description": "Randomly generated password",
          "type": "string"
        },
        "authenticationMode": {
          "$ref": "#/definitions/AuthenticationMode"
        },
        "email": {
          "description": "An user email address",
          "type": "string"
        },
        "firstName": {
          "description": "Name of the user",
          "type": "string"
        },
        "isActive": {
          "description": "A value indicating whether the user account is active",
          "type": "boolean"
        },
        "isConsultant": {
          "description": "Flag that indicates if the user is a consultant",
          "type": "boolean"
        },
        "languageCode": {
          "$ref": "#/definitions/LocalizationEnum"
        },
        "lastName": {
          "description": "An user last name",
          "type": "string"
        },
        "notificationPeriod": {
          "$ref": "#/definitions/NotificationPeriod"
        },
        "phone": {
          "description": "An user phone number",
          "type": "string"
        },
        "timeZone": {
          "description": "An user time zone",
          "type": "string"
        },
        "userGroupIds": {
          "description": "A list of user groups where the user is assigned",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "OneIdUserExistsEnum": {
      "format": "int32",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "UserCreatedViewModel": {
      "description": "View model return after successful user creation response.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Created user unique identifier",
          "type": "string"
        },
        "companyId": {
          "format": "uuid",
          "description": "Company unique identifier",
          "type": "string"
        },
        "userEmail": {
          "description": "User email address",
          "type": "string"
        },
        "companyName": {
          "description": "Company name",
          "type": "string"
        },
        "oneIdUserStatus": {
          "$ref": "#/definitions/OneIdUserExistsEnum"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "UpdateUserViewModel": {
      "type": "object",
      "properties": {
        "resetTwoFactorAuthentication": {
          "description": "A value indicating whether the two-factor authentication should be reset",
          "type": "boolean"
        },
        "userId": {
          "format": "uuid",
          "description": "A unique identifier of the user",
          "type": "string"
        },
        "authenticationMode": {
          "$ref": "#/definitions/AuthenticationMode"
        },
        "email": {
          "description": "An user email address",
          "type": "string"
        },
        "firstName": {
          "description": "Name of the user",
          "type": "string"
        },
        "isActive": {
          "description": "A value indicating whether the user account is active",
          "type": "boolean"
        },
        "isConsultant": {
          "description": "Flag that indicates if the user is a consultant",
          "type": "boolean"
        },
        "languageCode": {
          "$ref": "#/definitions/LocalizationEnum"
        },
        "lastName": {
          "description": "An user last name",
          "type": "string"
        },
        "notificationPeriod": {
          "$ref": "#/definitions/NotificationPeriod"
        },
        "phone": {
          "description": "An user phone number",
          "type": "string"
        },
        "timeZone": {
          "description": "An user time zone",
          "type": "string"
        },
        "userGroupIds": {
          "description": "A list of user groups where the user is assigned",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "UserViewModel": {
      "description": "Represents a user.",
      "type": "object",
      "properties": {
        "addressId": {
          "format": "uuid",
          "description": "A unique identifier referring to the address",
          "type": "string"
        },
        "comment": {
          "description": "A comment. Max length 255 characters",
          "type": "string"
        },
        "createdBy": {
          "format": "uuid",
          "description": "An unique identifier referring to user that created item",
          "type": "string"
        },
        "createdOn": {
          "format": "date-time",
          "description": "A date and time when this item was created",
          "type": "string"
        },
        "defaultGroup": {
          "format": "uuid",
          "description": "An unique identifier referring to the default user group",
          "type": "string"
        },
        "email": {
          "description": "An email address. Max 255 characters",
          "type": "string"
        },
        "forename": {
          "description": "An user forename",
          "type": "string"
        },
        "isActive": {
          "description": "A flag that indicates that the user is active",
          "type": "boolean"
        },
        "isConsultant": {
          "description": "A flag that indicates that the user is consultant",
          "type": "boolean"
        },
        "modifiedBy": {
          "format": "uuid",
          "description": "An unique identifier referring to user that has modified user entry last time",
          "type": "string"
        },
        "modifiedOn": {
          "format": "date-time",
          "description": "A date and time when last time this item was modified",
          "type": "string"
        },
        "name": {
          "description": "A name of user. Max length 255 characters",
          "type": "string"
        },
        "phone": {
          "description": "User's phone number. Max length 50 characters",
          "type": "string"
        },
        "oAuthUUID": {
          "description": "User's OneId UUID",
          "type": "string"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "ScopeRoleViewModel": {
      "description": "A scope role ViewModel.",
      "type": "object",
      "properties": {
        "allScanGroups": {
          "description": "A value indicating whether all scan groups are available for role.\r\nDefault value is false",
          "type": "boolean"
        },
        "name": {
          "description": "A Role name",
          "type": "string"
        },
        "roleId": {
          "format": "uuid",
          "description": "A Role unique identifier",
          "type": "string"
        },
        "scanGroupIds": {
          "description": "Get or set scan group to which role is granted.\r\nThis property is not propagated in response when null",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "scanGroups": {
          "description": "A list of user groups where the user is assigned.\r\nThis property is not propagated in response when null",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        },
        "scopeName": {
          "description": "Get or set container name for specific resources like ScanGroups",
          "type": "string"
        }
      }
    },
    "UserGroupViewModel": {
      "type": "object",
      "properties": {
        "description": {
          "description": "An user group description",
          "type": "string"
        },
        "groupSID": {
          "description": "An user group SID",
          "type": "string"
        },
        "name": {
          "description": "An user group name",
          "type": "string"
        },
        "locked": {
          "description": "Flag indicating if user group can be edited",
          "type": "boolean"
        },
        "scopeRoles": {
          "description": "An user group access rights",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScopeRoleViewModel"
          }
        },
        "userGroupId": {
          "format": "uuid",
          "description": "A unique identifier of the user group",
          "type": "string"
        },
        "users": {
          "description": "A number of users assigned to user group",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        }
      }
    },
    "UserDetailsViewModel": {
      "type": "object",
      "properties": {
        "accessRights": {
          "description": "A list of access rights to which user is assigned",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserGroupViewModel"
          }
        },
        "authenticationMode": {
          "$ref": "#/definitions/AuthenticationMode"
        },
        "requireTwoFactorAutheticationFromAnyCompany": {
          "description": "A flag that indicates if user needs to be verifed against two factor authentication because some organization require it",
          "type": "boolean"
        },
        "email": {
          "description": "An user email address",
          "type": "string"
        },
        "firstName": {
          "description": "Name of the user",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "description": "A unique user identifier",
          "type": "string"
        },
        "isActive": {
          "description": "A value indicating whether the user account is active",
          "type": "boolean"
        },
        "isConsultant": {
          "description": "Value that indicates if the user is a consultant",
          "type": "boolean"
        },
        "languageCode": {
          "$ref": "#/definitions/LocalizationEnum"
        },
        "lastName": {
          "description": "An user last name",
          "type": "string"
        },
        "notificationPeriod": {
          "$ref": "#/definitions/NotificationPeriod"
        },
        "phone": {
          "description": "An user phone number",
          "type": "string"
        },
        "timeZone": {
          "description": "An user time zone",
          "type": "string"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "AddUsersToGroupViewModel": {
      "type": "object",
      "properties": {
        "userGroupId": {
          "format": "uuid",
          "description": "An user group unique identifier",
          "type": "string"
        },
        "userIds": {
          "description": "A list of user unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "UserAccountTypes": {
      "format": "int32",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "ChangeUserAccountTypeViewModel": {
      "type": "object",
      "properties": {
        "userAccountType": {
          "$ref": "#/definitions/UserAccountTypes"
        },
        "userId": {
          "format": "uuid",
          "description": "A unique identifier of the user",
          "type": "string"
        }
      }
    },
    "UserFilterViewModel": {
      "description": "Filter view model class for user list view.",
      "type": "object",
      "properties": {
        "userGroupId": {
          "format": "uuid",
          "description": "An user group unique identifier",
          "type": "string"
        },
        "locked": {
          "description": "Flag that indicates whether the user group can be edited",
          "type": "boolean"
        },
        "userName": {
          "description": "User name",
          "type": "string"
        },
        "email": {
          "description": "User email address",
          "type": "string"
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "UserListViewModel": {
      "type": "object",
      "properties": {
        "email": {
          "description": "An user email address",
          "type": "string"
        },
        "firstName": {
          "description": "Name of the user",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "description": "Id of the user",
          "type": "string"
        },
        "isActive": {
          "description": "A value indicating whether the user account is active",
          "type": "boolean"
        },
        "isConsultant": {
          "description": "Value that indicates if the user is a consultant",
          "type": "boolean"
        },
        "lastName": {
          "description": "An user last name",
          "type": "string"
        },
        "userGroups": {
          "description": "A list of user groups that a user is a member",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        }
      }
    },
    "PagedData[UserListViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserListViewModel"
          }
        }
      }
    },
    "PrivilegeFlag": {
      "format": "int64",
      "enum": [
        1,
        2,
        4,
        8,
        16,
        32,
        64,
        128,
        256,
        512,
        1024,
        16384,
        32768,
        65536,
        131072,
        262144,
        524288,
        1048576,
        2097152,
        4194304,
        8388608,
        16777216,
        33554432,
        67108864,
        134217728,
        268435456
      ],
      "type": "integer"
    },
    "RoleViewModel": {
      "description": "Represents a single role.",
      "required": [
        "roleId"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "A role description",
          "type": "string"
        },
        "name": {
          "description": "A role name",
          "type": "string"
        },
        "locked": {
          "description": "If 'true' role is locked and cannot be edited",
          "type": "boolean"
        },
        "privileges": {
          "description": "A role privileges",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivilegeFlag"
          }
        },
        "roleId": {
          "format": "uuid",
          "description": "A role unique identifier",
          "type": "string"
        }
      }
    },
    "CreateRoleViewModel": {
      "type": "object",
      "properties": {
        "description": {
          "description": "A role description",
          "type": "string"
        },
        "name": {
          "description": "A role name",
          "type": "string"
        },
        "locked": {
          "description": "If 'true' role is locked and cannot be edited",
          "type": "boolean"
        },
        "privileges": {
          "description": "A list of privileges for role",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivilegeFlag"
          }
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "UpdateRoleViewModel": {
      "type": "object",
      "properties": {
        "roleId": {
          "format": "uuid",
          "description": "A unique identifier of the user Role",
          "type": "string"
        },
        "description": {
          "description": "A role description",
          "type": "string"
        },
        "name": {
          "description": "A role name",
          "type": "string"
        },
        "locked": {
          "description": "If 'true' role is locked and cannot be edited",
          "type": "boolean"
        },
        "privileges": {
          "description": "A list of privileges for role",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivilegeFlag"
          }
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "UserGroupsListViewModel": {
      "type": "object",
      "properties": {
        "name": {
          "description": "An user group name",
          "type": "string"
        },
        "numberOfUsers": {
          "format": "int32",
          "description": "A number of users assigned to the user group",
          "type": "integer"
        },
        "userGroupId": {
          "format": "uuid",
          "description": "A unique identifier of the user group",
          "type": "string"
        },
        "locked": {
          "description": "Flag indicating if user group can be edited",
          "type": "boolean"
        }
      }
    },
    "CreateUserGroupViewModel": {
      "type": "object",
      "properties": {
        "description": {
          "description": "User group description",
          "type": "string"
        },
        "groupSID": {
          "description": "User group SID",
          "type": "string"
        },
        "name": {
          "description": "User group name",
          "type": "string"
        },
        "scopeRoles": {
          "description": "User group access rights",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScopeRoleViewModel"
          }
        },
        "userIds": {
          "description": "List of assigned user unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "locked": {
          "description": "Flag indicating whether user group can be edited",
          "type": "boolean"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "UpdateUserGroupViewModel": {
      "type": "object",
      "properties": {
        "userGroupId": {
          "format": "uuid",
          "description": "A unique identifier of the user group",
          "type": "string"
        },
        "description": {
          "description": "User group description",
          "type": "string"
        },
        "groupSID": {
          "description": "User group SID",
          "type": "string"
        },
        "name": {
          "description": "User group name",
          "type": "string"
        },
        "scopeRoles": {
          "description": "User group access rights",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScopeRoleViewModel"
          }
        },
        "userIds": {
          "description": "List of assigned user unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "locked": {
          "description": "Flag indicating whether user group can be edited",
          "type": "boolean"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "VulnerabilityStatusViewModelShort": {
      "description": "Represents vulnerability status.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A vulnerability status unique identifier",
          "type": "string"
        },
        "name": {
          "description": "A vulnerability status name",
          "type": "string"
        },
        "isDefault": {
          "description": "A flag that indicates if this vulnerability status is default",
          "type": "boolean"
        },
        "statusGroup": {
          "$ref": "#/definitions/StatusGroups"
        },
        "isAuditorNoteRequired": {
          "description": "A flag that indicates if auditor note is required",
          "type": "boolean"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "VulnerabilitiesDetailsListUpdateStatusesViewModel": {
      "type": "object",
      "properties": {
        "vulnerabilityAffectedHostsIds": {
          "description": "A list of the unique identifiers for the vulnerability's affected hosts",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "statusId": {
          "format": "uuid",
          "description": "A vulnerability status unique identifier",
          "type": "string"
        },
        "auditorNote": {
          "description": "An auditor note",
          "type": "string"
        },
        "potential": {
          "description": "A flag that indicates if the vulnerability is potential",
          "type": "boolean"
        }
      }
    },
    "VulnerabilitiesListUpdatedViewModel": {
      "type": "object",
      "properties": {
        "webScanVulnerabilityInstanceIds": {
          "description": "A list of wev scan vulnerability instance unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "systemScanVulnerabilityInstanceIds": {
          "description": "A list of System Scan vulnerability instance unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "AffectedHostsFilterViewModel": {
      "type": "object",
      "properties": {
        "vulnerabilityId": {
          "format": "uuid",
          "description": "Vulnerability unique identifier",
          "type": "string"
        },
        "scanGroupIds": {
          "description": "IDs of scan groups to search for affected hosts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        },
        "vulnerabilityStatusIds": {
          "description": "Vulnerability status IDs",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "excludePotential": {
          "description": "Exclude potential vulnerabilities",
          "type": "boolean"
        },
        "scanTagsOneOf": {
          "description": "Tags included in scan. True if at least one tag is present",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValueItem[String]"
          }
        },
        "scanTagsAllOf": {
          "description": "Tags included in scan. True if all tags are present",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValueItem[String]"
          }
        },
        "targetRelatedBasicFields": {
          "description": "Basic target fields to search",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterBasicField[TargetRelatedBasicFieldEnum]"
          }
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "VulnerabilityAffectedHostsViewModel": {
      "description": "Base model for showing ungrouped affected hosts.",
      "type": "object",
      "properties": {
        "scanId": {
          "format": "uuid",
          "description": "Scan definition unique identifier",
          "type": "string"
        },
        "scanGroup": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "target": {
          "description": "Scan definition name",
          "type": "string"
        },
        "host": {
          "description": "Scan definition IP or host name",
          "type": "string",
          "readOnly": true
        },
        "operatingSystem": {
          "description": "Operating system discovered during the last scan",
          "type": "string",
          "readOnly": true
        },
        "findings": {
          "description": "Vulnerability instance findings",
          "type": "string"
        },
        "vulnerabilityScanDetailId": {
          "format": "uuid",
          "description": "Vulnerability instance unique identifier",
          "type": "string"
        },
        "protocol": {
          "$ref": "#/definitions/ProtocolTypes"
        },
        "port": {
          "format": "int32",
          "description": "On which port the vulnerability has been found",
          "type": "integer",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/VulnerabilityStatusViewModelShort"
        },
        "potential": {
          "description": "Is vulnerability instance marked as potential",
          "type": "boolean"
        }
      }
    },
    "PagedData[VulnerabilityAffectedHostsViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilityAffectedHostsViewModel"
          }
        }
      }
    },
    "VulnerabilityAffectedHostsViewModelBase": {
      "description": "Base model for showing affected hosts (list and group).",
      "type": "object",
      "properties": {
        "vulnerabilityScanDetailId": {
          "format": "uuid",
          "description": "Vulnerability instance unique identifier",
          "type": "string"
        },
        "protocol": {
          "$ref": "#/definitions/ProtocolTypes"
        },
        "port": {
          "format": "int32",
          "description": "On which port the vulnerability has been found",
          "type": "integer",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/VulnerabilityStatusViewModelShort"
        },
        "potential": {
          "description": "Is vulnerability instance marked as potential",
          "type": "boolean"
        },
        "findings": {
          "description": "Vulnerability instance findings",
          "type": "string"
        }
      }
    },
    "VulnerabilityAffectedHostsGroupedViewModel": {
      "description": "Model for showing grouped affected hosts.",
      "type": "object",
      "properties": {
        "scanId": {
          "format": "uuid",
          "description": "Scan definition unique identifier",
          "type": "string"
        },
        "target": {
          "description": "Scan definition name",
          "type": "string"
        },
        "host": {
          "description": "Scan definition IP or host name",
          "type": "string",
          "readOnly": true
        },
        "operatingSystem": {
          "description": "Operating system discovered during the last scan",
          "type": "string",
          "readOnly": true
        },
        "scanGroup": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "instances": {
          "description": "Vulnerability instance data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilityAffectedHostsViewModelBase"
          }
        }
      }
    },
    "PagedData[VulnerabilityAffectedHostsGroupedViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilityAffectedHostsGroupedViewModel"
          }
        }
      }
    },
    "VulnerabilityStatuses": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A vulnerability status object unique identifier",
          "type": "string"
        },
        "name": {
          "description": "A vulnerability status name",
          "type": "string"
        },
        "nameHtmlEncoded": {
          "description": "Gets or sets status name html encoded",
          "type": "string",
          "readOnly": true
        },
        "number": {
          "format": "int32",
          "description": "Gets or sets status number, used only for old statuses (backward compatibility)",
          "type": "integer"
        },
        "description": {
          "description": "A vulnerability status description",
          "type": "string"
        },
        "orderId": {
          "format": "int32",
          "description": "A vulnerability status display order",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Get or set status type: Ticket, Vulnerability. See: Karhu.Logic.Vulnerabilities.StatusTypes enum for details",
          "type": "integer"
        },
        "companyId": {
          "format": "uuid",
          "description": "Get or set company identifier",
          "type": "string"
        },
        "statusGroupId": {
          "format": "int32",
          "description": "An identifier of a status group that the vulnerability status belongs to",
          "type": "integer"
        },
        "isAuditorNoteRequired": {
          "description": "Indicates whether changing the vulnerability status requires an auditor note to explain the reason for the status change",
          "type": "boolean"
        },
        "graysOutVulnView": {
          "description": "Indicates whether the vulnerability instance with this status should be grayed out on the view",
          "type": "boolean"
        },
        "isPciCompliant": {
          "description": "Indicates whether the status is PCI compliant",
          "type": "boolean"
        },
        "consideredInCounters": {
          "description": "Indicates whether the status is considered in counters",
          "type": "boolean"
        },
        "isIncludedInStatistics": {
          "description": "Indicates whether the status is considered in statistics",
          "type": "boolean"
        },
        "isDefault": {
          "description": "Indicates whether the vulnerability status is the default for the status group",
          "type": "boolean"
        },
        "privilegedUserId": {
          "format": "uuid",
          "description": "Privileged to set this vulnerability status.\r\nIf specified, it specifies user id which is allowed to change vulnerability instance status to this one",
          "type": "string"
        },
        "privilegedRoleId": {
          "format": "uuid",
          "description": "Privileged to set this vulnerability status.\r\nIf specified, it specifies role id which is obligated to have if you want to change vulnerability instance status to this one",
          "type": "string"
        },
        "isDuplicateStatus": {
          "description": "Flag that mark vulnerability status as 'duplicated'. That status is used to mark vulnerability that has beed \r\nfound two or more times for asset. Used internal by Radar",
          "type": "boolean"
        },
        "expirationDate": {
          "format": "date-time",
          "description": "Get or set expiration date. The filed is nullable. If specified, the vulnerability status will be automatically changed when it expires (see ExpirationActionID for details)",
          "type": "string"
        },
        "expirationActionID": {
          "format": "int32",
          "description": "If specified, it specifies which of the expiration events should be performed when the ExpirationDate is reached",
          "type": "integer"
        },
        "createdOn": {
          "format": "date-time",
          "description": "A vulnerability status creation date",
          "type": "string"
        },
        "createdBy": {
          "format": "uuid",
          "description": "Unique identifier of the user who created the vulnerability status",
          "type": "string"
        },
        "modifiedOn": {
          "format": "date-time",
          "description": "A vulnerability status modification date",
          "type": "string"
        },
        "modifiedBy": {
          "format": "uuid",
          "description": "Unique identifier of the user who modified the vulnerability status",
          "type": "string"
        },
        "icon": {
          "description": "A vulnerability status icon path",
          "type": "string"
        },
        "reopenStatusId": {
          "format": "uuid",
          "description": "A unique identifier for a vulnerability status. When a vulnerability instance exists and has this closed status, reopen it by marking the instance with another, opened status",
          "type": "string"
        },
        "missingStatusId": {
          "format": "uuid",
          "description": "An unique identifier of vulnerability status. When a vulnerability instance does not exist anymore, mark it with another, closed status",
          "type": "string"
        },
        "statusGroup": {
          "$ref": "#/definitions/StatusGroups"
        },
        "statusTypes": {
          "$ref": "#/definitions/StatusTypes"
        },
        "toolTip": {
          "description": "Get status title for image flag",
          "type": "string",
          "readOnly": true
        },
        "statusColorBasedOnIcon": {
          "description": "Get status color based on icon flag",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VulnerabilityCategoryViewModel": {
      "description": "A vulnerability category.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Unique identifier for a vulnerability category",
          "type": "string"
        },
        "categoryReferences": {
          "description": "Reference category",
          "type": "string"
        },
        "createdBy": {
          "format": "uuid",
          "description": "A unique identifier referring to user that created item",
          "type": "string"
        },
        "createdOn": {
          "format": "date-time",
          "description": "A date and time when this item was created",
          "type": "string"
        },
        "cweList": {
          "description": "A CWE list",
          "type": "string"
        },
        "description": {
          "description": "A description",
          "type": "string"
        },
        "modifiedBy": {
          "format": "uuid",
          "description": "A unique identifier referring to user that has modified user entry last time",
          "type": "string"
        },
        "modifiedOn": {
          "format": "date-time",
          "description": "A date and time when last time this item was modified",
          "type": "string"
        },
        "name": {
          "description": "Vulnerability category name (max 2000 characters)",
          "maxLength": 2000,
          "type": "string"
        },
        "referenceID": {
          "description": "Reference identifier",
          "maxLength": 20,
          "type": "string"
        },
        "referenceType": {
          "description": "Reference type (max 20 characters)",
          "maxLength": 20,
          "type": "string"
        },
        "referenceUrl": {
          "description": "Reference URL (max 500 characters)",
          "maxLength": 500,
          "type": "string"
        },
        "scanType": {
          "format": "int32",
          "description": "A scan type",
          "type": "integer"
        },
        "shortDescription": {
          "description": "Short description of a vulnerability category ",
          "type": "string"
        },
        "shortName": {
          "description": "Short name (max 256 characters)",
          "maxLength": 256,
          "type": "string"
        },
        "threatType": {
          "format": "int32",
          "description": "Threat type",
          "type": "integer"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "ThreatTypes": {
      "format": "int32",
      "enum": [
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "WebScanVulnerabilityCategory": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Unique identifier for a vulnerability category",
          "type": "string"
        },
        "name": {
          "description": "Vulnerability category name",
          "type": "string"
        },
        "referenceID": {
          "description": "Category reference ID for a vulnerability ",
          "type": "string"
        },
        "threatType": {
          "$ref": "#/definitions/ThreatTypes"
        }
      }
    },
    "VulnerabilitiesAndFindingsDetailedReferenceViewModel": {
      "description": "Represents vulnerabilities and findings detailed reference.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A vulnerability unique identifier",
          "type": "string"
        },
        "name": {
          "description": "A name",
          "type": "string"
        },
        "url": {
          "description": "A URL",
          "type": "string"
        },
        "type": {
          "description": "Vulnerability reference type",
          "type": "string"
        }
      }
    },
    "SimpleTicketViewModel": {
      "description": "Represents ticket (simplified version).",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A ticket unique identifier",
          "type": "string"
        },
        "number": {
          "format": "int32",
          "description": "A ticket number",
          "type": "integer"
        },
        "name": {
          "description": "A ticket name",
          "type": "string"
        }
      }
    },
    "AffectedAssetViewModel": {
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string"
        }
      }
    },
    "VulnRiskLevels": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "VulnerabilitiesListSystemScanDetailsViewModel": {
      "description": "Vulnerability details of a System Scan.",
      "type": "object",
      "properties": {
        "numberOfTargetsWithOpenStatus": {
          "format": "int32",
          "description": "Number of affected targets with open statuses",
          "type": "integer"
        },
        "numberOfTargetsWithClosedStatus": {
          "format": "int32",
          "description": "Number of affected targets with closed statuses",
          "type": "integer"
        },
        "bugTraqReferences": {
          "description": "A BugTraq references",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilitiesAndFindingsDetailedReferenceViewModel"
          }
        },
        "cveReferences": {
          "description": "A CVE references",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilitiesAndFindingsDetailedReferenceViewModel"
          }
        },
        "exploitReferences": {
          "description": "A Exploit references",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilitiesAndFindingsDetailedReferenceViewModel"
          }
        },
        "otherReferences": {
          "description": "An other references",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilitiesAndFindingsDetailedReferenceViewModel"
          }
        },
        "denialOfService": {
          "description": "A flag that indicates if the vulnerability causes denial of service",
          "type": "boolean"
        },
        "isExploitable": {
          "description": "A flag that indicates if the vulnerability has a known exploit",
          "type": "boolean"
        },
        "pluginLastModified": {
          "format": "date-time",
          "description": "Date when the plug-in discovering this page was last discovered",
          "type": "string"
        },
        "vulnerabilityCategory": {
          "description": "A vulnerability family",
          "type": "string"
        },
        "releaseDate": {
          "format": "date-time",
          "description": "Plugin release date.\r\nRelease date means: a date when plugin was released to production via update system",
          "type": "string"
        },
        "tickets": {
          "description": "A list of tickets that contain the vulnerability",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimpleTicketViewModel"
          },
          "readOnly": true
        },
        "affectedAssetsViemModel": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AffectedAssetViewModel"
          }
        },
        "vulnerabilityLastFound": {
          "format": "date-time",
          "description": "Date when the vulnerability was last found",
          "type": "string"
        },
        "synopsis": {
          "description": "Vulnerability synopsis",
          "type": "string"
        },
        "description": {
          "description": "Vulnerability description",
          "type": "string"
        },
        "solution": {
          "description": "Vulnerability solution",
          "type": "string"
        },
        "tags": {
          "description": "Vulnerability tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagViewModel"
          }
        },
        "cvssVector": {
          "description": "Severity vector",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "description": "A vulnerability unique identifier",
          "type": "string"
        },
        "name": {
          "description": "Vulnerability name",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/ScanType"
        },
        "pluginId": {
          "format": "int32",
          "description": "ID of a plug-in that discovers this vulnerability",
          "type": "integer"
        },
        "manualId": {
          "format": "uuid",
          "description": "Id when vulnerability was manually added",
          "type": "string"
        },
        "cvssBaseScore": {
          "format": "double",
          "description": "Severity score",
          "type": "number"
        },
        "riskLevel": {
          "$ref": "#/definitions/VulnRiskLevels"
        },
        "affectedAssets": {
          "format": "int32",
          "description": "How many assets are affected",
          "type": "integer"
        },
        "affectedTargets": {
          "format": "int32",
          "description": "How many targets are affected",
          "type": "integer"
        },
        "referenceId": {
          "description": "Vulnerability category reference unique identifier. Used in Web Scans",
          "type": "string"
        },
        "variant": {
          "description": "A class variant of Web Scan vulnerability scan details",
          "type": "string"
        },
        "ticketAssigned": {
          "description": "A flag indicate that the vulnerability is handled in one or more tickets",
          "type": "boolean"
        }
      }
    },
    "VulnerabilitiesListWebScanDetailsViewModel": {
      "description": "Details for the Web Scan vulnerability.",
      "type": "object",
      "properties": {
        "numberOfSitesWithOpenStatus": {
          "format": "int32",
          "description": "Number of affected sites with open status",
          "type": "integer"
        },
        "numberOfSitesWithClosedStatus": {
          "format": "int32",
          "description": "Number of affected sites with closed status",
          "type": "integer"
        },
        "threatType": {
          "$ref": "#/definitions/ThreatTypes"
        },
        "categoryReferenceUrl": {
          "description": "External URL describing the vulnerability category",
          "type": "string",
          "readOnly": true
        },
        "vulnerabilityReferences": {
          "description": "References related to vulnerability provided by OWASP",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilitiesAndFindingsDetailedReferenceViewModel"
          }
        },
        "tickets": {
          "description": "A list of tickets that contain the vulnerability",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimpleTicketViewModel"
          },
          "readOnly": true
        },
        "vulnerabilityLastFound": {
          "format": "date-time",
          "description": "Date when the vulnerability was last found",
          "type": "string"
        },
        "synopsis": {
          "description": "Vulnerability synopsis",
          "type": "string"
        },
        "description": {
          "description": "Vulnerability description",
          "type": "string"
        },
        "solution": {
          "description": "Vulnerability solution",
          "type": "string"
        },
        "tags": {
          "description": "Vulnerability tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagViewModel"
          }
        },
        "cvssVector": {
          "description": "Severity vector",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "description": "A vulnerability unique identifier",
          "type": "string"
        },
        "name": {
          "description": "Vulnerability name",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/ScanType"
        },
        "pluginId": {
          "format": "int32",
          "description": "ID of a plug-in that discovers this vulnerability",
          "type": "integer"
        },
        "manualId": {
          "format": "uuid",
          "description": "Id when vulnerability was manually added",
          "type": "string"
        },
        "cvssBaseScore": {
          "format": "double",
          "description": "Severity score",
          "type": "number"
        },
        "riskLevel": {
          "$ref": "#/definitions/VulnRiskLevels"
        },
        "affectedAssets": {
          "format": "int32",
          "description": "How many assets are affected",
          "type": "integer"
        },
        "affectedTargets": {
          "format": "int32",
          "description": "How many targets are affected",
          "type": "integer"
        },
        "referenceId": {
          "description": "Vulnerability category reference unique identifier. Used in Web Scans",
          "type": "string"
        },
        "variant": {
          "description": "A class variant of Web Scan vulnerability scan details",
          "type": "string"
        },
        "isExploitable": {
          "description": "Is there a public exploit for the vulnerability",
          "type": "boolean"
        },
        "ticketAssigned": {
          "description": "A flag indicate that the vulnerability is handled in one or more tickets",
          "type": "boolean"
        }
      }
    },
    "VulnerabilityListSummaryViewModel": {
      "description": "Represents summary information for list of vulnerabilities. It includes total list of vulnerabilities and number of informational findings.",
      "type": "object",
      "properties": {
        "totalVulnerabilities": {
          "format": "int32",
          "description": "Number of vulnerabilities",
          "type": "integer"
        },
        "totalInformationalFindings": {
          "format": "int32",
          "description": "Number of findings",
          "type": "integer"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "VulnerabilitiesListWebScanCategoriesViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A vulnerability unique identifier",
          "type": "string"
        },
        "pluginId": {
          "format": "int32",
          "description": "ID of a plug-in that discovers this vulnerability",
          "type": "integer"
        },
        "manualId": {
          "format": "uuid",
          "description": "Id when vulnerability was manually added",
          "type": "string"
        },
        "variant": {
          "description": "Vulnerability class variant. Used in Web Scans",
          "type": "string"
        }
      }
    },
    "VulnerabilitiesListUpdateStatusesViewModel": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/VulnerabilityFilterViewModel"
        },
        "webScanVulnerabilities": {
          "description": "A Web Scan complex category object contains plug-in number, manual ID, variant, and vulnerability ID to change the status of vulnerability instances",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilitiesListWebScanCategoriesViewModel"
          }
        },
        "systemScanVulnerabilityIds": {
          "description": "System Scan category unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "potential": {
          "description": "A vulnerability instance potential flag (option only for System Scan)",
          "type": "boolean"
        },
        "statusId": {
          "format": "uuid",
          "description": "A vulnerability instance status unique identifier",
          "type": "string"
        },
        "auditorNote": {
          "description": "A vulnerability instance auditor note",
          "type": "string"
        }
      }
    },
    "NumberOfVulnerabilityDefinitionsViewModel": {
      "description": "Represents number of vulnerabilites grouped by severity.",
      "type": "object",
      "properties": {
        "total": {
          "format": "int32",
          "description": "A total number for vulnerabilities",
          "type": "integer"
        },
        "highCount": {
          "format": "int32",
          "description": "Number of high-severity vulnerabilities",
          "type": "integer"
        },
        "mediumCount": {
          "format": "int32",
          "description": "Number of medium-severity vulnerabilities",
          "type": "integer"
        },
        "lowCount": {
          "format": "int32",
          "description": "Number of low-severity vulnerabilities",
          "type": "integer"
        },
        "informationalCount": {
          "format": "int32",
          "description": "Number of informational vulnerabilities",
          "type": "integer"
        }
      }
    },
    "NumberOfVulnerabilityByCategoryViewModel": {
      "description": "Represents number of vulnerabilities by vulnerability category.",
      "type": "object",
      "properties": {
        "categoryName": {
          "description": "A vulnerability category name",
          "type": "string"
        },
        "count": {
          "format": "int32",
          "description": "A number of vulnerabilities",
          "type": "integer"
        },
        "categoryReferenceId": {
          "description": "Category reference ID for a vulnerability ",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PeriodTypes": {
      "format": "int32",
      "description": "Time selector values.",
      "enum": [
        1,
        2,
        3,
        4,
        5
      ],
      "type": "integer"
    },
    "NumberOfVulnerabiltiesChangesViewModel": {
      "description": "Represents a view model of a vulnerability changes.",
      "type": "object",
      "properties": {
        "statisticsDate": {
          "format": "date-time",
          "description": "Date and time of statistics generation",
          "type": "string"
        },
        "year": {
          "format": "int32",
          "description": "Vulnerability changes for a year",
          "type": "integer"
        },
        "week": {
          "format": "int32",
          "description": "Vulnerability changes for a week",
          "type": "integer"
        },
        "quarter": {
          "format": "int32",
          "description": "A vulnerability change for quarter",
          "type": "integer"
        },
        "month": {
          "format": "int32",
          "description": "A vulnerability change for month",
          "type": "integer"
        },
        "scanCount": {
          "format": "int32",
          "description": "A number of scans",
          "type": "integer"
        },
        "highCount": {
          "format": "int32",
          "description": "A number of high vulnerabilities",
          "type": "integer"
        },
        "mediumCount": {
          "format": "int32",
          "description": "A number of medium vulnerabilities",
          "type": "integer"
        },
        "lowCount": {
          "format": "int32",
          "description": "A number of low vulnerabilities",
          "type": "integer"
        },
        "informationalCount": {
          "format": "int32",
          "description": "A number of informational findings",
          "type": "integer"
        },
        "averageSeverity": {
          "format": "double",
          "description": "Average severity",
          "type": "number"
        },
        "vulnCount": {
          "format": "double",
          "description": "Vulnerability count",
          "type": "number"
        },
        "numberOfAssets": {
          "format": "int32",
          "description": "A number of assets",
          "type": "integer"
        },
        "numberOfEndpointAgents": {
          "format": "int32",
          "description": "A number of Radar Endpoint Agents",
          "type": "integer"
        }
      }
    },
    "VulnerabiltiesChangesViewModel": {
      "description": "Represents a view model of a vulnerability changes.",
      "type": "object",
      "properties": {
        "lastUpdated": {
          "format": "date-time",
          "description": "Date and time of last generation of statistics",
          "type": "string"
        },
        "vulnerabiltiesChanges": {
          "description": "Vulnerability changes grouped by severity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumberOfVulnerabiltiesChangesViewModel"
          }
        }
      }
    },
    "VulnerabilitiesListViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A vulnerability unique identifier",
          "type": "string"
        },
        "name": {
          "description": "Vulnerability name",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/ScanType"
        },
        "pluginId": {
          "format": "int32",
          "description": "ID of a plug-in that discovers this vulnerability",
          "type": "integer"
        },
        "manualId": {
          "format": "uuid",
          "description": "Id when vulnerability was manually added",
          "type": "string"
        },
        "cvssBaseScore": {
          "format": "double",
          "description": "Severity score",
          "type": "number"
        },
        "riskLevel": {
          "$ref": "#/definitions/VulnRiskLevels"
        },
        "affectedAssets": {
          "format": "int32",
          "description": "How many assets are affected",
          "type": "integer"
        },
        "affectedTargets": {
          "format": "int32",
          "description": "How many targets are affected",
          "type": "integer"
        },
        "referenceId": {
          "description": "Vulnerability category reference unique identifier. Used in Web Scans",
          "type": "string"
        },
        "variant": {
          "description": "A class variant of Web Scan vulnerability scan details",
          "type": "string"
        },
        "isExploitable": {
          "description": "Is there a public exploit for the vulnerability",
          "type": "boolean"
        },
        "ticketAssigned": {
          "description": "A flag indicate that the vulnerability is handled in one or more tickets",
          "type": "boolean"
        }
      }
    },
    "PagedData[VulnerabilitiesListViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilitiesListViewModel"
          }
        }
      }
    },
    "VulnerabilityCoverageSimpleViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A vulnerability unique identifier",
          "type": "string"
        },
        "name": {
          "description": "A vulnerability name",
          "type": "string"
        },
        "pluginId": {
          "format": "int32",
          "description": "A plugin identifier",
          "type": "integer"
        },
        "cvssBaseScore": {
          "format": "double",
          "description": "A vulnerability CVSS base score",
          "type": "number"
        }
      }
    },
    "VulnerabilityCoverageFilterViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Vulnerability ID",
          "type": "string"
        },
        "ids": {
          "description": "Vulnerability ID",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "severityFrom": {
          "format": "double",
          "description": "Severity score from",
          "type": "number"
        },
        "severityTo": {
          "format": "double",
          "description": "Severity score to",
          "type": "number"
        },
        "vulnerabilityTagsOneOf": {
          "description": "Tags included in vulnerability. True if at least one tag is present",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValueItem[String]"
          }
        },
        "vulnerabilityTagsAllOf": {
          "description": "Tags included in vulnerability. True if all tags are present",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValueItem[String]"
          }
        },
        "includeInformationRiskLevel": {
          "description": "Include informational vulnerabilities. False ignores the setting",
          "type": "boolean"
        },
        "includeLowRiskLevel": {
          "description": "Include low-severity vulnerabilities. False ignores the setting",
          "type": "boolean"
        },
        "includeMediumRiskLevel": {
          "description": "Include medium-severity vulnerabilities. False ignores the setting",
          "type": "boolean"
        },
        "includeHighRiskLevel": {
          "description": "Include high-severity vulnerabilities. False ignores the setting",
          "type": "boolean"
        },
        "excludePotential": {
          "description": "Exclude potential vulnerabilities",
          "type": "boolean"
        },
        "vulnerabilityBasicFields": {
          "description": "Basic vulnerability fields to search",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterBasicField[VulnerabilityBasicFieldEnum]"
          }
        },
        "isExploitable": {
          "description": "Is there a public exploit for the vulnerability",
          "type": "boolean"
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "VulnerabilitiesCoverageListViewModel": {
      "description": "A list of vulnerabilities coverage.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A vulnerability unique identifier",
          "type": "string"
        },
        "name": {
          "description": "Vulnerability name",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/ScanType"
        },
        "pluginId": {
          "format": "int32",
          "description": "ID of a plug-in that discovers this vulnerability",
          "type": "integer"
        },
        "cvssBaseScore": {
          "format": "double",
          "description": "Severity score",
          "type": "number"
        },
        "riskLevel": {
          "$ref": "#/definitions/VulnRiskLevels"
        },
        "isExploitable": {
          "description": "Is there a public exploit for the vulnerability",
          "type": "boolean"
        }
      }
    },
    "PagedData[VulnerabilitiesCoverageListViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilitiesCoverageListViewModel"
          }
        }
      }
    },
    "AffectedSiteBasicFieldEnum": {
      "format": "int32",
      "description": "Type of fields for affected site on which filter can be set.",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "FilterBasicField[AffectedSiteBasicFieldEnum]": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/AffectedSiteBasicFieldEnum"
        },
        "operator": {
          "$ref": "#/definitions/Operator"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "AffectedSitesFilterViewModel": {
      "type": "object",
      "properties": {
        "vulnerabilityCategoryId": {
          "format": "uuid",
          "description": "Vulnerability category unique identifier",
          "type": "string"
        },
        "wsPluginId": {
          "format": "int32",
          "description": "ID of Web Scan plug-in which reported the vulnerability instance",
          "type": "integer"
        },
        "scanGroupIds": {
          "description": "Scan group unique identifiers to search affected hosts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        },
        "vulnerabilityCategoryIds": {
          "description": "Web Scan categories unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "vulnerabilityStatusIds": {
          "description": "Vulnerability status unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "targetRelatedBasicFields": {
          "description": "Basic target fields to search",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterBasicField[AffectedSiteBasicFieldEnum]"
          }
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "VulnerabilityAffectedSitesViewModel": {
      "description": "Represents base model for showing ungrouped affected sites.",
      "type": "object",
      "properties": {
        "scanId": {
          "format": "uuid",
          "description": "A scan definition unique identifier",
          "type": "string"
        },
        "scanGroup": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "target": {
          "description": "A scan definition name",
          "type": "string"
        },
        "targetSite": {
          "description": "A scan target site",
          "type": "string"
        },
        "attackParameter": {
          "description": "A parameter of the attack",
          "type": "string"
        },
        "attackMethod": {
          "description": "A method of attack",
          "type": "string"
        },
        "vulnerabilityScanDetailId": {
          "format": "uuid",
          "description": "A vulnerability instance unique identifier",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/VulnerabilityStatusViewModelShort"
        },
        "vulnerabilityInstanceBaseUrl": {
          "description": "A base URL of attacked site",
          "type": "string",
          "readOnly": true
        },
        "vulnerabilityCategoryId": {
          "format": "uuid",
          "description": "A vulnerabilitiy category unique identifier",
          "type": "string"
        },
        "referenceId": {
          "description": "A Web Scan category reference identifier",
          "type": "string"
        }
      }
    },
    "PagedData[VulnerabilityAffectedSitesViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilityAffectedSitesViewModel"
          }
        }
      }
    },
    "VulnerabilityAffectedSitesViewModelBase": {
      "description": "Represents Base model for showing affected sites (list and group).",
      "type": "object",
      "properties": {
        "attackParameter": {
          "description": "A parameter of the attack",
          "type": "string"
        },
        "attackMethod": {
          "description": "A method of attack",
          "type": "string"
        },
        "vulnerabilityScanDetailId": {
          "format": "uuid",
          "description": "A vulnerability instance unique identifier",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/VulnerabilityStatusViewModelShort"
        },
        "vulnerabilityInstanceBaseUrl": {
          "description": "A base URL of attacked site",
          "type": "string",
          "readOnly": true
        },
        "vulnerabilityCategoryId": {
          "format": "uuid",
          "description": "A vulnerabilitiy category unique identifier",
          "type": "string"
        },
        "referenceId": {
          "description": "A Web Scan category reference identifier",
          "type": "string"
        }
      }
    },
    "VulnerabilityAffectedSitesGroupedViewModel": {
      "description": "Model for showing grouped affected hosts.",
      "type": "object",
      "properties": {
        "scanId": {
          "format": "uuid",
          "description": "Scan definition unique identifier",
          "type": "string"
        },
        "target": {
          "description": "Scan definition name",
          "type": "string"
        },
        "targetSite": {
          "description": "Target site of an attack",
          "type": "string",
          "readOnly": true
        },
        "scanGroup": {
          "$ref": "#/definitions/NameIdItem[Guid]"
        },
        "findings": {
          "description": "Vulnerability instance findings",
          "type": "string"
        },
        "instances": {
          "description": "Vulnerability instance data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilityAffectedSitesViewModelBase"
          }
        }
      }
    },
    "PagedData[VulnerabilityAffectedSitesGroupedViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilityAffectedSitesGroupedViewModel"
          }
        }
      }
    },
    "ScanReportHistoryFilterModel": {
      "type": "object",
      "properties": {
        "scanDateFrom": {
          "format": "date-time",
          "type": "string"
        },
        "scanDateTo": {
          "format": "date-time",
          "type": "string"
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "ScanReportHistoryListViewModel": {
      "description": "Represents scan report history.",
      "type": "object",
      "properties": {
        "reportId": {
          "format": "uuid",
          "description": "A report unique identifier",
          "type": "string"
        },
        "lastReportId": {
          "format": "uuid",
          "description": "A last report unique identifier",
          "type": "string"
        },
        "scanId": {
          "format": "uuid",
          "description": "A scan unique identfier",
          "type": "string"
        },
        "os": {
          "description": "An operating system",
          "type": "string"
        },
        "scanningMode": {
          "$ref": "#/definitions/ScanningMode"
        },
        "scanType": {
          "$ref": "#/definitions/ScanType"
        },
        "target": {
          "description": "A scan target",
          "type": "string"
        },
        "vulnerabilitiesHigh": {
          "format": "int32",
          "description": "Number of vulnerabilitites with high severity",
          "type": "integer"
        },
        "vulnerabilitiesMedium": {
          "format": "int32",
          "description": "Number of vulnerabilitites with medium severity",
          "type": "integer"
        },
        "vulnerabilitiesLow": {
          "format": "int32",
          "description": "Number of vulnerabilitites with low severity",
          "type": "integer"
        },
        "vulnerabilitiesInformational": {
          "format": "int32",
          "description": "Number of vulnerabilitites with informational severity",
          "type": "integer"
        },
        "change": {
          "$ref": "#/definitions/ScanChange"
        },
        "scanDate": {
          "format": "date-time",
          "description": "A date and time when scan completed",
          "type": "string"
        },
        "compliant": {
          "$ref": "#/definitions/CompliantLevel"
        },
        "compliantType": {
          "$ref": "#/definitions/CompliantType"
        }
      }
    },
    "PagedData[ScanReportHistoryListViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScanReportHistoryListViewModel"
          }
        }
      }
    },
    "ReportStatisticsVulnerabilityByStatusViewModel": {
      "description": "Statistics for status of vulnerability.",
      "type": "object",
      "properties": {
        "countVulnerbilities": {
          "format": "int32",
          "description": "Count vulnerabilities",
          "type": "integer"
        },
        "groupedVulnerabilitiesByStatus": {
          "description": "Counters grouped by status",
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "ReportFindingsAndChangeViewModel": {
      "type": "object",
      "properties": {
        "vulnRiskLevel": {
          "$ref": "#/definitions/VulnRiskLevels"
        },
        "newCount": {
          "format": "int32",
          "description": "A new vulnerability count",
          "type": "integer"
        },
        "fixedCount": {
          "format": "int32",
          "description": "A fixed vulnerability count",
          "type": "integer"
        },
        "totalCount": {
          "format": "int32",
          "description": "A total vulnerability count",
          "type": "integer"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "ReportType": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        10
      ],
      "type": "integer"
    },
    "ReportScanHistoryDataViewModel": {
      "type": "object",
      "properties": {
        "date": {
          "format": "date-time",
          "description": "Date and time when scan occurred",
          "type": "string"
        },
        "vulnerabilitiesQuantity": {
          "format": "int64",
          "description": "Number of vulnerabilities",
          "type": "integer"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "ReportScanHistoryViewModel": {
      "type": "object",
      "properties": {
        "vulnRiskLevel": {
          "$ref": "#/definitions/VulnRiskLevels"
        },
        "scanHistoryData": {
          "description": "A list of scan history data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportScanHistoryDataViewModel"
          }
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "WebScanReportTopViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A vulnerability unique identifier",
          "type": "string"
        },
        "cvssBaseScore": {
          "format": "double",
          "description": "A CVSS base score",
          "type": "number"
        },
        "riskLevel": {
          "$ref": "#/definitions/VulnRiskLevels"
        },
        "name": {
          "description": "A vulnerability name",
          "type": "string"
        }
      }
    },
    "WebScanReportGroupedViewModel": {
      "type": "object",
      "properties": {
        "mostSevereCount": {
          "format": "int32",
          "description": "A counter for the most severe vulnerabilities",
          "type": "integer"
        },
        "newCount": {
          "format": "int32",
          "description": "A counter for new vulnerabilities",
          "type": "integer"
        },
        "fixedCount": {
          "format": "int32",
          "description": "A counter for fixed vulnerabilities",
          "type": "integer"
        },
        "vulnerabilitiesAndFindingsCount": {
          "format": "int32",
          "description": "A counter for vulnerabilities and findings",
          "type": "integer"
        },
        "vulnerabilitiesCount": {
          "format": "int32",
          "description": "A counter for vulnerabilities",
          "type": "integer"
        },
        "informationalCount": {
          "format": "int32",
          "description": "An informationals vulnerabilites counter",
          "type": "integer"
        },
        "mostSevere": {
          "description": "A list of the most severe Web Scan vulnerabilities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebScanReportTopViewModel"
          }
        },
        "new": {
          "description": "A list of new Web Scan vulnerabilities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebScanReportTopViewModel"
          }
        },
        "fixed": {
          "description": "A list of fixed Web Scan vulnerabilities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebScanReportTopViewModel"
          }
        }
      }
    },
    "StateVulnerabilitiesAndFindingsFilterModelEnum": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "WebScanReportFilterModel": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "findings": {
          "$ref": "#/definitions/StateVulnerabilitiesAndFindingsFilterModelEnum"
        },
        "statuses": {
          "description": "A list of unique identifiers for vulnerability statuses",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "showAllStatuses": {
          "description": "A flag that indicates whether to show vulnerabilites with all statuses",
          "type": "boolean"
        },
        "showAllOpenStatuses": {
          "description": "A flag that indicates whether to show vulnerabilities with open statuses",
          "type": "boolean"
        },
        "severities": {
          "description": "A list of severities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnRiskLevels"
          }
        },
        "showAllSeverities": {
          "description": "A flag that indicates whether to show vulnerabilities with all severities",
          "type": "boolean"
        },
        "textFilter": {
          "description": "A text filter",
          "type": "string"
        },
        "companyId": {
          "format": "uuid",
          "type": "string"
        },
        "reportId": {
          "format": "uuid",
          "type": "string"
        },
        "scanId": {
          "format": "uuid",
          "type": "string"
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "WebScanReportCategoryViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A unique identifier for Web Scan category",
          "type": "string"
        },
        "name": {
          "description": "A Web Scan category name",
          "type": "string"
        },
        "wasc": {
          "description": "A WASC vulnerability classification",
          "type": "string"
        },
        "threatType": {
          "description": "Threat type",
          "type": "string"
        },
        "description": {
          "description": "A description",
          "type": "string"
        },
        "shortDescription": {
          "description": "A short description",
          "type": "string"
        },
        "referenceUrl": {
          "description": "A reference URL",
          "type": "string"
        },
        "vulnerabilitiesAndFindingsCount": {
          "format": "int32",
          "description": "A counter for vulnerabilities and findings",
          "type": "integer"
        },
        "vulnerabilitiesCount": {
          "format": "int32",
          "description": "A counter for vulnerabilities",
          "type": "integer"
        },
        "vulnerabilitiesDetailsHighCount": {
          "format": "int32",
          "description": "A high severity vulnerabilities counter",
          "type": "integer"
        },
        "vulnerabilitiesDetailsMediumCount": {
          "format": "int32",
          "description": "A medium severity vulnerabilities counter",
          "type": "integer"
        },
        "vulnerabilitiesDetailsLowCount": {
          "format": "int32",
          "description": "A low severity vulnerabilities counter",
          "type": "integer"
        },
        "vulnerabilitiesDetailsInfoCount": {
          "format": "int32",
          "description": "A info severity vulnerabilities counter",
          "type": "integer"
        },
        "findingsCount": {
          "format": "int32",
          "description": "A findings counter",
          "type": "integer"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "WebScanReportCategoryListViewModel": {
      "type": "object",
      "properties": {
        "webScanReportCategories": {
          "description": "A list of Web Scan report categories",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebScanReportCategoryViewModel"
          }
        }
      }
    },
    "WebScanVulnerabilityPayloadViewModel": {
      "description": "View model for payload to instance of vulnerability.",
      "type": "object",
      "properties": {
        "name": {
          "description": "A name",
          "type": "string"
        },
        "type": {
          "description": "A type",
          "type": "string"
        },
        "value": {
          "description": "A value",
          "type": "string"
        },
        "valueUnsafe": {
          "description": "A value not encoded",
          "type": "string"
        }
      }
    },
    "VulnerabilityImageViewModel": {
      "description": "Represents vulnerability image.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A unique identifier for a vulnerability image",
          "type": "string"
        },
        "content": {
          "format": "byte",
          "description": "A byte array of content",
          "type": "string"
        },
        "contentLength": {
          "format": "int32",
          "description": "A content length",
          "type": "integer"
        },
        "contentType": {
          "description": "A content type",
          "type": "string"
        }
      }
    },
    "WebScanVulnerabilityImageViewModel": {
      "description": "View model for screenshot addded to instance of vulnerability.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A unique identifier for a vulnerability image",
          "type": "string"
        },
        "description": {
          "description": "A vulnerability description",
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/VulnerabilityImageViewModel"
        },
        "imageId": {
          "format": "uuid",
          "description": "A unique identifier for an image",
          "type": "string"
        },
        "name": {
          "description": "A vulnerability image name",
          "type": "string"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "WebScanVulnerabilitiesAndFindingsDetailedViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A unique identifier for vulnerability scan details",
          "type": "string"
        },
        "vulnerabilityCategoryId": {
          "format": "uuid",
          "description": "A unique identifier for vulnerability category",
          "type": "string"
        },
        "statusId": {
          "format": "uuid",
          "description": "A unique identifier for vulnerability status",
          "type": "string"
        },
        "lastAuditorNote": {
          "description": "A last auditor note",
          "type": "string"
        },
        "synopsis": {
          "description": "A synopsis",
          "type": "string"
        },
        "description": {
          "description": "A description",
          "type": "string"
        },
        "background": {
          "description": "A background",
          "type": "string"
        },
        "solution": {
          "description": "A solution",
          "type": "string"
        },
        "findings": {
          "description": "Findings",
          "type": "string"
        },
        "payloads": {
          "description": "A list of payloads",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebScanVulnerabilityPayloadViewModel"
          }
        },
        "method": {
          "description": "A request HTTP method",
          "type": "string"
        },
        "request": {
          "description": "A request body",
          "type": "string"
        },
        "response": {
          "description": "A response body",
          "type": "string"
        },
        "requestUnsafe": {
          "description": "Attack request, not encoded",
          "type": "string"
        },
        "responseUnsafe": {
          "description": "A server response from the attack, not encoded",
          "type": "string"
        },
        "headerResponse": {
          "description": "A header response",
          "type": "string"
        },
        "headerResponseUnsafe": {
          "description": "A server header response from the attack, not encoded",
          "type": "string"
        },
        "baseUrl": {
          "description": "A requested based URL",
          "type": "string"
        },
        "url": {
          "description": "A requested URL",
          "type": "string"
        },
        "variant": {
          "description": "A class variant",
          "type": "string"
        },
        "cvssBaseScore": {
          "format": "double",
          "description": "A CVSS base score",
          "type": "number"
        },
        "severityName": {
          "$ref": "#/definitions/VulnRiskLevels"
        },
        "cvssBaseScoreOriginal": {
          "format": "double",
          "description": "A CVSS base score original",
          "type": "number"
        },
        "cvssVector": {
          "description": "A CVSS vector",
          "type": "string"
        },
        "attachedImages": {
          "description": "A list of attached images",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebScanVulnerabilityImageViewModel"
          }
        },
        "fingerprint": {
          "description": "A list of fingerprints",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebScanVulnerabilityPayloadViewModel"
          }
        },
        "vulnerabilityReferences": {
          "description": "References related to vulnerability provided by OWASP",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilitiesAndFindingsDetailedReferenceViewModel"
          }
        }
      }
    },
    "WebScanReportVulnerabilityCategoryViewModel": {
      "description": "View model with categories appear in Web Scan report.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Unique identifier for a vulnerability category",
          "type": "string"
        },
        "name": {
          "description": "A vulnerability category Name",
          "type": "string"
        },
        "wasc": {
          "description": "Category reference ID for a vulnerability",
          "type": "string"
        },
        "treatType": {
          "description": "Type of thread category of vulnerability in Web Scan report",
          "type": "string"
        }
      }
    },
    "VulnerabilitiesAndFindingsUpdateStatusViewModel": {
      "description": "A list of categories and vulnerability instances to be changed ordered by status and notes.",
      "type": "object",
      "properties": {
        "categoryIds": {
          "description": "A Web Scan category",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "ids": {
          "description": "A vulnerability instance",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "potential": {
          "description": "If a vulnerability instance is potential (option only for System Scan)",
          "type": "boolean"
        },
        "status": {
          "format": "uuid",
          "description": "Status unique identifier",
          "type": "string"
        },
        "auditorNote": {
          "description": "Note for a vulnerability instance",
          "type": "string"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "WebScanReportUpdateStatusesViewModel": {
      "description": "A view model with status, note and filter for vulnerability instance to change.",
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/WebScanReportFilterModel"
        },
        "updateStatuses": {
          "$ref": "#/definitions/VulnerabilitiesAndFindingsUpdateStatusViewModel"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "WSVulnState": {
      "format": "int32",
      "enum": [
        0,
        1
      ],
      "type": "integer"
    },
    "WebScanReportVulnerabilityViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A unique identifier for Web Scan vulnerability details",
          "type": "string"
        },
        "pluginId": {
          "format": "int32",
          "description": "A plugin identifier",
          "type": "integer"
        },
        "pluginGuidId": {
          "format": "uuid",
          "description": "A plug-in unique identifier",
          "type": "string"
        },
        "title": {
          "description": "A title",
          "type": "string"
        },
        "severityName": {
          "$ref": "#/definitions/VulnRiskLevels"
        },
        "severity": {
          "format": "double",
          "description": "A severity decimal value",
          "type": "number"
        },
        "state": {
          "$ref": "#/definitions/WSVulnState"
        },
        "status": {
          "description": "A vulnerability status name",
          "type": "string"
        },
        "statusId": {
          "format": "uuid",
          "description": "A vulnerability status unique identifier",
          "type": "string"
        },
        "statusGroup": {
          "$ref": "#/definitions/StatusGroups"
        },
        "manualId": {
          "format": "uuid",
          "description": "A manual identifier",
          "type": "string"
        },
        "cvssBaseScore": {
          "format": "double",
          "description": "A CVSS base score",
          "type": "number"
        },
        "cvssBaseScoreOriginal": {
          "format": "double",
          "description": "A CVSS base score original",
          "type": "number"
        },
        "cvssVector": {
          "description": "A CVSS vector",
          "type": "string"
        },
        "classVariant": {
          "description": "A class variant",
          "type": "string"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "PagedData[WebScanReportVulnerabilityViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebScanReportVulnerabilityViewModel"
          }
        }
      }
    },
    "WebScanReportViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A unique identifier for a report",
          "type": "string"
        },
        "scanEndDate": {
          "format": "date-time",
          "description": "A scan end date",
          "type": "string"
        },
        "scanStartDate": {
          "format": "date-time",
          "description": "A scan start date",
          "type": "string"
        },
        "relatedSystemScanName": {
          "description": "A related System Scan name. It occurs when Web Scan is linked to an existing System Scan",
          "type": "string"
        },
        "relatedSystemScanHost": {
          "description": "A related System Scan host. It occurs when Web Scan is linked to an existing System Scan",
          "type": "string"
        },
        "relatedSystemScansId": {
          "format": "uuid",
          "description": "A related System Scan id. It occurs when Web Scan is linked to an existing System Scan",
          "type": "string"
        },
        "resourceCount": {
          "format": "int32",
          "description": "A number of scanned resources",
          "type": "integer"
        }
      }
    },
    "ElementOfStructure": {
      "description": "Represents single element of discovered pages structure.",
      "type": "object",
      "properties": {
        "name": {
          "description": "An element name",
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "numberOfElements": {
          "format": "int64",
          "description": "A number of descending elements",
          "type": "integer"
        }
      }
    },
    "DiscoveredPagesViewModel": {
      "description": "Represents discovered pages.",
      "type": "object",
      "properties": {
        "numberOfPages": {
          "format": "int64",
          "description": "A number of discovered pages",
          "type": "integer"
        },
        "discoveredPagesStructure": {
          "description": "A structure of discovered pages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElementOfStructure"
          }
        }
      }
    },
    "WebScanVulnerabilitiesAndFindingsManualViewModel": {
      "type": "object",
      "properties": {
        "vulnerabilityCategoryId": {
          "format": "uuid",
          "description": "Unique identifier for a vulnerability category",
          "type": "string"
        },
        "vulnerabilityStatusId": {
          "format": "uuid",
          "description": "A vulnerability status unique identifier",
          "type": "string"
        },
        "request": {
          "description": "A request",
          "type": "string"
        },
        "method": {
          "description": "A method",
          "type": "string"
        },
        "responseBody": {
          "description": "A response body",
          "type": "string"
        },
        "responseHeader": {
          "description": "A response header",
          "type": "string"
        },
        "payloads": {
          "description": "A payload",
          "type": "string"
        },
        "findings": {
          "description": "Findings",
          "type": "string"
        },
        "baseUrl": {
          "description": "An URL",
          "type": "string"
        },
        "solution": {
          "description": "A solution",
          "type": "string"
        },
        "synopsis": {
          "description": "A synopsis",
          "type": "string"
        },
        "background": {
          "description": "Background",
          "type": "string"
        },
        "severity": {
          "$ref": "#/definitions/VulnRiskLevels"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "ManualVulnerabilityViewModel": {
      "description": "Manual vulnerability view model.",
      "type": "object",
      "properties": {
        "scanId": {
          "format": "uuid",
          "description": "A System Scan unique identifier",
          "type": "string"
        },
        "reportId": {
          "format": "uuid",
          "description": "A report unique identifier",
          "type": "string"
        },
        "vulnerabilityId": {
          "format": "uuid",
          "description": "A vulnerability unique identifier",
          "type": "string"
        },
        "vulnerabilityScanId": {
          "format": "uuid",
          "description": "A unique identifier for vulnerability scan",
          "type": "string"
        },
        "vulnerabilityScanDetailId": {
          "format": "uuid",
          "description": "A unique identifier for vulnerability scan details",
          "type": "string"
        }
      }
    },
    "WebScansImagesDeleteViewModel": {
      "description": "View model to delete images.",
      "type": "object",
      "properties": {
        "vulnerabiltiyImageIds": {
          "description": "A list of unique identifiers for vulnerability images",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "imageIds": {
          "description": "A list of unique identifiers for images",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "isLogicalDelete": {
          "description": "A flag that indicates whether to perform only the logical delete. By default, it is set to true",
          "type": "boolean"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "SystemScanReportViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A System Scan unique identifier",
          "type": "string"
        },
        "compliantType": {
          "$ref": "#/definitions/CompliantType"
        },
        "scanEndDate": {
          "format": "date-time",
          "description": "Date and time when scan ends",
          "type": "string"
        },
        "scanStartDate": {
          "format": "date-time",
          "description": "Date and time when scan starts",
          "type": "string"
        },
        "os": {
          "description": "An operating system",
          "type": "string"
        },
        "macAddress": {
          "description": "MAC address",
          "type": "string"
        },
        "compliant": {
          "$ref": "#/definitions/CompliantLevel"
        }
      }
    },
    "PortLastChanges": {
      "format": "int32",
      "description": "Represents possible changes for a single port.",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "ScanPortChangeType": {
      "format": "int32",
      "description": "Represents possible types of port changes.",
      "enum": [
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "ScanPortViewModel": {
      "description": "Represents port data after scan.",
      "type": "object",
      "properties": {
        "isReappeared": {
          "description": "A flag that indicates whether port reappears",
          "type": "boolean"
        },
        "lastChange": {
          "description": "A list of latest port changes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortLastChanges"
          }
        },
        "createdOn": {
          "format": "date-time",
          "description": "A date and time when this item was created",
          "type": "string"
        },
        "isOpen": {
          "description": "A flag that indicates if the port is open",
          "type": "boolean"
        },
        "service": {
          "description": "A Service of the port. This could be for example unknown, http, or ftp",
          "type": "string"
        },
        "banner": {
          "description": "A Banner. Includes information, such as protocol, server, etc",
          "type": "string"
        },
        "isServiceDetectedByScanner": {
          "description": "A flag that indicates if service has been detected by scanner",
          "type": "boolean"
        },
        "changeType": {
          "$ref": "#/definitions/ScanPortChangeType"
        },
        "id": {
          "format": "uuid",
          "description": "A unique identifier of scan port",
          "type": "string"
        },
        "protocol": {
          "$ref": "#/definitions/ProtocolTypes"
        },
        "number": {
          "format": "int32",
          "description": "A port number",
          "type": "integer"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "SystemScanReportTopViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "A vulnerability unique identifier",
          "type": "string"
        },
        "cvssBaseScore": {
          "format": "double",
          "description": "A CVSS base score",
          "type": "number"
        },
        "riskLevel": {
          "$ref": "#/definitions/VulnRiskLevels"
        },
        "name": {
          "description": "A vulnerability name (diplay name)",
          "type": "string"
        }
      }
    },
    "VulnerabilityDetailsGroupedViewModel": {
      "type": "object",
      "properties": {
        "potentialCount": {
          "format": "int32",
          "description": "A counter of potential vulnerabilities",
          "type": "integer"
        },
        "informationalCount": {
          "format": "int32",
          "description": "A counter of informational vulnerabilities",
          "type": "integer"
        },
        "vulnerabilitiesCount": {
          "format": "int32",
          "description": "A counter of vulnerabilities",
          "type": "integer"
        },
        "vulnerabilitiesAndFindingsCount": {
          "format": "int32",
          "description": "A counter of vulnerabilities and findings",
          "type": "integer"
        },
        "mostSevereCount": {
          "format": "int32",
          "description": "A counter of the most severe vulnerabilities",
          "type": "integer"
        },
        "newCount": {
          "format": "int32",
          "description": "A counter of new vulnerabilities",
          "type": "integer"
        },
        "fixedCount": {
          "format": "int32",
          "description": "A counter of fixed vulnerabilities",
          "type": "integer"
        },
        "mostSevere": {
          "description": "A list of the most severe vulnerabilities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SystemScanReportTopViewModel"
          }
        },
        "new": {
          "description": "A list of new vulnerabilities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SystemScanReportTopViewModel"
          }
        },
        "fixed": {
          "description": "A list of most fixed vulnerabilities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SystemScanReportTopViewModel"
          }
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "VulnTypes": {
      "format": "int32",
      "description": "RiskGroupID = Security_Hole AND TrustLevel GREATER THAN 50) THEN Certain\r\nRiskGroupID = Security_Hole AND TrustLevel LESS or EQUAL THAN 50) THEN Potential\r\nRiskGroupID = Information) THEN Informational",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "VulnReferenceTypeEnum": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "VulnerabilityReferenceViewModel": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "A display name",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/VulnReferenceTypeEnum"
        },
        "customReferenceType": {
          "description": "Custom reference type. Taken into account only when Type set to CUSTOM",
          "type": "string"
        },
        "url": {
          "description": "A URL to vulnerability reference description",
          "type": "string"
        }
      }
    },
    "SystemScanVulnerabilitiesAndFindingsManualViewModel": {
      "type": "object",
      "properties": {
        "vulnerabilityType": {
          "$ref": "#/definitions/VulnTypes"
        },
        "vulnerabilityStatusId": {
          "format": "uuid",
          "description": "A vulnerability status",
          "type": "string"
        },
        "port": {
          "description": "A port number",
          "type": "string"
        },
        "protocol": {
          "$ref": "#/definitions/ProtocolTypes"
        },
        "findings": {
          "description": "Findings",
          "type": "string"
        },
        "vulnerabilityName": {
          "description": "A vulnerability name",
          "type": "string"
        },
        "synopsis": {
          "description": "A synopsis",
          "type": "string"
        },
        "vulnerabilityDescription": {
          "description": "A vulnerability description",
          "type": "string"
        },
        "solution": {
          "description": "A solution",
          "type": "string"
        },
        "cvssBaseScore": {
          "format": "double",
          "description": "A CVSS base score",
          "type": "number"
        },
        "cvssVector": {
          "description": "A CVSS vector",
          "type": "string"
        },
        "vulnerabilityCategory": {
          "description": "A vulnerability family",
          "type": "string"
        },
        "denialOfService": {
          "description": "A flag that indicates if it is denial of service",
          "type": "boolean"
        },
        "referencesOrLinks": {
          "description": "References or links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilityReferenceViewModel"
          }
        },
        "cves": {
          "description": "A comma-delimited CVEs",
          "type": "string"
        },
        "resultMessages": {
          "description": "A list of messages that are connected to view models produced by API methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISimpleMessage"
          }
        },
        "language": {
          "description": "A language in which the text is returned",
          "type": "string"
        },
        "messageLevel": {
          "$ref": "#/definitions/MsgLevel"
        },
        "httpStatusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "public": {
          "description": "A flag that indicates whether a message is public. For now, set the value to 'true'",
          "type": "boolean"
        }
      }
    },
    "ReportStatisticsVulnerabilityCountersViewModel": {
      "description": "Vulnerability and findings statisitics.",
      "type": "object",
      "properties": {
        "totalVulnerbilities": {
          "format": "int32",
          "description": "Total number of vulnerabilities",
          "type": "integer"
        },
        "totalFindings": {
          "format": "int32",
          "description": "Total number of findings",
          "type": "integer"
        },
        "newVulnerablityCounter": {
          "format": "int32",
          "description": "Number of new vulnerabilities",
          "type": "integer"
        },
        "newFindingsCounter": {
          "format": "int32",
          "description": "Number of new findings",
          "type": "integer"
        },
        "potentialVulnerabilityCounter": {
          "format": "int32",
          "description": "Number of potential vulnerabilities",
          "type": "integer"
        },
        "informationalCounter": {
          "format": "int32",
          "description": "Number of informational findings",
          "type": "integer"
        },
        "mitigatedCounter": {
          "format": "int32",
          "description": "Number of mitigated vulnerabilities",
          "type": "integer"
        },
        "changedCounter": {
          "format": "int32",
          "description": "Number of changed vulnerabilities",
          "type": "integer"
        }
      }
    },
    "VulnerabilitiesAndFindingsAggregatedDetailedViewModel": {
      "type": "object",
      "properties": {
        "synopsis": {
          "description": "A synopsis",
          "type": "string"
        },
        "description": {
          "description": "A description",
          "type": "string"
        },
        "solution": {
          "description": "A solution",
          "type": "string"
        },
        "findings": {
          "description": "Findings",
          "type": "string"
        },
        "tags": {
          "description": "A list with tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagViewModel"
          }
        },
        "cvssVector": {
          "description": "CVSS vector",
          "type": "string"
        },
        "denialOfService": {
          "description": "A flag that indicates denial of service",
          "type": "boolean"
        },
        "bugTraqReferences": {
          "description": "A list of BugTraq references",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilitiesAndFindingsDetailedReferenceViewModel"
          }
        },
        "cveReferences": {
          "description": "A list of CVE references",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilitiesAndFindingsDetailedReferenceViewModel"
          }
        },
        "exploitReferences": {
          "description": "A Exploit references",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilitiesAndFindingsDetailedReferenceViewModel"
          }
        },
        "pluginIds": {
          "description": "A list of unique identifiers for plug-ins",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameIdItem[Guid]"
          }
        },
        "isExploitable": {
          "description": "Is vulnerability exploitable",
          "type": "boolean"
        },
        "tagTechnicalName": {
          "type": "string"
        },
        "riskLevel": {
          "$ref": "#/definitions/VulnRiskLevels"
        },
        "cvssBaseScore": {
          "format": "double",
          "type": "number"
        },
        "title": {
          "type": "string"
        },
        "findingsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "VulnerabilitiesAndFindingsFilterModel": {
      "description": "Vulnerability and findings filter model.",
      "type": "object",
      "properties": {
        "findings": {
          "$ref": "#/definitions/StateVulnerabilitiesAndFindingsFilterModelEnum"
        },
        "statuses": {
          "description": "A list of unique identifiers for vulnerability statuses",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "showAllStatuses": {
          "description": "A flag that indicates whether to show vulnerabilities with all statuses",
          "type": "boolean"
        },
        "showAllOpenStatuses": {
          "description": "A flag that indicates whether to show vulnerabilities with open statuses",
          "type": "boolean"
        },
        "excludePotentialFindings": {
          "description": "A flag that indicates whether to exclude potential findings in results",
          "type": "boolean"
        },
        "ignoreTagFilter": {
          "description": "A flag that indicates whether to ignore tag filter",
          "type": "boolean"
        },
        "severities": {
          "description": "A list of severities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnRiskLevels"
          }
        },
        "showAllSeverities": {
          "type": "boolean"
        },
        "showOnlyWithTags": {
          "description": "A list of tags to filter results",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isExploitable": {
          "type": "boolean"
        },
        "defaultFilter": {
          "description": "... a default filter",
          "type": "boolean"
        },
        "sortPrimary": {
          "description": "A string that is the primary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is the primary field for the sorting order (descending)",
          "type": "boolean"
        },
        "sortSecondary": {
          "description": "A string that is the secondary field for the sorting order (ascending)",
          "type": "string"
        },
        "sortSecondaryByDesc": {
          "description": "A string that is the secondary field for the sorting order (descending)",
          "type": "boolean"
        }
      }
    },
    "IVulnerabilitiesAndFindingsBaseViewModel": {
      "description": "Represents vulnerability and findings base interface.",
      "type": "object",
      "properties": {
        "riskLevel": {
          "$ref": "#/definitions/VulnRiskLevels"
        },
        "cvssBaseScore": {
          "format": "double",
          "description": "A CVSS base score value. Range [0,10]",
          "type": "number"
        },
        "title": {
          "description": "A title",
          "type": "string"
        },
        "isExploitable": {
          "description": "Is vulnerability exploitable",
          "type": "boolean"
        }
      }
    },
    "PagedData[IVulnerabilitiesAndFindingsBaseViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IVulnerabilitiesAndFindingsBaseViewModel"
          }
        }
      }
    },
    "SSVulnState": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "ITagView": {
      "type": "object",
      "properties": {
        "component": {
          "description": "A component name",
          "type": "string"
        },
        "type": {
          "description": "Tag type. E.g. Scan, Ticket, Scan Group,",
          "type": "string"
        },
        "source": {
          "description": "Indicates the source of the tag. E.g. System Scan",
          "type": "string"
        },
        "technicalName": {
          "description": "A technical name",
          "type": "string"
        },
        "friendlyName": {
          "description": "A friendly name",
          "type": "string"
        },
        "manual": {
          "description": "A flag that indicates whether the tag was entered manually",
          "type": "boolean"
        }
      }
    },
    "VulnerabilitiesAndFindingsDetailedViewModel": {
      "type": "object",
      "properties": {
        "lastAuditorNote": {
          "description": "A last auditor note",
          "type": "string"
        },
        "synopsis": {
          "description": "A synopsis",
          "type": "string"
        },
        "description": {
          "description": "A description",
          "type": "string"
        },
        "solution": {
          "description": "A solution",
          "type": "string"
        },
        "findings": {
          "description": "Findings",
          "type": "string"
        },
        "protocol": {
          "$ref": "#/definitions/ProtocolTypes"
        },
        "port": {
          "format": "int32",
          "description": "A port",
          "type": "integer"
        },
        "tags": {
          "description": "List of tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagViewModel"
          }
        },
        "cvssVector": {
          "description": "A CVSS vector",
          "type": "string"
        },
        "denialOfService": {
          "description": "A flag that indicates if it is denial of service",
          "type": "boolean"
        },
        "isExploitable": {
          "description": "A flag that indicates if the vulnerability has a known exploit",
          "type": "boolean"
        },
        "vulnerabilityCategory": {
          "description": "A vulnerability family",
          "type": "string"
        },
        "bugTraqReferences": {
          "description": "A list of BUGTRAQ references",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilitiesAndFindingsDetailedReferenceViewModel"
          }
        },
        "cveReferences": {
          "description": "A list of CVE references",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilitiesAndFindingsDetailedReferenceViewModel"
          }
        },
        "exploitReferences": {
          "description": "A list of Exploit references",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilitiesAndFindingsDetailedReferenceViewModel"
          }
        },
        "otherReferences": {
          "description": "A list of other references",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilitiesAndFindingsDetailedReferenceViewModel"
          }
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "pluginId": {
          "format": "int32",
          "description": "A plug-in unique identifier",
          "type": "integer"
        },
        "pluginGuidId": {
          "format": "uuid",
          "description": "A plugin identifier",
          "type": "string"
        },
        "riskLevel": {
          "$ref": "#/definitions/VulnRiskLevels"
        },
        "cvssBaseScore": {
          "format": "double",
          "description": "A CVSS base score",
          "type": "number"
        },
        "potential": {
          "description": "A flag that indicates whether the vulnerability is potential",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/SSVulnState"
        },
        "status": {
          "$ref": "#/definitions/VulnerabilityStatusViewModelShort"
        },
        "title": {
          "description": "A title  (display name)",
          "type": "string"
        },
        "tagCollection": {
          "description": "A list of collections",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ITagView"
          }
        },
        "manualId": {
          "format": "uuid",
          "description": "A manual identifier",
          "type": "string"
        },
        "isTicketAssigned": {
          "description": "Flag indicates that vulnerability instance is assigned to ticket",
          "type": "boolean"
        }
      }
    },
    "VulnerabilitiesAndFindingsViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "pluginId": {
          "format": "int32",
          "description": "A plug-in unique identifier",
          "type": "integer"
        },
        "pluginGuidId": {
          "format": "uuid",
          "description": "A plugin identifier",
          "type": "string"
        },
        "riskLevel": {
          "$ref": "#/definitions/VulnRiskLevels"
        },
        "cvssBaseScore": {
          "format": "double",
          "description": "A CVSS base score",
          "type": "number"
        },
        "potential": {
          "description": "A flag that indicates whether the vulnerability is potential",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/SSVulnState"
        },
        "status": {
          "$ref": "#/definitions/VulnerabilityStatusViewModelShort"
        },
        "title": {
          "description": "A title  (display name)",
          "type": "string"
        },
        "tagCollection": {
          "description": "A list of collections",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ITagView"
          }
        },
        "manualId": {
          "format": "uuid",
          "description": "A manual identifier",
          "type": "string"
        },
        "isExploitable": {
          "description": "Flag indicates whether a vulnerability is exploitable",
          "type": "boolean"
        },
        "isTicketAssigned": {
          "description": "Flag indicates that vulnerability instance is assigned to ticket",
          "type": "boolean"
        }
      }
    },
    "PagedData[VulnerabilitiesAndFindingsViewModel]": {
      "type": "object",
      "properties": {
        "totalItemCount": {
          "format": "int32",
          "description": "A total items count",
          "type": "integer"
        },
        "additionalSummary": {
          "description": "An additional summary",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "pageSize": {
          "format": "int32",
          "description": "A page size",
          "type": "integer"
        },
        "numberOfPages": {
          "format": "int32",
          "description": "A number of pages",
          "type": "integer"
        },
        "sortPrimary": {
          "description": "A string that is primary ascending sort method in the result data",
          "type": "string"
        },
        "sortPrimaryByDesc": {
          "description": "A string that is primary descending sort method in the result data",
          "type": "boolean"
        },
        "items": {
          "description": "A list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VulnerabilitiesAndFindingsViewModel"
          }
        }
      }
    },
    "Dictionary[string][string]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Dictionary[string][Object]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "Object"
        }
      }
    },
    "Dictionary[Guid][Boolean]": {
      "properties": {
        "key": {
          "type": "Guid"
        },
        "value": {
          "type": "Boolean"
        }
      }
    },
    "Dictionary[string][Int32]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "Int32"
        }
      }
    },
    "Dictionary[Guid][String[]]": {
      "properties": {
        "key": {
          "type": "Guid"
        },
        "value": {
          "type": "String[]"
        }
      }
    },
    "Dictionary[string][NetworkFilterViewModel]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "NetworkFilterViewModel"
        }
      }
    },
    "Dictionary[string][VulnerabilityScansFilterModel]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "VulnerabilityScansFilterModel"
        }
      }
    },
    "Dictionary[string][LogsFilterViewModel]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "LogsFilterViewModel"
        }
      }
    },
    "Dictionary[string][UserFilterViewModel]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "UserFilterViewModel"
        }
      }
    },
    "Dictionary[string][VulnerabilityScanTemplatesFilterModel]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "VulnerabilityScanTemplatesFilterModel"
        }
      }
    },
    "Dictionary[string][BaseFilterModel]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "BaseFilterModel"
        }
      }
    },
    "Dictionary[string][VulnerabilityFilterViewModel]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "VulnerabilityFilterViewModel"
        }
      }
    },
    "Dictionary[string][VulnerabilitiesAndFindingsFilterModel]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "VulnerabilitiesAndFindingsFilterModel"
        }
      }
    },
    "Dictionary[string][WebScanReportFilterModel]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "WebScanReportFilterModel"
        }
      }
    },
    "Dictionary[string][AffectedHostsFilterViewModel]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "AffectedHostsFilterViewModel"
        }
      }
    },
    "Dictionary[string][AffectedSitesFilterViewModel]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "AffectedSitesFilterViewModel"
        }
      }
    },
    "Dictionary[string][PortsFilterModel]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "PortsFilterModel"
        }
      }
    },
    "Dictionary[string][HostsFilterViewModel]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "HostsFilterViewModel"
        }
      }
    },
    "Dictionary[string][SummaryReportsFilterModel]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "SummaryReportsFilterModel"
        }
      }
    },
    "Dictionary[string][SummaryReportCrudViewModel]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "SummaryReportCrudViewModel"
        }
      }
    },
    "Dictionary[string][SummaryReportCreateViewModel]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "SummaryReportCreateViewModel"
        }
      }
    },
    "Dictionary[string][SummaryReportUpdateViewModel]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "SummaryReportUpdateViewModel"
        }
      }
    },
    "Dictionary[string][VulnerabilitiesOnSiteFilter]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "VulnerabilitiesOnSiteFilter"
        }
      }
    },
    "Dictionary[string][VulnerabilitiesOnHostFilter]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "VulnerabilitiesOnHostFilter"
        }
      }
    },
    "Dictionary[string][TicketsFilterViewModel]": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "TicketsFilterViewModel"
        }
      }
    },
    "Collection[MessageNotificationViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MessageNotificationViewModel"
      }
    },
    "Collection[DiscoveryScansListViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DiscoveryScansListViewModel"
      }
    },
    "Collection[VulnerabilityScansListViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VulnerabilityScansListViewModel"
      }
    },
    "Collection[NameValueItem[Int32]]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/NameValueItem[Int32]"
      }
    },
    "Collection[ScanningProgressViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ScanningProgressViewModel"
      }
    },
    "Collection[ScanViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ScanViewModel"
      }
    },
    "Collection[ChangelogDataViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ChangelogDataViewModel"
      }
    },
    "Collection[RssDataViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RssDataViewModel"
      }
    },
    "Collection[ReportScanHistoryViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ReportScanHistoryViewModel"
      }
    },
    "Collection[NameValueItem[String]]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/NameValueItem[String]"
      }
    },
    "Collection[SystemTimeZonesViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SystemTimeZonesViewModel"
      }
    },
    "Collection[SimpleUserViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SimpleUserViewModel"
      }
    },
    "Collection[OrganizationBasicInfoViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/OrganizationBasicInfoViewModel"
      }
    },
    "Collection[VulnerabilityStatuses]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VulnerabilityStatuses"
      }
    },
    "Collection[TagViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TagViewModel"
      }
    },
    "Collection[ScanPortSimpleViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ScanPortSimpleViewModel"
      }
    },
    "Collection[NameIdItem[Guid]]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/NameIdItem[Guid]"
      }
    },
    "Collection[ScanPortViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ScanPortViewModel"
      }
    },
    "Collection[ReportFindingsAndChangeViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ReportFindingsAndChangeViewModel"
      }
    },
    "Collection[SimpleTicketViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SimpleTicketViewModel"
      }
    },
    "Collection[WebScanReportVulnerabilityCategoryViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/WebScanReportVulnerabilityCategoryViewModel"
      }
    },
    "Collection[NumberOfVulnerabilityByCategoryViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/NumberOfVulnerabilityByCategoryViewModel"
      }
    },
    "Collection[VulnerabilityCategoryViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VulnerabilityCategoryViewModel"
      }
    },
    "Collection[WebScanVulnerabilityCategory]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/WebScanVulnerabilityCategory"
      }
    },
    "Collection[VulnerabilityStatusViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VulnerabilityStatusViewModel"
      }
    },
    "Collection[GroupCountViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GroupCountViewModel"
      }
    },
    "Collection[RoleViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RoleViewModel"
      }
    },
    "Collection[AddUsersToGroupViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AddUsersToGroupViewModel"
      }
    },
    "Collection[SummaryReportUpdateViewModel]": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SummaryReportUpdateViewModel"
      }
    }
  },
  "tags": [
    {
      "name": "Assets monitoring",
      "description": "manage network assets."
    },
    {
      "name": "Network scans",
      "description": "manage system scan and web scan targets."
    },
    {
      "name": "Discovery scans",
      "description": "manage discovery scans targets and perform actions such as start and stop."
    },
    {
      "name": "Assets",
      "description": "manage collected information about assets."
    },
    {
      "name": "Vulnerability scan reports",
      "description": "monitor and filter latest vulnerability reports."
    },
    {
      "name": "Discovery scan reports",
      "description": "provides access to discovery scan reports."
    },
    {
      "name": "Summary reports",
      "description": "provides access to summary reports and templates."
    },
    {
      "name": "Vulnerabilities",
      "description": "provides access to a list of all vulnerabilities which have been discovered in your environment."
    },
    {
      "name": "Scheduling templates",
      "description": "provides access to scan schedules."
    },
    {
      "name": "Scan templates",
      "description": "provides access to scan configuration templates for system, web and discovery scans."
    },
    {
      "name": "Scan groups",
      "description": "provides access to a list of available vulnerability scan groups."
    },
    {
      "name": "Users",
      "description": "manage available users, user groups and roles."
    },
    {
      "name": "Tickets",
      "description": "provides access to ticketing system."
    },
    {
      "name": "Audit trail",
      "description": "provides access to diagnostic data."
    },
    {
      "name": "My profile",
      "description": "provides access to profile information."
    },
    {
      "name": "News",
      "description": "provides access to information feeds."
    },
    {
      "name": "Scan nodes",
      "description": "provides access to available scan nodes."
    },
    {
      "name": "Uncategorized actions",
      "description": "miscellaneous methods."
    }
  ]
}